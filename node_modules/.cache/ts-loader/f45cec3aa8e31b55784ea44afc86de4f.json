{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--13-3!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/classes.ts","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/classes.ts","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0IF9tYXhCeSBmcm9tICJsb2Rhc2gvbWF4QnkiOwppbXBvcnQgX2ZsYXR0ZW5EZWVwIGZyb20gImxvZGFzaC9mbGF0dGVuRGVlcCI7CmltcG9ydCBfY2xvbmVEZWVwIGZyb20gImxvZGFzaC9jbG9uZURlZXAiOwp2YXIgbGV2ZWxfc2VwID0gJz4nOwp2YXIgQ09MT1JfVU5DQVQgPSAnI0NDQyc7CmV4cG9ydCB2YXIgZGVmYXVsdENhdGVnb3JpZXMgPSBbewogIG5hbWU6IFsnV29yayddLAogIHJ1bGU6IHsKICAgIHR5cGU6ICdyZWdleCcsCiAgICByZWdleDogJ0dvb2dsZSBEb2NzfGxpYnJlb2ZmaWNlfFJlVGV4dCcKICB9LAogIGRhdGE6IHsKICAgIGNvbG9yOiAnIzBGMCcKICB9Cn0sIHsKICBuYW1lOiBbJ1dvcmsnLCAnUHJvZ3JhbW1pbmcnXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdHaXRIdWJ8U3RhY2sgT3ZlcmZsb3d8Qml0QnVja2V0fEdpdGxhYnx2aW18U3B5ZGVyfGthdGUnCiAgfQp9LCB7CiAgbmFtZTogWydXb3JrJywgJ1Byb2dyYW1taW5nJywgJ0FjdGl2aXR5V2F0Y2gnXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdBY3Rpdml0eVdhdGNofGF3LScsCiAgICBpZ25vcmVfY2FzZTogdHJ1ZQogIH0KfSwgewogIG5hbWU6IFsnTWVkaWEnLCAnR2FtZXMnXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdNaW5lY3JhZnR8UmltV29ybGQnCiAgfSwKICBkYXRhOiB7CiAgICBjb2xvcjogJyMwRkYnCiAgfQp9LCB7CiAgbmFtZTogWydNZWRpYScsICdWaWRlbyddLAogIHJ1bGU6IHsKICAgIHR5cGU6ICdyZWdleCcsCiAgICByZWdleDogJ1lvdVR1YmV8UGxleHxWTEMnCiAgfQp9LCB7CiAgbmFtZTogWydNZWRpYScsICdTb2NpYWwgTWVkaWEnXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdyZWRkaXR8RmFjZWJvb2t8VHdpdHRlcnxJbnN0YWdyYW18ZGV2UmFudCcsCiAgICBpZ25vcmVfY2FzZTogdHJ1ZQogIH0KfSwgewogIG5hbWU6IFsnTWVkaWEnLCAnTXVzaWMnXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdTcG90aWZ5fERlZXplcicsCiAgICBpZ25vcmVfY2FzZTogdHJ1ZQogIH0KfSwgewogIG5hbWU6IFsnQ29tbXMnLCAnSU0nXSwKICBydWxlOiB7CiAgICB0eXBlOiAncmVnZXgnLAogICAgcmVnZXg6ICdNZXNzZW5nZXJ8VGVsZWdyYW18U2lnbmFsfFdoYXRzQXBwfFJhbWJveHxTbGFja3xSaW90fERpc2NvcmQnCiAgfQp9LCB7CiAgbmFtZTogWydDb21tcycsICdFbWFpbCddLAogIHJ1bGU6IHsKICAgIHR5cGU6ICdyZWdleCcsCiAgICByZWdleDogJ0dtYWlsfFRodW5kZXJiaXJkfG11dHR8YWxwaW5lJwogIH0KfSwgewogIG5hbWU6IFsnVW5jYXRlZ29yaXplZCddLAogIHJ1bGU6IHsKICAgIHR5cGU6IG51bGwKICB9LAogIGRhdGE6IHsKICAgIGNvbG9yOiBDT0xPUl9VTkNBVAogIH0KfV07CgpmdW5jdGlvbiBhbm5vdGF0ZShjKSB7CiAgdmFyIGNoID0gYy5uYW1lOwogIGMubmFtZV9wcmV0dHkgPSBjaC5qb2luKGxldmVsX3NlcCk7CiAgYy5zdWJuYW1lID0gY2guc2xpY2UoLTEpWzBdOwogIGMucGFyZW50ID0gY2gubGVuZ3RoID4gMSA/IGNoLnNsaWNlKDAsIC0xKSA6IG51bGw7CiAgYy5kZXB0aCA9IGNoLmxlbmd0aCAtIDE7CiAgcmV0dXJuIGM7Cn0KCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNaXNzaW5nUGFyZW50cyhjbGFzc2VzKSB7CiAgY2xhc3NlcyA9IF9jbG9uZURlZXAoY2xhc3Nlcyk7CiAgY2xhc3NlcyA9IGNsYXNzZXMuc2xpY2UoKS5tYXAoZnVuY3Rpb24gKGMpIHsKICAgIHJldHVybiBhbm5vdGF0ZShjKTsKICB9KTsKICB2YXIgYWxsX2Z1bGxfbmFtZXMgPSBuZXcgU2V0KGNsYXNzZXMubWFwKGZ1bmN0aW9uIChjKSB7CiAgICByZXR1cm4gYy5uYW1lLmpvaW4obGV2ZWxfc2VwKTsKICB9KSk7CgogIGZ1bmN0aW9uIF9jcmVhdGVNaXNzaW5nKGNoaWxkcmVuKSB7CiAgICBjaGlsZHJlbi5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgcmV0dXJuIGMucGFyZW50OwogICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChwKSB7CiAgICAgIHJldHVybiAhIXA7CiAgICB9KS5tYXAoZnVuY3Rpb24gKHApIHsKICAgICAgdmFyIG5hbWUgPSBwLmpvaW4obGV2ZWxfc2VwKTsKCiAgICAgIGlmIChwICYmICFhbGxfZnVsbF9uYW1lcy5oYXMobmFtZSkpIHsKICAgICAgICB2YXIgbmV3X3BhcmVudCA9IGFubm90YXRlKHsKICAgICAgICAgIG5hbWU6IHAsCiAgICAgICAgICBydWxlOiB7CiAgICAgICAgICAgIHR5cGU6IG51bGwKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBjbGFzc2VzLnB1c2gobmV3X3BhcmVudCk7CiAgICAgICAgYWxsX2Z1bGxfbmFtZXMuYWRkKG5hbWUpOwoKICAgICAgICBfY3JlYXRlTWlzc2luZyhbbmV3X3BhcmVudF0pOwogICAgICB9CiAgICB9KTsKICB9CgogIF9jcmVhdGVNaXNzaW5nKGNsYXNzZXMpOwoKICByZXR1cm4gY2xhc3NlczsKfQpleHBvcnQgZnVuY3Rpb24gYnVpbGRfY2F0ZWdvcnlfaGllcmFyY2h5KGNsYXNzZXMpIHsKICBjbGFzc2VzID0gY3JlYXRlTWlzc2luZ1BhcmVudHMoY2xhc3Nlcyk7CgogIGZ1bmN0aW9uIGFzc2lnbkNoaWxkcmVuKGNsYXNzZXNfYXRfbGV2ZWwpIHsKICAgIHJldHVybiBjbGFzc2VzX2F0X2xldmVsLm1hcChmdW5jdGlvbiAoY2xzKSB7CiAgICAgIGNscy5jaGlsZHJlbiA9IGNsYXNzZXMuZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgIHJldHVybiBjaGlsZC5wYXJlbnQgJiYgY2xzLm5hbWUgPyBKU09OLnN0cmluZ2lmeShjaGlsZC5wYXJlbnQpID09IEpTT04uc3RyaW5naWZ5KGNscy5uYW1lKSA6IGZhbHNlOwogICAgICB9KTsKICAgICAgYXNzaWduQ2hpbGRyZW4oY2xzLmNoaWxkcmVuKTsKICAgICAgcmV0dXJuIGNsczsKICAgIH0pOwogIH0KCiAgcmV0dXJuIGFzc2lnbkNoaWxkcmVuKGNsYXNzZXMuZmlsdGVyKGZ1bmN0aW9uIChjKSB7CiAgICByZXR1cm4gIWMucGFyZW50OwogIH0pKTsKfQpleHBvcnQgZnVuY3Rpb24gZmxhdHRlbl9jYXRlZ29yeV9oaWVyYXJjaHkoaGllcikgewogIHJldHVybiBfZmxhdHRlbkRlZXAoaGllci5tYXAoZnVuY3Rpb24gKGgpIHsKICAgIHZhciBsZXZlbCA9IFtoLCBmbGF0dGVuX2NhdGVnb3J5X2hpZXJhcmNoeShoLmNoaWxkcmVuKV07CiAgICBoLmNoaWxkcmVuID0gW107CiAgICByZXR1cm4gbGV2ZWw7CiAgfSkpOwp9CmV4cG9ydCBmdW5jdGlvbiBzYXZlQ2xhc3NlcyhjbGFzc2VzKSB7CiAgbG9jYWxTdG9yYWdlLmNsYXNzZXMgPSBKU09OLnN0cmluZ2lmeShjbGFzc2VzKTsKICBjb25zb2xlLmxvZygnU2F2ZWQgY2xhc3NlcycsIGxvY2FsU3RvcmFnZS5jbGFzc2VzKTsKfQpleHBvcnQgZnVuY3Rpb24gbG9hZENsYXNzZXMoKSB7CiAgdmFyIGNsYXNzZXNfanNvbiA9IGxvY2FsU3RvcmFnZS5jbGFzc2VzOwoKICBpZiAoY2xhc3Nlc19qc29uICYmIGNsYXNzZXNfanNvbi5sZW5ndGggPj0gMSkgewogICAgcmV0dXJuIEpTT04ucGFyc2UoY2xhc3Nlc19qc29uKTsKICB9IGVsc2UgewogICAgcmV0dXJuIGRlZmF1bHRDYXRlZ29yaWVzOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gbG9hZENsYXNzZXNGb3JRdWVyeSgpIHsKICByZXR1cm4gbG9hZENsYXNzZXMoKS5maWx0ZXIoZnVuY3Rpb24gKGMpIHsKICAgIHJldHVybiBjLnJ1bGUudHlwZSAhPT0gbnVsbDsKICB9KS5tYXAoZnVuY3Rpb24gKGMpIHsKICAgIHJldHVybiBbYy5uYW1lLCBjLnJ1bGVdOwogIH0pOwp9CgpmdW5jdGlvbiBwaWNrRGVlcGVzdChjYXRlZ29yaWVzKSB7CiAgcmV0dXJuIF9tYXhCeShjYXRlZ29yaWVzLCBmdW5jdGlvbiAoYykgewogICAgcmV0dXJuIGMubmFtZS5sZW5ndGg7CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBtYXRjaFN0cmluZyhzdHIsIGNhdGVnb3JpZXMpIHsKICBpZiAoIWNhdGVnb3JpZXMpIHsKICAgIGNvbnNvbGUubG9nKCdDYXRlZ29yaWVzIG5vdCBwYXNzZWQsIGxvYWRpbmcuLi4gKGlmIHlvdSBzZWUgdGhpcyBvdXRzaWRlIG9mIGEgdGVzdCwgeW91IHNob3VsZCBwcm9iYWJseSBwYXNzIHRoZW0pJyk7CiAgICBjYXRlZ29yaWVzID0gbG9hZENsYXNzZXMoKTsKICB9CgogIHZhciBtYXRjaGluZ0NhdHMgPSBjYXRlZ29yaWVzLmZpbHRlcihmdW5jdGlvbiAoYykgewogICAgcmV0dXJuIGMucnVsZS50eXBlID09ICdyZWdleCc7CiAgfSkuZmlsdGVyKGZ1bmN0aW9uIChjKSB7CiAgICB2YXIgcmUgPSBSZWdFeHAoYy5ydWxlLnJlZ2V4LCBjLnJ1bGUuaWdub3JlX2Nhc2UgPyAnaScgOiAnJyk7CiAgICByZXR1cm4gcmUudGVzdChzdHIpOwogIH0pOwogIGlmIChtYXRjaGluZ0NhdHMubGVuZ3RoID4gMCkgcmV0dXJuIHBpY2tEZWVwZXN0KG1hdGNoaW5nQ2F0cyk7CiAgcmV0dXJuIG51bGw7Cn0="},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/classes.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nconst level_sep = '>';\n\ninterface Rule {\n  type: string;\n  regex?: string;\n  ignore_case?: boolean;\n}\n\nexport interface Category {\n  id?: number;\n  name: string[];\n  name_pretty?: string;\n  subname?: string;\n  rule: Rule;\n  data?: any;\n  depth?: number;\n  parent?: string[];\n  children?: Category[];\n}\n\nconst COLOR_UNCAT = '#CCC';\n\n// The default categories\n// Should be run through createMissingParents before being used in most cases.\nexport const defaultCategories: Category[] = [\n  {\n    name: ['Work'],\n    rule: { type: 'regex', regex: 'Google Docs|libreoffice|ReText' },\n    data: { color: '#0F0' },\n  },\n  {\n    name: ['Work', 'Programming'],\n    rule: { type: 'regex', regex: 'GitHub|Stack Overflow|BitBucket|Gitlab|vim|Spyder|kate' },\n  },\n  {\n    name: ['Work', 'Programming', 'ActivityWatch'],\n    rule: { type: 'regex', regex: 'ActivityWatch|aw-', ignore_case: true },\n  },\n  {\n    name: ['Media', 'Games'],\n    rule: { type: 'regex', regex: 'Minecraft|RimWorld' },\n    data: { color: '#0FF' },\n  },\n  { name: ['Media', 'Video'], rule: { type: 'regex', regex: 'YouTube|Plex|VLC' } },\n  {\n    name: ['Media', 'Social Media'],\n    rule: { type: 'regex', regex: 'reddit|Facebook|Twitter|Instagram|devRant', ignore_case: true },\n  },\n  { name: ['Media', 'Music'], rule: { type: 'regex', regex: 'Spotify|Deezer', ignore_case: true } },\n  {\n    name: ['Comms', 'IM'],\n    rule: { type: 'regex', regex: 'Messenger|Telegram|Signal|WhatsApp|Rambox|Slack|Riot|Discord' },\n  },\n  { name: ['Comms', 'Email'], rule: { type: 'regex', regex: 'Gmail|Thunderbird|mutt|alpine' } },\n  { name: ['Uncategorized'], rule: { type: null }, data: { color: COLOR_UNCAT } },\n];\n\nfunction annotate(c: Category) {\n  const ch = c.name;\n  c.name_pretty = ch.join(level_sep);\n  c.subname = ch.slice(-1)[0];\n  c.parent = ch.length > 1 ? ch.slice(0, -1) : null;\n  c.depth = ch.length - 1;\n  return c;\n}\n\nexport function createMissingParents(classes: Category[]): Category[] {\n  // Creates parents for categories that are missing theirs (implicit parents)\n  classes = _.cloneDeep(classes);\n  classes = classes.slice().map(c => annotate(c));\n  const all_full_names = new Set(classes.map(c => c.name.join(level_sep)));\n\n  function _createMissing(children: Category[]) {\n    children\n      .map(c => c.parent)\n      .filter(p => !!p)\n      .map(p => {\n        const name = p.join(level_sep);\n        if (p && !all_full_names.has(name)) {\n          const new_parent = annotate({ name: p, rule: { type: null } });\n          //console.log('Creating missing parent:', new_parent);\n          classes.push(new_parent);\n          all_full_names.add(name);\n          // New parent might not be top-level, so we need to recurse\n          _createMissing([new_parent]);\n        }\n      });\n  }\n\n  _createMissing(classes);\n  return classes;\n}\n\nexport function build_category_hierarchy(classes: Category[]): Category[] {\n  classes = createMissingParents(classes);\n\n  function assignChildren(classes_at_level: Category[]) {\n    return classes_at_level.map(cls => {\n      cls.children = classes.filter(child => {\n        return child.parent && cls.name\n          ? JSON.stringify(child.parent) == JSON.stringify(cls.name)\n          : false;\n      });\n      assignChildren(cls.children);\n      return cls;\n    });\n  }\n\n  return assignChildren(classes.filter(c => !c.parent));\n}\n\nexport function flatten_category_hierarchy(hier: Category[]): Category[] {\n  return _.flattenDeep(\n    hier.map(h => {\n      const level = [h, flatten_category_hierarchy(h.children)];\n      h.children = [];\n      return level;\n    })\n  );\n}\n\nexport function saveClasses(classes: Category[]) {\n  localStorage.classes = JSON.stringify(classes);\n  console.log('Saved classes', localStorage.classes);\n}\n\nexport function loadClasses(): Category[] {\n  const classes_json = localStorage.classes;\n  if (classes_json && classes_json.length >= 1) {\n    return JSON.parse(classes_json);\n  } else {\n    return defaultCategories;\n  }\n}\n\nexport function loadClassesForQuery(): [string[], Rule][] {\n  return loadClasses()\n    .filter(c => c.rule.type !== null)\n    .map(c => {\n      return [c.name, c.rule];\n    });\n}\n\nfunction pickDeepest(categories: Category[]) {\n  return _.maxBy(categories, c => c.name.length);\n}\n\nexport function matchString(str: string, categories: Category[] | null): Category | null {\n  if (!categories) {\n    console.log(\n      'Categories not passed, loading... (if you see this outside of a test, you should probably pass them)'\n    );\n    categories = loadClasses();\n  }\n  const matchingCats = categories\n    .filter(c => c.rule.type == 'regex')\n    .filter(c => {\n      const re = RegExp(c.rule.regex, c.rule.ignore_case ? 'i' : '');\n      return re.test(str);\n    });\n  if (matchingCats.length > 0) return pickDeepest(matchingCats);\n  return null;\n}\n"],"sourceRoot":""}]}