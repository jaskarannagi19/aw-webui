{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--13-3!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/VisTimeline.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/VisTimeline.vue","mtime":1622830085278},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgX21heCBmcm9tICJsb2Rhc2gvbWF4IjsKaW1wb3J0IF9taW4gZnJvbSAibG9kYXNoL21pbiI7CmltcG9ydCBfbWFwIGZyb20gImxvZGFzaC9tYXAiOwppbXBvcnQgX3NvcnRCeSBmcm9tICJsb2Rhc2gvc29ydEJ5IjsKaW1wb3J0IF9maWx0ZXIgZnJvbSAibG9kYXNoL2ZpbHRlciI7CmltcG9ydCBfZWFjaCBmcm9tICJsb2Rhc2gvZWFjaCI7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IENvbG9yIGZyb20gJ2NvbG9yJzsKaW1wb3J0IHsgYnVpbGRUb29sdGlwIH0gZnJvbSAnLi4vdXRpbC90b29sdGlwLmpzJzsKaW1wb3J0IHsgZ2V0Q29sb3JGcm9tU3RyaW5nLCBnZXRUaXRsZUF0dHIgfSBmcm9tICcuLi91dGlsL2NvbG9yJzsKaW1wb3J0IHsgVGltZWxpbmUgfSBmcm9tICd2aXMtdGltZWxpbmUvZXNuZXh0JzsKaW1wb3J0ICd2aXMtdGltZWxpbmUvc3R5bGVzL3Zpcy10aW1lbGluZS1ncmFwaDJkLmNzcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgYnVja2V0czogewogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIHNob3dSb3dMYWJlbHM6IHsKICAgICAgdHlwZTogQm9vbGVhbgogICAgfSwKICAgIHF1ZXJpZWRJbnRlcnZhbDogewogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIHNob3dRdWVyaWVkSW50ZXJ2YWw6IHsKICAgICAgdHlwZTogQm9vbGVhbgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVsaW5lOiBudWxsLAogICAgICBmaWx0ZXJTaG9ydEV2ZW50czogdHJ1ZSwKICAgICAgb3B0aW9uczogewogICAgICAgIHpvb21NaW46IDEwMDAgKiA2MCwKICAgICAgICB6b29tTWF4OiAxMDAwICogNjAgKiA2MCAqIDI0ICogMzEgKiAzLAogICAgICAgIHN0YWNrOiBmYWxzZSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBmb2xsb3dNb3VzZTogdHJ1ZSwKICAgICAgICAgIG92ZXJmbG93TWV0aG9kOiAnY2FwJwogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydERhdGE6IGZ1bmN0aW9uIGNoYXJ0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gW107CgogICAgICBfZWFjaCh0aGlzLmJ1Y2tldHMsIGZ1bmN0aW9uIChidWNrZXQsIGJpZHgpIHsKICAgICAgICBpZiAoYnVja2V0LmV2ZW50cyA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2YXIgZXZlbnRzID0gYnVja2V0LmV2ZW50czsKCiAgICAgICAgaWYgKF90aGlzLmZpbHRlclNob3J0RXZlbnRzKSB7CiAgICAgICAgICBldmVudHMgPSBfZmlsdGVyKGV2ZW50cywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgcmV0dXJuIGUuZHVyYXRpb24gPiAxOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBldmVudHMgPSBfc29ydEJ5KGV2ZW50cywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIHJldHVybiBlLnRpbWVzdGFtcDsKICAgICAgICB9KTsKCiAgICAgICAgX2VhY2goZXZlbnRzLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZGF0YS5wdXNoKFtiaWR4LCBnZXRUaXRsZUF0dHIoYnVja2V0LCBlKSwgYnVpbGRUb29sdGlwKGJ1Y2tldCwgZSksIG5ldyBEYXRlKGUudGltZXN0YW1wKSwgbmV3IERhdGUobW9tZW50KGUudGltZXN0YW1wKS5hZGQoZS5kdXJhdGlvbiwgJ3NlY29uZHMnKS52YWx1ZU9mKCkpLCBnZXRDb2xvckZyb21TdHJpbmcoZ2V0VGl0bGVBdHRyKGJ1Y2tldCwgZSkpXSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgYnVja2V0czogZnVuY3Rpb24gYnVja2V0cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAodGhpcy5idWNrZXRzLmxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgZ3JvdXBzID0gX21hcCh0aGlzLmJ1Y2tldHMsIGZ1bmN0aW9uIChidWNrZXQsIGJpZHgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWQ6IGJpZHgsCiAgICAgICAgICBjb250ZW50OiBfdGhpczIuc2hvd1Jvd0xhYmVscyA/IGJ1Y2tldC5pZCA6ICcnCiAgICAgICAgfTsKICAgICAgfSk7CgogICAgICB2YXIgaXRlbXMgPSBfbWFwKHRoaXMuY2hhcnREYXRhLCBmdW5jdGlvbiAocm93LCBpKSB7CiAgICAgICAgdmFyIGJnQ29sb3IgPSByb3dbNV07CiAgICAgICAgdmFyIGJvcmRlckNvbG9yID0gQ29sb3IoYmdDb2xvcikuZGFya2VuKDAuMyk7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBTdHJpbmcoaSksCiAgICAgICAgICBncm91cDogcm93WzBdLAogICAgICAgICAgY29udGVudDogcm93WzFdLAogICAgICAgICAgdGl0bGU6IHJvd1syXSwKICAgICAgICAgIHN0YXJ0OiBtb21lbnQocm93WzNdKSwKICAgICAgICAgIGVuZDogbW9tZW50KHJvd1s0XSksCiAgICAgICAgICBzdHlsZTogImJhY2tncm91bmQtY29sb3I6ICIuY29uY2F0KGJnQ29sb3IsICI7IGJvcmRlci1jb2xvcjogIikuY29uY2F0KGJvcmRlckNvbG9yKQogICAgICAgIH07CiAgICAgIH0pOwoKICAgICAgaWYgKGdyb3Vwcy5sZW5ndGggPiAwICYmIGl0ZW1zLmxlbmd0aCA+IDApIHsKICAgICAgICBpZiAodGhpcy5xdWVyaWVkSW50ZXJ2YWwgJiYgdGhpcy5zaG93UXVlcmllZEludGVydmFsKSB7CiAgICAgICAgICB2YXIgZHVyYXRpb24gPSB0aGlzLnF1ZXJpZWRJbnRlcnZhbFsxXS5kaWZmKHRoaXMucXVlcmllZEludGVydmFsWzBdLCAnc2Vjb25kcycpOwogICAgICAgICAgZ3JvdXBzLnB1c2goewogICAgICAgICAgICBpZDogU3RyaW5nKGdyb3Vwcy5sZW5ndGgpLAogICAgICAgICAgICBjb250ZW50OiAncXVlcmllZCBpbnRlcnZhbCcKICAgICAgICAgIH0pOwogICAgICAgICAgaXRlbXMucHVzaCh7CiAgICAgICAgICAgIGlkOiBTdHJpbmcoaXRlbXMubGVuZ3RoICsgMSksCiAgICAgICAgICAgIGdyb3VwOiBncm91cHMubGVuZ3RoIC0gMSwKICAgICAgICAgICAgdGl0bGU6IGJ1aWxkVG9vbHRpcCh7CiAgICAgICAgICAgICAgdHlwZTogJ3Rlc3QnCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICB0aW1lc3RhbXA6IHRoaXMucXVlcmllZEludGVydmFsWzBdLAogICAgICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICB0aXRsZTogJ3Rlc3QnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgY29udGVudDogJ3F1ZXJ5JywKICAgICAgICAgICAgc3RhcnQ6IHRoaXMucXVlcmllZEludGVydmFsWzBdLAogICAgICAgICAgICBlbmQ6IHRoaXMucXVlcmllZEludGVydmFsWzFdLAogICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNhYWE7IGhlaWdodDogMTBweCcKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdmFyIHN0YXJ0ID0gdGhpcy5xdWVyaWVkSW50ZXJ2YWwgJiYgdGhpcy5xdWVyaWVkSW50ZXJ2YWxbMF0gfHwgX21pbihfbWFwKGl0ZW1zLCBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uc3RhcnQ7CiAgICAgICAgfSkpOwoKICAgICAgICB2YXIgZW5kID0gdGhpcy5xdWVyaWVkSW50ZXJ2YWwgJiYgdGhpcy5xdWVyaWVkSW50ZXJ2YWxbMV0gfHwgX21heChfbWFwKGl0ZW1zLCBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uZW5kOwogICAgICAgIH0pKTsKCiAgICAgICAgdGhpcy5vcHRpb25zLm1pbiA9IHN0YXJ0OwogICAgICAgIHRoaXMub3B0aW9ucy5tYXggPSBlbmQ7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXRPcHRpb25zKHRoaXMub3B0aW9ucyk7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXRXaW5kb3coc3RhcnQsIGVuZCk7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXREYXRhKHsKICAgICAgICAgIGdyb3VwczogZ3JvdXBzLAogICAgICAgICAgaXRlbXM6IGl0ZW1zCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBlbCA9IF90aGlzMy4kZWwucXVlcnlTZWxlY3RvcignI3Zpc3VhbGl6YXRpb24nKTsKCiAgICAgIF90aGlzMy50aW1lbGluZSA9IG5ldyBUaW1lbGluZShlbCwgW10sIFtdLCBfdGhpczMub3B0aW9ucyk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/VisTimeline.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Color from 'color';\nimport { buildTooltip } from '../util/tooltip.js';\nimport { getColorFromString, getTitleAttr } from '../util/color';\n\nimport { Timeline } from 'vis-timeline/esnext';\nimport 'vis-timeline/styles/vis-timeline-graph2d.css';\n\nexport default {\n  props: {\n    buckets: { type: Array },\n    showRowLabels: { type: Boolean },\n    queriedInterval: { type: Array },\n    showQueriedInterval: { type: Boolean },\n  },\n  data() {\n    return {\n      timeline: null,\n      filterShortEvents: true,\n      options: {\n        zoomMin: 1000 * 60, // 10min in milliseconds\n        zoomMax: 1000 * 60 * 60 * 24 * 31 * 3, // about three months in milliseconds\n        stack: false,\n        tooltip: {\n          followMouse: true,\n          overflowMethod: 'cap',\n        },\n      },\n    };\n  },\n  computed: {\n    chartData() {\n      const data = [];\n      _.each(this.buckets, (bucket, bidx) => {\n        if (bucket.events === undefined) {\n          return;\n        }\n        let events = bucket.events;\n        // Filter out events shorter than 1 second (notably including 0-duration events)\n        // TODO: Use flooding instead, preferably with some additional method of removing/simplifying short events for even greater performance\n        if (this.filterShortEvents) {\n          events = _.filter(events, e => e.duration > 1);\n        }\n        events = _.sortBy(events, e => e.timestamp);\n        _.each(events, e => {\n          data.push([\n            bidx,\n            getTitleAttr(bucket, e),\n            buildTooltip(bucket, e),\n            new Date(e.timestamp),\n            new Date(moment(e.timestamp).add(e.duration, 'seconds').valueOf()),\n            getColorFromString(getTitleAttr(bucket, e)),\n          ]);\n        });\n      });\n      return data;\n    },\n  },\n  watch: {\n    buckets() {\n      // For some reason, an object is passed here, after which the correct array arrives\n      if (this.buckets.length === undefined) {\n        //console.log(\"I told you so!\")\n        return;\n      }\n\n      // Build groups\n      const groups = _.map(this.buckets, (bucket, bidx) => {\n        return { id: bidx, content: this.showRowLabels ? bucket.id : '' };\n      });\n\n      // Build items\n      const items = _.map(this.chartData, (row, i) => {\n        const bgColor = row[5];\n        const borderColor = Color(bgColor).darken(0.3);\n        return {\n          id: String(i),\n          group: row[0],\n          content: row[1],\n          title: row[2],\n          start: moment(row[3]),\n          end: moment(row[4]),\n          style: `background-color: ${bgColor}; border-color: ${borderColor}`,\n        };\n      });\n\n      if (groups.length > 0 && items.length > 0) {\n        if (this.queriedInterval && this.showQueriedInterval) {\n          const duration = this.queriedInterval[1].diff(this.queriedInterval[0], 'seconds');\n          groups.push({ id: String(groups.length), content: 'queried interval' });\n          items.push({\n            id: String(items.length + 1),\n            group: groups.length - 1,\n            title: buildTooltip(\n              { type: 'test' },\n              {\n                timestamp: this.queriedInterval[0],\n                duration: duration,\n                data: { title: 'test' },\n              }\n            ),\n            content: 'query',\n            start: this.queriedInterval[0],\n            end: this.queriedInterval[1],\n            style: 'background-color: #aaa; height: 10px',\n          });\n        }\n\n        const start =\n          (this.queriedInterval && this.queriedInterval[0]) ||\n          _.min(_.map(items, item => item.start));\n        const end =\n          (this.queriedInterval && this.queriedInterval[1]) ||\n          _.max(_.map(items, item => item.end));\n        this.options.min = start;\n        this.options.max = end;\n        this.timeline.setOptions(this.options);\n        this.timeline.setWindow(start, end);\n        this.timeline.setData({ groups: groups, items: items });\n      }\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const el = this.$el.querySelector('#visualization');\n      this.timeline = new Timeline(el, [], [], this.options);\n    });\n  },\n};\n"],"sourceRoot":""}]}