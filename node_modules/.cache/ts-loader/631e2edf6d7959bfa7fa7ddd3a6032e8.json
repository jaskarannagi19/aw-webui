{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--13-3!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/queries.ts","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/queries.ts","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS9qYXNrYXJhbi9jb2RlL2phc2thcmFuL2FjdGl2aXR5d2F0Y2gvYXctc2VydmVyLXJ1c3QvYXctd2VidWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9lYWNoIGZyb20gImxvZGFzaC9lYWNoIjsKaW1wb3J0IF9maWx0ZXIgZnJvbSAibG9kYXNoL2ZpbHRlciI7CmltcG9ydCBfaW5jbHVkZXMgZnJvbSAibG9kYXNoL2luY2x1ZGVzIjsKaW1wb3J0IF9maW5kIGZyb20gImxvZGFzaC9maW5kIjsKaW1wb3J0IF9tYXAgZnJvbSAibG9kYXNoL21hcCI7CgpmdW5jdGlvbiBxdWVyeXN0cl90b19hcnJheShxdWVyeXN0cikgewogIHJldHVybiBxdWVyeXN0ci5zcGxpdCgnOycpLmZpbHRlcihmdW5jdGlvbiAobCkgewogICAgcmV0dXJuIGw7CiAgfSkubWFwKGZ1bmN0aW9uIChsKSB7CiAgICByZXR1cm4gbCArICc7JzsKICB9KTsKfQoKZnVuY3Rpb24gZXNjYXBlX2RvdWJsZXF1b3RlKHMpIHsKICByZXR1cm4gcy5yZXBsYWNlKC8iL2csICdcXCInKTsKfQoKZnVuY3Rpb24gaXNEZXNrdG9wUGFyYW1zKG9iamVjdCkgewogIHJldHVybiAnYmlkX3dpbmRvdycgaW4gb2JqZWN0Owp9CgpmdW5jdGlvbiBpc0FuZHJvaWRQYXJhbXMob2JqZWN0KSB7CiAgcmV0dXJuICdiaWRfYW5kcm9pZCcgaW4gb2JqZWN0Owp9CgpleHBvcnQgZnVuY3Rpb24gY2Fub25pY2FsRXZlbnRzKHBhcmFtcykgewogIHZhciBjbGFzc2VzX3N0ciA9IEpTT04uc3RyaW5naWZ5KHBhcmFtcy5jbGFzc2VzKS5yZXBsYWNlKC9cXFxcL2csICdcXCcpOwogIHZhciBjYXRfZmlsdGVyX3N0ciA9IEpTT04uc3RyaW5naWZ5KHBhcmFtcy5maWx0ZXJfY2xhc3Nlcyk7CiAgdmFyIGJpZF93aW5kb3cgPSBpc0Rlc2t0b3BQYXJhbXMocGFyYW1zKSA/IHBhcmFtcy5iaWRfd2luZG93IDogcGFyYW1zLmJpZF9hbmRyb2lkOwogIHJldHVybiBbImV2ZW50cyA9IGZsb29kKHF1ZXJ5X2J1Y2tldChcIiIuY29uY2F0KGJpZF93aW5kb3csICJcIikpOyIpLCBpc0FuZHJvaWRQYXJhbXMocGFyYW1zKSA/ICdldmVudHMgPSBtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFsiYXBwIl0pOycgOiAnJywgaXNEZXNrdG9wUGFyYW1zKHBhcmFtcykgPyAibm90X2FmayA9IGZsb29kKHF1ZXJ5X2J1Y2tldChcIiIuY29uY2F0KHBhcmFtcy5iaWRfYWZrLCAiXCIpKTtcbiAgICAgICAgIG5vdF9hZmsgPSBmaWx0ZXJfa2V5dmFscyhub3RfYWZrLCBcInN0YXR1c1wiLCBbXCJub3QtYWZrXCJdKTsiKSA6ICcnLCBwYXJhbXMuYmlkX2Jyb3dzZXJzID8gaXNEZXNrdG9wUGFyYW1zKHBhcmFtcykgJiYgYnJvd3NlckV2ZW50cyhwYXJhbXMpICsgKHBhcmFtcy5pbmNsdWRlX2F1ZGlibGUgPyAiYXVkaWJsZV9ldmVudHMgPSBmaWx0ZXJfa2V5dmFscyhicm93c2VyX2V2ZW50cywgXCJhdWRpYmxlXCIsIFt0cnVlXSk7XG4gICAgICAgICAgICAgbm90X2FmayA9IHBlcmlvZF91bmlvbihub3RfYWZrLCBhdWRpYmxlX2V2ZW50cyk7IiA6ICcnKSA6ICcnLCBpc0Rlc2t0b3BQYXJhbXMocGFyYW1zKSAmJiBwYXJhbXMuZmlsdGVyX2FmayA/ICdldmVudHMgPSBmaWx0ZXJfcGVyaW9kX2ludGVyc2VjdChldmVudHMsIG5vdF9hZmspOycgOiAnJywgcGFyYW1zLmNsYXNzZXMgPyAiZXZlbnRzID0gY2F0ZWdvcml6ZShldmVudHMsICIuY29uY2F0KGNsYXNzZXNfc3RyLCAiKTsiKSA6ICcnLCBwYXJhbXMuZmlsdGVyX2NsYXNzZXMgPyAiZXZlbnRzID0gZmlsdGVyX2tleXZhbHMoZXZlbnRzLCBcIiRjYXRlZ29yeVwiLCAiLmNvbmNhdChjYXRfZmlsdGVyX3N0ciwgIik7IikgOiAnJ10uam9pbignXG4nKTsKfQp2YXIgZGVmYXVsdF9saW1pdCA9IDEwMDsKZXhwb3J0IGZ1bmN0aW9uIGFwcFF1ZXJ5KGFwcGJ1Y2tldCwgY2xhc3NlcywgZmlsdGVyQ2F0ZWdvcmllcykgewogIGFwcGJ1Y2tldCA9IGVzY2FwZV9kb3VibGVxdW90ZShhcHBidWNrZXQpOwogIHZhciBwYXJhbXMgPSB7CiAgICBiaWRfYW5kcm9pZDogYXBwYnVja2V0LAogICAgY2xhc3NlczogY2xhc3NlcywKICAgIGZpbHRlcl9jbGFzc2VzOiBmaWx0ZXJDYXRlZ29yaWVzCiAgfTsKICB2YXIgY29kZSA9ICJcbiAgICAiLmNvbmNhdChjYW5vbmljYWxFdmVudHMocGFyYW1zKSwgIlxuXG4gICAgdGl0bGVfZXZlbnRzID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFtcImFwcFwiLCBcImNsYXNzbmFtZVwiXSkpO1xuICAgIGFwcF9ldmVudHMgICA9IHNvcnRfYnlfZHVyYXRpb24obWVyZ2VfZXZlbnRzX2J5X2tleXModGl0bGVfZXZlbnRzLCBbXCJhcHBcIl0pKTtcbiAgICBjYXRfZXZlbnRzICAgPSBzb3J0X2J5X2R1cmF0aW9uKG1lcmdlX2V2ZW50c19ieV9rZXlzKGV2ZW50cywgW1wiJGNhdGVnb3J5XCJdKSk7XG5cbiAgICBldmVudHMgPSBzb3J0X2J5X3RpbWVzdGFtcChldmVudHMpO1xuICAgIGFwcF9ldmVudHMgID0gbGltaXRfZXZlbnRzKGFwcF9ldmVudHMsICIpLmNvbmNhdChkZWZhdWx0X2xpbWl0LCAiKTtcbiAgICB0aXRsZV9ldmVudHMgID0gbGltaXRfZXZlbnRzKHRpdGxlX2V2ZW50cywgIikuY29uY2F0KGRlZmF1bHRfbGltaXQsICIpO1xuICAgIGR1cmF0aW9uID0gc3VtX2R1cmF0aW9ucyhldmVudHMpO1xuICAgIFJFVFVSTiAgPSB7XCJhcHBfZXZlbnRzXCI6IGFwcF9ldmVudHMsIFwidGl0bGVfZXZlbnRzXCI6IHRpdGxlX2V2ZW50cywgXCJjYXRfZXZlbnRzXCI6IGNhdF9ldmVudHMsIFwiZHVyYXRpb25cIjogZHVyYXRpb24sIFwiYWN0aXZlX2V2ZW50c1wiOiBhcHBfZXZlbnRzfTtcbiAgIik7CiAgcmV0dXJuIHF1ZXJ5c3RyX3RvX2FycmF5KGNvZGUpOwp9CnZhciBicm93c2VyX2FwcG5hbWVzID0gewogIGNocm9tZTogWydHb29nbGUgQ2hyb21lJywgJ0dvb2dsZS1jaHJvbWUnLCAnY2hyb21lLmV4ZScsICdnb29nbGUtY2hyb21lLXN0YWJsZScsICdDaHJvbWl1bScsICdDaHJvbWl1bS1icm93c2VyJywgJ0Nocm9taXVtLWJyb3dzZXItY2hyb21pdW0nLCAnY2hyb21pdW0uZXhlJywgJ0dvb2dsZS1jaHJvbWUtYmV0YScsICdHb29nbGUtY2hyb21lLXVuc3RhYmxlJywgJ0JyYXZlLWJyb3dzZXInXSwKICBmaXJlZm94OiBbJ0ZpcmVmb3gnLCAnRmlyZWZveC5leGUnLCAnZmlyZWZveCcsICdmaXJlZm94LmV4ZScsICdGaXJlZm94IERldmVsb3BlciBFZGl0aW9uJywgJ2ZpcmVmb3hkZXZlbG9wZXJlZGl0aW9uJywgJ0ZpcmVmb3gtZXNyJywgJ0ZpcmVmb3ggQmV0YScsICdOaWdodGx5J10sCiAgb3BlcmE6IFsnb3BlcmEuZXhlJywgJ09wZXJhJ10sCiAgYnJhdmU6IFsnYnJhdmUuZXhlJ10sCiAgZWRnZTogWydtc2VkZ2UuZXhlJywgJ01pY3Jvc29mdCBFZGdlJ10sCiAgdml2YWxkaTogWydWaXZhbGRpLXN0YWJsZScsICdWaXZhbGRpLXNuYXBzaG90JywgJ3ZpdmFsZGkuZXhlJ10KfTsKCmZ1bmN0aW9uIGJyb3dzZXJzV2l0aEJ1Y2tldHMoYnJvd3NlcmJ1Y2tldHMpIHsKICB2YXIgYnJvd3Nlcm5hbWVfdG9fYnVja2V0aWQgPSBfbWFwKE9iamVjdC5rZXlzKGJyb3dzZXJfYXBwbmFtZXMpLCBmdW5jdGlvbiAoYnJvd3Nlck5hbWUpIHsKICAgIHZhciBidWNrZXRJZCA9IF9maW5kKGJyb3dzZXJidWNrZXRzLCBmdW5jdGlvbiAoYnVja2V0X2lkKSB7CiAgICAgIHJldHVybiBfaW5jbHVkZXMoYnVja2V0X2lkLCBicm93c2VyTmFtZSk7CiAgICB9KTsKCiAgICByZXR1cm4gW2Jyb3dzZXJOYW1lLCBidWNrZXRJZF07CiAgfSk7CgogIHJldHVybiBfZmlsdGVyKGJyb3dzZXJuYW1lX3RvX2J1Y2tldGlkLCBmdW5jdGlvbiAoX3JlZikgewogICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgYnVja2V0SWQgPSBfcmVmMlsxXTsKCiAgICByZXR1cm4gYnVja2V0SWQgIT09IHVuZGVmaW5lZDsKICB9KTsKfQoKZnVuY3Rpb24gYnJvd3NlckV2ZW50cyhwYXJhbXMpIHsKICB2YXIgY29kZSA9ICJcbiAgICBicm93c2VyX2V2ZW50cyA9IFtdO1xuICAiOwoKICBfZWFjaChicm93c2Vyc1dpdGhCdWNrZXRzKHBhcmFtcy5iaWRfYnJvd3NlcnMpLCBmdW5jdGlvbiAoX3JlZjMpIHsKICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSwKICAgICAgICBicm93c2VyTmFtZSA9IF9yZWY0WzBdLAogICAgICAgIGJ1Y2tldElkID0gX3JlZjRbMV07CgogICAgdmFyIGJyb3dzZXJfYXBwbmFtZXNfc3RyID0gSlNPTi5zdHJpbmdpZnkoYnJvd3Nlcl9hcHBuYW1lc1ticm93c2VyTmFtZV0pOwogICAgY29kZSArPSAiZXZlbnRzXyIuY29uY2F0KGJyb3dzZXJOYW1lLCAiID0gZmxvb2QocXVlcnlfYnVja2V0KFwiIikuY29uY2F0KGJ1Y2tldElkLCAiXCIpKTtcbiAgICAgICB3aW5kb3dfIikuY29uY2F0KGJyb3dzZXJOYW1lLCAiID0gZmlsdGVyX2tleXZhbHMoZXZlbnRzLCBcImFwcFwiLCAiKS5jb25jYXQoYnJvd3Nlcl9hcHBuYW1lc19zdHIsICIpO1xuICAgICAgIGV2ZW50c18iKS5jb25jYXQoYnJvd3Nlck5hbWUsICIgPSBmaWx0ZXJfcGVyaW9kX2ludGVyc2VjdChldmVudHNfIikuY29uY2F0KGJyb3dzZXJOYW1lLCAiLCB3aW5kb3dfIikuY29uY2F0KGJyb3dzZXJOYW1lLCAiKTtcbiAgICAgICBldmVudHNfIikuY29uY2F0KGJyb3dzZXJOYW1lLCAiID0gc3BsaXRfdXJsX2V2ZW50cyhldmVudHNfIikuY29uY2F0KGJyb3dzZXJOYW1lLCAiKTtcbiAgICAgICBicm93c2VyX2V2ZW50cyA9IGNvbmNhdChicm93c2VyX2V2ZW50cywgZXZlbnRzXyIpLmNvbmNhdChicm93c2VyTmFtZSwgIik7XG4gICAgICAgYnJvd3Nlcl9ldmVudHMgPSBzb3J0X2J5X3RpbWVzdGFtcChicm93c2VyX2V2ZW50cyk7Iik7CiAgfSk7CgogIHJldHVybiBjb2RlOwp9CgpleHBvcnQgZnVuY3Rpb24gZnVsbERlc2t0b3BRdWVyeShicm93c2VyYnVja2V0cywgd2luZG93YnVja2V0LCBhZmtidWNrZXQpIHsKICB2YXIgZmlsdGVyQUZLID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB0cnVlOwogIHZhciBjbGFzc2VzID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgPyBhcmd1bWVudHNbNF0gOiB1bmRlZmluZWQ7CiAgdmFyIGZpbHRlckNhdGVnb3JpZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSA/IGFyZ3VtZW50c1s1XSA6IHVuZGVmaW5lZDsKICB2YXIgaW5jbHVkZV9hdWRpYmxlID0gYXJndW1lbnRzLmxlbmd0aCA+IDYgPyBhcmd1bWVudHNbNl0gOiB1bmRlZmluZWQ7CiAgYnJvd3NlcmJ1Y2tldHMgPSBfbWFwKGJyb3dzZXJidWNrZXRzLCBlc2NhcGVfZG91YmxlcXVvdGUpOwogIHdpbmRvd2J1Y2tldCA9IGVzY2FwZV9kb3VibGVxdW90ZSh3aW5kb3didWNrZXQpOwogIGFma2J1Y2tldCA9IGVzY2FwZV9kb3VibGVxdW90ZShhZmtidWNrZXQpOwogIHZhciBwYXJhbXMgPSB7CiAgICBiaWRfd2luZG93OiB3aW5kb3didWNrZXQsCiAgICBiaWRfYWZrOiBhZmtidWNrZXQsCiAgICBiaWRfYnJvd3NlcnM6IGJyb3dzZXJidWNrZXRzLAogICAgY2xhc3NlczogY2xhc3NlcywKICAgIGZpbHRlcl9jbGFzc2VzOiBmaWx0ZXJDYXRlZ29yaWVzLAogICAgZmlsdGVyX2FmazogZmlsdGVyQUZLLAogICAgaW5jbHVkZV9hdWRpYmxlOiBpbmNsdWRlX2F1ZGlibGUKICB9OwogIHJldHVybiBxdWVyeXN0cl90b19hcnJheSgiXG4gICAgIi5jb25jYXQoY2Fub25pY2FsRXZlbnRzKHBhcmFtcyksICJcbiAgICB0aXRsZV9ldmVudHMgPSBzb3J0X2J5X2R1cmF0aW9uKG1lcmdlX2V2ZW50c19ieV9rZXlzKGV2ZW50cywgW1wiYXBwXCIsIFwidGl0bGVcIl0pKTtcbiAgICBhcHBfZXZlbnRzICAgPSBzb3J0X2J5X2R1cmF0aW9uKG1lcmdlX2V2ZW50c19ieV9rZXlzKHRpdGxlX2V2ZW50cywgW1wiYXBwXCJdKSk7XG4gICAgY2F0X2V2ZW50cyAgID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFtcIiRjYXRlZ29yeVwiXSkpO1xuXG4gICAgYXBwX2V2ZW50cyAgPSBsaW1pdF9ldmVudHMoYXBwX2V2ZW50cywgIikuY29uY2F0KGRlZmF1bHRfbGltaXQsICIpO1xuICAgIHRpdGxlX2V2ZW50cyAgPSBsaW1pdF9ldmVudHModGl0bGVfZXZlbnRzLCAiKS5jb25jYXQoZGVmYXVsdF9saW1pdCwgIik7XG4gICAgZHVyYXRpb24gPSBzdW1fZHVyYXRpb25zKGV2ZW50cyk7XG4gICAgIikgKyAiXG4gICAgYnJvd3Nlcl9ldmVudHMgPSBzcGxpdF91cmxfZXZlbnRzKGJyb3dzZXJfZXZlbnRzKTtcbiAgICBicm93c2VyX3VybHMgPSBtZXJnZV9ldmVudHNfYnlfa2V5cyhicm93c2VyX2V2ZW50cywgW1widXJsXCJdKTtcbiAgICBicm93c2VyX3VybHMgPSBzb3J0X2J5X2R1cmF0aW9uKGJyb3dzZXJfdXJscyk7XG4gICAgYnJvd3Nlcl91cmxzID0gbGltaXRfZXZlbnRzKGJyb3dzZXJfdXJscywgIi5jb25jYXQoZGVmYXVsdF9saW1pdCwgIik7XG4gICAgYnJvd3Nlcl9kb21haW5zID0gbWVyZ2VfZXZlbnRzX2J5X2tleXMoYnJvd3Nlcl9ldmVudHMsIFtcIiRkb21haW5cIl0pO1xuICAgIGJyb3dzZXJfZG9tYWlucyA9IHNvcnRfYnlfZHVyYXRpb24oYnJvd3Nlcl9kb21haW5zKTtcbiAgICBicm93c2VyX2RvbWFpbnMgPSBsaW1pdF9ldmVudHMoYnJvd3Nlcl9kb21haW5zLCAiKS5jb25jYXQoZGVmYXVsdF9saW1pdCwgIik7XG4gICAgYnJvd3Nlcl9kdXJhdGlvbiA9IHN1bV9kdXJhdGlvbnMoYnJvd3Nlcl9ldmVudHMpO1xuXG4gICAgUkVUVVJOID0ge1xuICAgICAgICBcIndpbmRvd1wiOiB7XG4gICAgICAgICAgICBcImFwcF9ldmVudHNcIjogYXBwX2V2ZW50cyxcbiAgICAgICAgICAgIFwidGl0bGVfZXZlbnRzXCI6IHRpdGxlX2V2ZW50cyxcbiAgICAgICAgICAgIFwiY2F0X2V2ZW50c1wiOiBjYXRfZXZlbnRzLFxuICAgICAgICAgICAgXCJhY3RpdmVfZXZlbnRzXCI6IG5vdF9hZmssXG4gICAgICAgICAgICBcImR1cmF0aW9uXCI6IGR1cmF0aW9uXG4gICAgICAgIH0sXG4gICAgICAgIFwiYnJvd3NlclwiOiB7XG4gICAgICAgICAgICBcImRvbWFpbnNcIjogYnJvd3Nlcl9kb21haW5zLFxuICAgICAgICAgICAgXCJ1cmxzXCI6IGJyb3dzZXJfdXJscyxcbiAgICAgICAgICAgIFwiZHVyYXRpb25cIjogYnJvd3Nlcl9kdXJhdGlvblxuICAgICAgICB9XG4gICAgfTsiKSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGVkaXRvckFjdGl2aXR5UXVlcnkoZWRpdG9yYnVja2V0cykgewogIHZhciBxID0gWydldmVudHMgPSBbXTsnXTsKCiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVkaXRvcmJ1Y2tldHMpLAogICAgICBfc3RlcDsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBlZGl0b3JidWNrZXQgPSBfc3RlcC52YWx1ZTsKICAgICAgZWRpdG9yYnVja2V0ID0gZXNjYXBlX2RvdWJsZXF1b3RlKGVkaXRvcmJ1Y2tldCk7CiAgICAgIHEucHVzaCgnZXZlbnRzID0gY29uY2F0KGV2ZW50cywgZmxvb2QocXVlcnlfYnVja2V0KCInICsgZWRpdG9yYnVja2V0ICsgJyIpKSk7Jyk7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IuZigpOwogIH0KCiAgcSA9IHEuY29uY2F0KFsnZmlsZXMgPSBzb3J0X2J5X2R1cmF0aW9uKG1lcmdlX2V2ZW50c19ieV9rZXlzKGV2ZW50cywgWyJmaWxlIiwgImxhbmd1YWdlIl0pKTsnLCAiZmlsZXMgPSBsaW1pdF9ldmVudHMoZmlsZXMsICIuY29uY2F0KGRlZmF1bHRfbGltaXQsICIpOyIpLCAnbGFuZ3VhZ2VzID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFsibGFuZ3VhZ2UiXSkpOycsICJsYW5ndWFnZXMgPSBsaW1pdF9ldmVudHMobGFuZ3VhZ2VzLCAiLmNvbmNhdChkZWZhdWx0X2xpbWl0LCAiKTsiKSwgJ3Byb2plY3RzID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFsicHJvamVjdCJdKSk7JywgInByb2plY3RzID0gbGltaXRfZXZlbnRzKHByb2plY3RzLCAiLmNvbmNhdChkZWZhdWx0X2xpbWl0LCAiKTsiKSwgJ2R1cmF0aW9uID0gc3VtX2R1cmF0aW9ucyhldmVudHMpOycsICdSRVRVUk4gPSB7ImZpbGVzIjogZmlsZXMsICJsYW5ndWFnZXMiOiBsYW5ndWFnZXMsICJwcm9qZWN0cyI6IHByb2plY3RzLCAiZHVyYXRpb24iOiBkdXJhdGlvbn07J10pOwogIHJldHVybiBxOwp9CmV4cG9ydCBmdW5jdGlvbiBob3VybHlDYXRlZ29yeVF1ZXJ5KHBhcmFtcykgewogIHZhciBxID0gIlxuICAgICIuY29uY2F0KGNhbm9uaWNhbEV2ZW50cyhwYXJhbXMpLCAiXG4gICAgY2F0X2V2ZW50cyAgID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZV9ldmVudHNfYnlfa2V5cyhldmVudHMsIFtcIiRjYXRlZ29yeVwiXSkpO1xuICAgIFJFVFVSTiA9IHsgXCJjYXRfZXZlbnRzXCI6IGNhdF9ldmVudHMgfTtcbiAgIik7CiAgcmV0dXJuIHF1ZXJ5c3RyX3RvX2FycmF5KHEpOwp9CmV4cG9ydCBmdW5jdGlvbiBkYWlseUFjdGl2aXR5UXVlcnkoYWZrYnVja2V0KSB7CiAgYWZrYnVja2V0ID0gZXNjYXBlX2RvdWJsZXF1b3RlKGFma2J1Y2tldCk7CiAgcmV0dXJuIFsnYWZrYnVja2V0ID0gIicgKyBhZmtidWNrZXQgKyAnIjsnLCAnbm90X2FmayA9IGZsb29kKHF1ZXJ5X2J1Y2tldChhZmtidWNrZXQpKTsnLCAnbm90X2FmayA9IGZpbHRlcl9rZXl2YWxzKG5vdF9hZmssICJzdGF0dXMiLCBbIm5vdC1hZmsiXSk7JywgJ25vdF9hZmsgPSBtZXJnZV9ldmVudHNfYnlfa2V5cyhub3RfYWZrLCBbInN0YXR1cyJdKTsnLCAnUkVUVVJOID0gbm90X2FmazsnXTsKfQpleHBvcnQgZnVuY3Rpb24gZGFpbHlBY3Rpdml0eVF1ZXJ5QW5kcm9pZChhbmRyb2lkYnVja2V0KSB7CiAgYW5kcm9pZGJ1Y2tldCA9IGVzY2FwZV9kb3VibGVxdW90ZShhbmRyb2lkYnVja2V0KTsKICByZXR1cm4gWyJldmVudHMgPSBxdWVyeV9idWNrZXQoXCIiLmNvbmNhdChhbmRyb2lkYnVja2V0LCAiXCIpOyIpLCAnUkVUVVJOID0gc3VtX2R1cmF0aW9ucyhldmVudHMpOyddOwp9CmV4cG9ydCBkZWZhdWx0IHsKICBmdWxsRGVza3RvcFF1ZXJ5OiBmdWxsRGVza3RvcFF1ZXJ5LAogIGFwcFF1ZXJ5OiBhcHBRdWVyeSwKICBkYWlseUFjdGl2aXR5UXVlcnk6IGRhaWx5QWN0aXZpdHlRdWVyeSwKICBob3VybHlDYXRlZ29yeVF1ZXJ5OiBob3VybHlDYXRlZ29yeVF1ZXJ5LAogIGRhaWx5QWN0aXZpdHlRdWVyeUFuZHJvaWQ6IGRhaWx5QWN0aXZpdHlRdWVyeUFuZHJvaWQsCiAgZWRpdG9yQWN0aXZpdHlRdWVyeTogZWRpdG9yQWN0aXZpdHlRdWVyeQp9Ow=="},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/queries.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\n// TODO: Sanitize string input of buckets\n\nfunction querystr_to_array(querystr: string): string[] {\n  return querystr\n    .split(';')\n    .filter(l => l)\n    .map(l => l + ';');\n}\n\nfunction escape_doublequote(s: string) {\n  return s.replace(/\"/g, '\\\\\"');\n}\n\ninterface Rule {\n  type: string;\n  regex?: string;\n}\n\ninterface BaseQueryParams {\n  include_audible?: boolean;\n  classes: [string[], Rule][];\n  filter_classes: string[][];\n  bid_browsers?: string[];\n}\n\ninterface DesktopQueryParams extends BaseQueryParams {\n  bid_window: string;\n  bid_afk: string;\n  filter_afk: boolean;\n}\n\ninterface AndroidQueryParams extends BaseQueryParams {\n  bid_android: string;\n}\n\nfunction isDesktopParams(object: any): object is DesktopQueryParams {\n  return 'bid_window' in object;\n}\n\nfunction isAndroidParams(object: any): object is AndroidQueryParams {\n  return 'bid_android' in object;\n}\n\n// Constructs a query that returns a fully-detailed list of events from the merging of several sources (window, afk, web).\n// Performs:\n//  - AFK filtering (if filter_afk is true)\n//  - Categorization (if classes specified)\n//  - Filters by category (if filter_classes set)\n// Puts it's results in `events` and `not_afk` (if not_afk available for platform).\nexport function canonicalEvents(params: DesktopQueryParams | AndroidQueryParams): string {\n  // Needs escaping for regex patterns like '\\w' to work (JSON.stringify adds extra unecessary escaping)\n  const classes_str = JSON.stringify(params.classes).replace(/\\\\\\\\/g, '\\\\');\n  const cat_filter_str = JSON.stringify(params.filter_classes);\n\n  // For simplicity, we assume that bid_window and bid_android are exchangeable (note however it needs special treatment)\n  const bid_window = isDesktopParams(params) ? params.bid_window : params.bid_android;\n\n  return [\n    // Fetch window/app events\n    `events = flood(query_bucket(\"${bid_window}\"));`,\n    // On Android, merge events to avoid overload of events\n    isAndroidParams(params) ? 'events = merge_events_by_keys(events, [\"app\"]);' : '',\n    // Fetch not-afk events\n    isDesktopParams(params)\n      ? `not_afk = flood(query_bucket(\"${params.bid_afk}\"));\n         not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);`\n      : '',\n    // Fetch browser events\n    params.bid_browsers\n      ? isDesktopParams(params) &&\n        browserEvents(params) +\n          // Include focused and audible browser events as indications of not-afk\n          (params.include_audible\n            ? `audible_events = filter_keyvals(browser_events, \"audible\", [true]);\n             not_afk = period_union(not_afk, audible_events);`\n            : '')\n      : '',\n    // Filter out window events when the user was afk\n    isDesktopParams(params) && params.filter_afk\n      ? 'events = filter_period_intersect(events, not_afk);'\n      : '',\n    // Categorize\n    params.classes ? `events = categorize(events, ${classes_str});` : '',\n    // Filter out selected categories\n    params.filter_classes ? `events = filter_keyvals(events, \"$category\", ${cat_filter_str});` : '',\n  ].join('\\n');\n}\n\nconst default_limit = 100; // Hardcoded limit per group\n\nexport function appQuery(appbucket: string, classes, filterCategories: string[][]): string[] {\n  appbucket = escape_doublequote(appbucket);\n  const params: AndroidQueryParams = {\n    bid_android: appbucket,\n    classes: classes,\n    filter_classes: filterCategories,\n  };\n\n  const code = `\n    ${canonicalEvents(params)}\n\n    title_events = sort_by_duration(merge_events_by_keys(events, [\"app\", \"classname\"]));\n    app_events   = sort_by_duration(merge_events_by_keys(title_events, [\"app\"]));\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n\n    events = sort_by_timestamp(events);\n    app_events  = limit_events(app_events, ${default_limit});\n    title_events  = limit_events(title_events, ${default_limit});\n    duration = sum_durations(events);\n    RETURN  = {\"app_events\": app_events, \"title_events\": title_events, \"cat_events\": cat_events, \"duration\": duration, \"active_events\": app_events};\n  `;\n  return querystr_to_array(code);\n}\n\nconst browser_appnames = {\n  chrome: [\n    // Chrome\n    'Google Chrome',\n    'Google-chrome',\n    'chrome.exe',\n    'google-chrome-stable',\n\n    // Chromium\n    'Chromium',\n    'Chromium-browser',\n    'Chromium-browser-chromium',\n    'chromium.exe',\n\n    // Pre-releases\n    'Google-chrome-beta',\n    'Google-chrome-unstable',\n\n    // Brave (should this be merged with the brave entry?)\n    'Brave-browser',\n  ],\n  firefox: [\n    'Firefox',\n    'Firefox.exe',\n    'firefox',\n    'firefox.exe',\n    'Firefox Developer Edition',\n    'firefoxdeveloperedition',\n    'Firefox-esr',\n    'Firefox Beta',\n    'Nightly',\n  ],\n  opera: ['opera.exe', 'Opera'],\n  brave: ['brave.exe'],\n  edge: [\n    'msedge.exe', // Windows\n    'Microsoft Edge', // macOS\n  ],\n  vivaldi: ['Vivaldi-stable', 'Vivaldi-snapshot', 'vivaldi.exe'],\n};\n\n// Returns a list of (browserName, bucketId) pairs for found browser buckets\nfunction browsersWithBuckets(browserbuckets: string[]): [string, string][] {\n  const browsername_to_bucketid: [string, string | undefined][] = _.map(\n    Object.keys(browser_appnames),\n    browserName => {\n      const bucketId = _.find(browserbuckets, bucket_id => _.includes(bucket_id, browserName));\n      return [browserName, bucketId];\n    }\n  );\n  // Skip browsers for which a bucket couldn't be found\n  return _.filter(browsername_to_bucketid, ([, bucketId]) => bucketId !== undefined);\n}\n\n// Returns a list of active browser events (where the browser was the active window) from all browser buckets\nfunction browserEvents(params: DesktopQueryParams): string {\n  let code = `\n    browser_events = [];\n  `;\n\n  _.each(browsersWithBuckets(params.bid_browsers), ([browserName, bucketId]) => {\n    const browser_appnames_str = JSON.stringify(browser_appnames[browserName]);\n    code += `events_${browserName} = flood(query_bucket(\"${bucketId}\"));\n       window_${browserName} = filter_keyvals(events, \"app\", ${browser_appnames_str});\n       events_${browserName} = filter_period_intersect(events_${browserName}, window_${browserName});\n       events_${browserName} = split_url_events(events_${browserName});\n       browser_events = concat(browser_events, events_${browserName});\n       browser_events = sort_by_timestamp(browser_events);`;\n  });\n  return code;\n}\n\nexport function fullDesktopQuery(\n  browserbuckets: string[],\n  windowbucket: string,\n  afkbucket: string,\n  filterAFK = true,\n  classes,\n  filterCategories: string[][],\n  include_audible: boolean\n): string[] {\n  // Escape `\"`\n  browserbuckets = _.map(browserbuckets, escape_doublequote);\n  windowbucket = escape_doublequote(windowbucket);\n  afkbucket = escape_doublequote(afkbucket);\n\n  // TODO: Get classes\n  const params: DesktopQueryParams = {\n    bid_window: windowbucket,\n    bid_afk: afkbucket,\n    bid_browsers: browserbuckets,\n    classes: classes,\n    filter_classes: filterCategories,\n    filter_afk: filterAFK,\n    include_audible,\n  };\n\n  return querystr_to_array(\n    `\n    ${canonicalEvents(params)}\n    title_events = sort_by_duration(merge_events_by_keys(events, [\"app\", \"title\"]));\n    app_events   = sort_by_duration(merge_events_by_keys(title_events, [\"app\"]));\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n\n    app_events  = limit_events(app_events, ${default_limit});\n    title_events  = limit_events(title_events, ${default_limit});\n    duration = sum_durations(events);\n    ` + // Browser events are retrieved in canonicalQuery\n      `\n    browser_events = split_url_events(browser_events);\n    browser_urls = merge_events_by_keys(browser_events, [\"url\"]);\n    browser_urls = sort_by_duration(browser_urls);\n    browser_urls = limit_events(browser_urls, ${default_limit});\n    browser_domains = merge_events_by_keys(browser_events, [\"$domain\"]);\n    browser_domains = sort_by_duration(browser_domains);\n    browser_domains = limit_events(browser_domains, ${default_limit});\n    browser_duration = sum_durations(browser_events);\n\n    RETURN = {\n        \"window\": {\n            \"app_events\": app_events,\n            \"title_events\": title_events,\n            \"cat_events\": cat_events,\n            \"active_events\": not_afk,\n            \"duration\": duration\n        },\n        \"browser\": {\n            \"domains\": browser_domains,\n            \"urls\": browser_urls,\n            \"duration\": browser_duration\n        }\n    };`\n  );\n}\n\nexport function editorActivityQuery(editorbuckets: string[]): string[] {\n  let q = ['events = [];'];\n  for (let editorbucket of editorbuckets) {\n    editorbucket = escape_doublequote(editorbucket);\n    q.push('events = concat(events, flood(query_bucket(\"' + editorbucket + '\")));');\n  }\n  q = q.concat([\n    'files = sort_by_duration(merge_events_by_keys(events, [\"file\", \"language\"]));',\n    `files = limit_events(files, ${default_limit});`,\n    'languages = sort_by_duration(merge_events_by_keys(events, [\"language\"]));',\n    `languages = limit_events(languages, ${default_limit});`,\n    'projects = sort_by_duration(merge_events_by_keys(events, [\"project\"]));',\n    `projects = limit_events(projects, ${default_limit});`,\n    'duration = sum_durations(events);',\n    'RETURN = {\"files\": files, \"languages\": languages, \"projects\": projects, \"duration\": duration};',\n  ]);\n  return q;\n}\n\nexport function hourlyCategoryQuery(params: DesktopQueryParams) {\n  const q = `\n    ${canonicalEvents(params)}\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n    RETURN = { \"cat_events\": cat_events };\n  `;\n  return querystr_to_array(q);\n}\n\nexport function dailyActivityQuery(afkbucket: string): string[] {\n  afkbucket = escape_doublequote(afkbucket);\n  return [\n    'afkbucket = \"' + afkbucket + '\";',\n    'not_afk = flood(query_bucket(afkbucket));',\n    'not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);',\n    'not_afk = merge_events_by_keys(not_afk, [\"status\"]);',\n    'RETURN = not_afk;',\n  ];\n}\n\nexport function dailyActivityQueryAndroid(androidbucket: string): string[] {\n  androidbucket = escape_doublequote(androidbucket);\n  return [`events = query_bucket(\"${androidbucket}\");`, 'RETURN = sum_durations(events);'];\n}\n\nexport default {\n  fullDesktopQuery,\n  appQuery,\n  dailyActivityQuery,\n  hourlyCategoryQuery,\n  dailyActivityQueryAndroid,\n  editorActivityQuery,\n};\n"],"sourceRoot":""}]}