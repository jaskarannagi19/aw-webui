{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--13-3!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/store/modules/activity.ts","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/store/modules/activity.ts","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/store/modules/activity.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { unitOfTime } from 'moment';\nimport * as _ from 'lodash';\nimport { map, filter, values, groupBy, sortBy, flow, reverse } from 'lodash/fp';\n\nimport { window_events } from '~/util/fakedata';\nimport queries from '~/queries';\nimport { getColorFromCategory } from '~/util/color';\nimport { loadClassesForQuery } from '~/util/classes';\nimport { get_day_start_with_offset } from '~/util/time';\n\ninterface TimePeriod {\n  start: string;\n  length: [number, string];\n}\n\nfunction dateToTimeperiod(date: string, duration?: [number, string]): TimePeriod {\n  return { start: get_day_start_with_offset(date), length: duration || [1, 'day'] };\n}\n\nfunction timeperiodToStr(tp: TimePeriod): string {\n  const start = moment(tp.start).format();\n  const end = moment(start)\n    .add(tp.length[0], tp.length[1] as moment.unitOfTime.DurationConstructor)\n    .format();\n  return [start, end].join('/');\n}\n\ninterface QueryOptions {\n  host: string;\n  date?: string;\n  timeperiod?: TimePeriod;\n  filterAFK?: boolean;\n  includeAudible?: boolean;\n  filterCategories?: string[][];\n  force?: boolean;\n}\n\n// initial state\nconst _state = {\n  // set to true once loading has started\n  loaded: false,\n\n  window: {\n    available: false,\n    top_apps: [],\n    top_titles: [],\n  },\n\n  browser: {\n    available: false,\n    duration: [],\n    top_domains: [],\n    top_urls: [],\n  },\n\n  editor: {\n    available: false,\n    duration: [],\n    top_files: [],\n    top_languages: [],\n    top_projects: [],\n  },\n\n  category: {\n    available: false,\n    by_hour: [],\n    top: [],\n  },\n\n  active: {\n    available: false,\n    duration: 0,\n    // non-afk events (no detail data) for the current period\n    events: [],\n    // Aggregated events for current and past periods\n    history: {},\n  },\n\n  android: {\n    available: false,\n  },\n\n  query_options: {\n    browser_buckets: 'all',\n    editor_buckets: 'all',\n  },\n\n  buckets: {\n    loaded: false,\n    afk: [],\n    window: [],\n    editor: [],\n    browser: [],\n    android: [],\n  },\n};\n\nfunction timeperiodsAroundTimeperiod(timeperiod: TimePeriod): TimePeriod[] {\n  const periods = [];\n  for (let i = -15; i <= 15; i++) {\n    const start = moment(timeperiod.start)\n      .add(i * timeperiod.length[0], timeperiod.length[1] as moment.unitOfTime.DurationConstructor)\n      .format();\n    periods.push({ ...timeperiod, start });\n  }\n  return periods;\n}\n\nfunction timeperiodsHoursOfDay(timeperiod: TimePeriod): TimePeriod[] {\n  const periods = [];\n  const _length: [number, string] = [1, 'hour'];\n  for (let i = 0; i < 24; i++) {\n    const start = moment(timeperiod.start)\n      .add(i * _length[0], _length[1] as moment.unitOfTime.DurationConstructor)\n      .format();\n    periods.push({ start, length: _length });\n  }\n  // const periods = _.range(24).map(i => [TimePeriod(moment(i * 1 + dayOffset), [1, 'hour'])]);\n  return periods;\n}\n\nfunction timeperiodsStrsHoursOfDay(timeperiod: TimePeriod): string[] {\n  return timeperiodsHoursOfDay(timeperiod).map(timeperiodToStr);\n}\n\nfunction timeperiodStrsAroundTimeperiod(timeperiod: TimePeriod): string[] {\n  return timeperiodsAroundTimeperiod(timeperiod).map(timeperiodToStr);\n}\n\n// getters\nconst getters = {\n  getActiveHistoryAroundTimeperiod: state => (timeperiod: TimePeriod) => {\n    const periods = timeperiodStrsAroundTimeperiod(timeperiod);\n    const _history = periods.map(tp => {\n      if (_.has(state.active.history, tp)) {\n        return state.active.history[tp];\n      } else {\n        // A zero-duration placeholder until new data has been fetched\n        return [{ timestamp: moment(tp.split('/')[0]).format(), duration: 0, data: {} }];\n      }\n    });\n    return _history;\n  },\n};\n\n// actions\nconst actions = {\n  async ensure_loaded({ commit, state, dispatch }, query_options: QueryOptions) {\n    console.info('Query options: ', query_options);\n    if (!state.loaded || state.query_options !== query_options || query_options.force) {\n      commit('start_loading', query_options);\n      if (!query_options.timeperiod) {\n        query_options.timeperiod = dateToTimeperiod(query_options.date);\n      }\n\n      await dispatch('buckets/ensureBuckets', null, { root: true });\n      await dispatch('get_buckets', query_options);\n\n      // TODO: These queries can actually run in parallel, but since server won't process them in parallel anyway we won't.\n      await dispatch('set_available', query_options);\n\n      if (state.window.available) {\n        await dispatch('query_desktop_full', query_options);\n        await dispatch('query_category_time_by_hour', query_options);\n      } else if (state.android.available) {\n        await dispatch('query_android', query_options);\n      } else {\n        console.log(\n          'Cannot query windows as we are missing either an afk/window bucket pair or an android bucket'\n        );\n        await dispatch('query_window_empty', query_options);\n        await dispatch('query_browser_empty', query_options);\n      }\n\n      if (state.active.available) {\n        await dispatch('query_active_history', query_options);\n      } else if (state.android.available) {\n        await dispatch('query_active_history_android', query_options);\n      } else {\n        console.log('Cannot call query_active_history as we do not have an afk bucket');\n        await dispatch('query_active_history_empty', query_options);\n      }\n\n      if (state.editor.available) {\n        await dispatch('query_editor', query_options);\n      } else {\n        console.log('Cannot call query_editor as we do not have any editor buckets');\n        await dispatch('query_editor_empty', query_options);\n      }\n    } else {\n      console.warn(\n        'ensure_loaded called twice with same query_options but without query_options.force = true, skipping...'\n      );\n    }\n  },\n\n  async query_android({ state, commit }, { timeperiod, filterCategories }: QueryOptions) {\n    const periods = [timeperiodToStr(timeperiod)];\n    const classes = loadClassesForQuery();\n    const q = queries.appQuery(state.buckets.android[0], classes, filterCategories);\n    const data = await this._vm.$aw.query(periods, q).catch(this.errorHandler);\n    commit('query_window_completed', data[0]);\n  },\n\n  async query_window_empty({ commit }) {\n    const data = {\n      app_events: [],\n      title_events: [],\n      cat_events: [],\n      active_events: [],\n      duration: 0,\n    };\n    commit('query_window_completed', data);\n  },\n\n  async query_desktop_full(\n    { state, commit, rootState, rootGetters },\n    { timeperiod, filterCategories, filterAFK, includeAudible }: QueryOptions\n  ) {\n    const periods = [timeperiodToStr(timeperiod)];\n    const classes = loadClassesForQuery();\n    const q = queries.fullDesktopQuery(\n      state.buckets.browser,\n      state.buckets.window[0],\n      state.buckets.afk[0],\n      filterAFK,\n      classes,\n      filterCategories,\n      includeAudible\n    );\n    const data = await this._vm.$aw.query(periods, q);\n\n    const data_window = data[0].window;\n    const data_browser = data[0].browser;\n\n    // Set $color for categories\n    data_window.cat_events = data[0].window['cat_events'].map(e => {\n      const cat = rootGetters['categories/get_category'](e.data['$category']);\n      e.data['$color'] = getColorFromCategory(cat, rootState.categories.classes);\n      return e;\n    });\n\n    commit('query_window_completed', data_window);\n    commit('query_browser_completed', data_browser);\n  },\n\n  async query_browser_empty({ commit }) {\n    const data = {\n      domains: [],\n      urls: [],\n      duration: 0,\n    };\n    commit('query_browser_completed', data);\n  },\n\n  async query_editor({ state, commit }, { timeperiod }) {\n    const periods = [timeperiodToStr(timeperiod)];\n    const q = queries.editorActivityQuery(state.buckets.editor);\n    const data = await this._vm.$aw.query(periods, q);\n    commit('query_editor_completed', data[0]);\n  },\n\n  async query_editor_empty({ commit }) {\n    const data = {\n      files: [],\n      projects: [],\n      languages: [],\n    };\n    commit('query_editor_completed', data);\n  },\n\n  async query_active_history({ commit, state }, { timeperiod }: QueryOptions) {\n    const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n      return !_.includes(state.active.history, tp_str);\n    });\n    const data = await this._vm.$aw.query(\n      periods,\n      queries.dailyActivityQuery(state.buckets.afk[0])\n    );\n    const active_history = _.zipObject(\n      periods,\n      _.map(data, pair => _.filter(pair, e => e.data.status == 'not-afk'))\n    );\n    commit('query_active_history_completed', { active_history });\n  },\n\n  async query_category_time_by_hour(\n    { commit, state },\n    { timeperiod, filterCategories, filterAFK }: QueryOptions\n  ) {\n    // TODO: Only works for the 1 day timeperiod\n    // TODO: Needs to be adapted for Android\n    const periods = timeperiodsStrsHoursOfDay(timeperiod);\n    const classes = loadClassesForQuery();\n    const data = await this._vm.$aw.query(\n      periods,\n      // TODO: Clean up call, pass QueryParams in fullDesktopQuery as well\n      // TODO: Unify QueryOptions and QueryParams\n      queries.hourlyCategoryQuery({\n        bid_afk: state.buckets.afk[0],\n        bid_window: state.buckets.window[0],\n        bid_browsers: state.buckets.browser,\n        // bid_android: state.buckets.android,\n        classes: classes,\n        filter_afk: filterAFK,\n        filter_classes: filterCategories,\n      })\n    );\n    const category_time_by_hour = _.zipObject(periods, data);\n    commit('query_category_time_by_hour_completed', { category_time_by_hour });\n  },\n\n  async query_active_history_android({ commit, state }, { timeperiod }: QueryOptions) {\n    const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n      return !_.includes(state.active.history, tp_str);\n    });\n    const data = await this._vm.$aw.query(\n      periods,\n      queries.dailyActivityQueryAndroid(state.buckets.android[0])\n    );\n    let active_history = _.zipObject(periods, data);\n    active_history = _.mapValues(active_history, (duration, key) => {\n      return [{ timestamp: key.split('/')[0], duration, data: { status: 'not-afk' } }];\n    });\n    commit('query_active_history_completed', { active_history });\n  },\n\n  async query_active_history_empty({ commit }) {\n    const data = [];\n    commit('query_active_history_completed', data);\n  },\n\n  async set_available({ commit, state }) {\n    const window_available = state.buckets.afk.length > 0 && state.buckets.window.length > 0;\n    const browser_available =\n      state.buckets.afk.length > 0 &&\n      state.buckets.window.length > 0 &&\n      state.buckets.browser.length > 0;\n    const active_available = state.buckets.afk.length > 0;\n    const editor_available = state.buckets.editor.length > 0;\n    const android_available = state.buckets.android.length > 0;\n    commit('set_available', {\n      window_available: window_available,\n      browser_available: browser_available,\n      active_available: active_available,\n      editor_available: editor_available,\n      android_available: android_available,\n    });\n  },\n\n  async get_buckets({ commit, rootGetters }, { host }) {\n    const buckets = {\n      afk: rootGetters['buckets/afkBucketsByHost'](host),\n      window: rootGetters['buckets/windowBucketsByHost'](host),\n      android: rootGetters['buckets/androidBucketsByHost'](host),\n      browser: rootGetters['buckets/browserBuckets'],\n      editor: rootGetters['buckets/editorBuckets'],\n    };\n    console.log('Available buckets: ', buckets);\n    commit('buckets', buckets);\n  },\n\n  async load_demo({ commit }) {\n    // A function to load some demo data (for screenshots and stuff)\n    commit('start_loading', {});\n\n    function groupSumEventsBy(events, key, f) {\n      return flow(\n        filter(f),\n        groupBy(f),\n        values,\n        map((es: any) => {\n          return { duration: _.sumBy(es, 'duration'), data: { [key]: f(es[0]) } };\n        }),\n        sortBy('duration'),\n        reverse\n      )(events);\n    }\n\n    const app_events = groupSumEventsBy(window_events, 'app', (e: any) => e.data.app);\n    const title_events = groupSumEventsBy(window_events, 'title', (e: any) => e.data.title);\n    const cat_events = groupSumEventsBy(window_events, '$category', (e: any) => e.data.$category);\n    const url_events = groupSumEventsBy(window_events, 'url', (e: any) => e.data.url);\n    const domain_events = groupSumEventsBy(window_events, '$domain', (e: any) =>\n      e.data.url === undefined ? '' : new URL(e.data.url).host\n    );\n\n    commit('query_window_completed', {\n      duration: _.sumBy(window_events, 'duration'),\n      app_events,\n      title_events,\n      cat_events,\n      active_events: [\n        { timestamp: new Date().toISOString(), duration: 1.5 * 60 * 60, data: { afk: 'not-afk' } },\n      ],\n    });\n\n    commit('browser_buckets', ['aw-watcher-firefox']);\n    commit('query_browser_completed', {\n      duration: _.sumBy(url_events, 'duration'),\n      domains: domain_events,\n      urls: url_events,\n    });\n\n    commit('editor_buckets', ['aw-watcher-vim']);\n    commit('query_editor_completed', {\n      duration: 30,\n      files: [{ duration: 10, data: { file: 'test.py' } }],\n      languages: [{ duration: 10, data: { language: 'python' } }],\n      projects: [{ duration: 10, data: { project: 'aw-core' } }],\n    });\n\n    function build_active_history() {\n      const active_history = {};\n      let current_day = moment(get_day_start_with_offset());\n      _.map(_.range(0, 30), () => {\n        const current_day_end = moment(current_day).add(1, 'day');\n        active_history[`${current_day.format()}/${current_day_end.format()}`] = [\n          {\n            timestamp: current_day.format(),\n            duration: 100 + 900 * Math.random(),\n            data: { status: 'not-afk' },\n          },\n        ];\n        current_day = current_day.add(-1, 'day');\n      });\n      return active_history;\n    }\n    commit('query_active_history_completed', { active_history: build_active_history() });\n  },\n};\n\n// mutations\nconst mutations = {\n  start_loading(state, query_options: QueryOptions) {\n    state.loaded = true;\n    state.query_options = query_options;\n\n    // Resets the store state while waiting for new query to finish\n    state.window.top_apps = null;\n    state.window.top_titles = null;\n\n    state.browser.duration = 0;\n    state.browser.top_domains = null;\n    state.browser.top_urls = null;\n\n    state.editor.duration = 0;\n    state.editor.top_files = null;\n    state.editor.top_languages = null;\n    state.editor.top_projects = null;\n\n    state.category.top = null;\n\n    state.active.duration = null;\n\n    // Ensures that active history isn't being fully reloaded on every date change\n    // (see caching done in query_active_history and query_active_history_android)\n    // FIXME: Better detection of when to actually clear (such as on force reload, hostname change)\n    if (Object.keys(state.active.history).length === 0) {\n      state.active.history = {};\n    }\n  },\n\n  set_available(state, data) {\n    state.window.available = data['window_available'];\n    state.browser.available = data['browser_available'];\n    state.active.available = data['active_available'];\n    state.editor.available = data['editor_available'];\n    state.category.available = data['window_available'] || data['android_available'];\n    state.android.available = data['android_available'];\n  },\n\n  query_window_completed(state, data) {\n    state.window.top_apps = data['app_events'];\n    state.window.top_titles = data['title_events'];\n    state.category.top = data['cat_events'];\n    state.active.duration = data['duration'];\n    state.active.events = data['active_events'];\n  },\n\n  query_browser_completed(state, data) {\n    state.browser.top_domains = data.domains;\n    state.browser.top_urls = data.urls;\n    state.browser.duration = data.duration;\n\n    // FIXME: This one might take up a lot of size in the request, move it to a seperate request\n    // (or remove entirely, since we have the other timeline now)\n    state.web_chunks = data['chunks'];\n  },\n\n  query_editor_completed(state, data) {\n    state.editor.duration = data['duration'];\n    state.editor.top_files = data['files'];\n    state.editor.top_languages = data['languages'];\n    state.editor.top_projects = data['projects'];\n  },\n\n  query_active_history_completed(state, { active_history }) {\n    state.active.history = {\n      ...state.active.history,\n      ...active_history,\n    };\n  },\n\n  query_category_time_by_hour_completed(state, { category_time_by_hour }) {\n    state.category.by_hour = category_time_by_hour;\n  },\n\n  buckets(state, data) {\n    state.buckets = data;\n    state.buckets.loaded = true;\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: _state,\n  getters,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}