{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/settings/CategorizationSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/settings/CategorizationSettings.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IENhdGVnb3J5RWRpdFRyZWUgZnJvbSAnfi9jb21wb25lbnRzL0NhdGVnb3J5RWRpdFRyZWUudnVlJzsKaW1wb3J0ICd2dWUtYXdlc29tZS9pY29ucy91bmRvJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDYXRlZ29yaXphdGlvblNldHRpbmdzJywKICBjb21wb25lbnRzOiB7CiAgICBDYXRlZ29yeUVkaXRUcmVlOiBDYXRlZ29yeUVkaXRUcmVlCiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKCdjYXRlZ29yaWVzJywgWydjbGFzc2VzX2hpZXJhcmNoeSddKSksIG1hcFN0YXRlKCdjYXRlZ29yaWVzJywgWydjbGFzc2VzX3Vuc2F2ZWRfY2hhbmdlcyddKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRlZ29yaWVzL2xvYWQnKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZENsYXNzOiBmdW5jdGlvbiBhZGRDbGFzcygpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjYXRlZ29yaWVzL2FkZENsYXNzJywgewogICAgICAgIG5hbWU6IFsnTmV3IGNsYXNzJ10sCiAgICAgICAgcnVsZTogewogICAgICAgICAgdHlwZTogJ3JlZ2V4JywKICAgICAgICAgIHJlZ2V4OiAnRklMTCBNRScKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVDbGFzc2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc2F2ZUNsYXNzZXMgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRlZ29yaWVzL3NhdmUnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHNhdmVDbGFzc2VzKCkgewogICAgICAgIHJldHVybiBfc2F2ZUNsYXNzZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNhdmVDbGFzc2VzOwogICAgfSgpLAogICAgcmVzZXRDbGFzc2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVzZXRDbGFzc2VzID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2F0ZWdvcmllcy9sb2FkJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHJlc2V0Q2xhc3NlcygpIHsKICAgICAgICByZXR1cm4gX3Jlc2V0Q2xhc3Nlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVzZXRDbGFzc2VzOwogICAgfSgpLAogICAgcmVzdG9yZURlZmF1bHRDbGFzc2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVzdG9yZURlZmF1bHRDbGFzc2VzID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5jb21taXQoJ2NhdGVnb3JpZXMvcmVzdG9yZURlZmF1bHRDbGFzc2VzJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHJlc3RvcmVEZWZhdWx0Q2xhc3NlcygpIHsKICAgICAgICByZXR1cm4gX3Jlc3RvcmVEZWZhdWx0Q2xhc3Nlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdG9yZURlZmF1bHRDbGFzc2VzOwogICAgfSgpLAogICAgZXhwb3J0Q2xhc3NlczogZnVuY3Rpb24gZXhwb3J0Q2xhc3NlcygpIHsKICAgICAgY29uc29sZS5sb2coJ0V4cG9ydGluZyBjYXRlZ29yaWVzLi4uJyk7CiAgICAgIHZhciBleHBvcnRfZGF0YSA9IHsKICAgICAgICBjYXRlZ29yaWVzOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5jbGFzc2VzKQogICAgICB9OwogICAgICB2YXIgdGV4dCA9IEpTT04uc3RyaW5naWZ5KGV4cG9ydF9kYXRhKTsKICAgICAgdmFyIGZpbGVuYW1lID0gJ2F3LWNhdGVnb3J5LWV4cG9ydC5qc29uJzsKICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdocmVmJywgJ2RhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04LCcgKyBlbmNvZGVVUklDb21wb25lbnQodGV4dCkpOwogICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCBmaWxlbmFtZSk7CiAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTsKICAgICAgZWxlbWVudC5jbGljaygpOwogICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsZW1lbnQpOwogICAgfSwKICAgIGltcG9ydENhdGVnb3JpZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9pbXBvcnRDYXRlZ29yaWVzID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoZWxlbSkgewogICAgICAgIHZhciBmaWxlLCB0ZXh0LCBpbXBvcnRfb2JqOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSW1wb3J0aW5nIGNhdGVnb3JpZXMuLi4nKTsKICAgICAgICAgICAgICAgIGZpbGUgPSBlbGVtLnRhcmdldC5maWxlc1swXTsKCiAgICAgICAgICAgICAgICBpZiAoIShmaWxlLnR5cGUgIT0gJ2FwcGxpY2F0aW9uL2pzb24nKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ09ubHkgSlNPTiBmaWxlcyBhcmUgcG9zc2libGUgdG8gaW1wb3J0Jyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBmaWxlLnRleHQoKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgdGV4dCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgaW1wb3J0X29iaiA9IEpTT04ucGFyc2UodGV4dCk7CiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NhdGVnb3JpZXMvaW1wb3J0JywgaW1wb3J0X29iai5jYXRlZ29yaWVzKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGltcG9ydENhdGVnb3JpZXMoX3gpIHsKICAgICAgICByZXR1cm4gX2ltcG9ydENhdGVnb3JpZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGltcG9ydENhdGVnb3JpZXM7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["CategorizationSettings.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv\n  h5.d-inline-block\n    div Categorization\n  div.float-right\n    b-btn.ml-1(@click=\"restoreDefaultClasses\", variant=\"outline-warning\" size=\"sm\")\n      icon(name=\"undo\")\n      | Restore defaults\n    label.btn.btn-sm.ml-1.btn-outline-primary(style=\"margin: 0\")\n      | Import\n      input(type=\"file\" @change=\"importCategories\" hidden)\n    b-btn.ml-1(@click=\"exportClasses\", variant=\"outline-primary\" size=\"sm\")\n      | Export\n  p\n    | Rules for categorizing events. An event can only have one category. If several categories match, the deepest one will be chosen.\n  p\n    | For help on how to write categorization rules, see #[a(href=\"https://docs.activitywatch.net/en/latest/features/categorization.html\") the documentation].\n\n  div.my-4\n    b-alert(variant=\"warning\" :show=\"classes_unsaved_changes\")\n      | You have unsaved changes!\n      div.float-right(style=\"margin-top: -0.15em; margin-right: -0.6em\")\n        b-btn.ml-2(@click=\"saveClasses\", variant=\"success\" size=\"sm\")\n          | Save\n        b-btn.ml-2(@click=\"resetClasses\", variant=\"warning\" size=\"sm\")\n          | Discard\n    div(v-for=\"_class in classes_hierarchy\")\n      CategoryEditTree(:_class=\"_class\")\n\n  div.row\n    div.col-sm-12\n      b-btn(@click=\"addClass\")\n        icon.mr-2(name=\"plus\")\n        | Add category\n      b-btn.float-right(@click=\"saveClasses\", variant=\"success\" :disabled=\"!classes_unsaved_changes\")\n        | Save\n</template>\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport CategoryEditTree from '~/components/CategoryEditTree.vue';\nimport 'vue-awesome/icons/undo';\n\nexport default {\n  name: 'CategorizationSettings',\n  components: {\n    CategoryEditTree,\n  },\n  computed: {\n    ...mapGetters('categories', ['classes_hierarchy']),\n    ...mapState('categories', ['classes_unsaved_changes']),\n  },\n  mounted() {\n    this.$store.dispatch('categories/load');\n  },\n  methods: {\n    addClass: function () {\n      this.$store.commit('categories/addClass', {\n        name: ['New class'],\n        rule: { type: 'regex', regex: 'FILL ME' },\n      });\n    },\n    saveClasses: async function () {\n      await this.$store.dispatch('categories/save');\n    },\n    resetClasses: async function () {\n      await this.$store.dispatch('categories/load');\n    },\n    restoreDefaultClasses: async function () {\n      await this.$store.commit('categories/restoreDefaultClasses');\n    },\n    exportClasses: function () {\n      console.log('Exporting categories...');\n\n      const export_data = {\n        categories: JSON.parse(localStorage.classes),\n      };\n      const text = JSON.stringify(export_data);\n      const filename = 'aw-category-export.json';\n\n      // Initiate downloading a file by creating a hidden button and clicking it\n      const element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n    importCategories: async function (elem) {\n      console.log('Importing categories...');\n\n      // Get file from upload\n      const file = elem.target.files[0];\n      if (file.type != 'application/json') {\n        console.error('Only JSON files are possible to import');\n        return;\n      }\n\n      // Read and parse import text to JSON\n      const text = await file.text();\n      const import_obj = JSON.parse(text);\n\n      // Set import to categories as unsaved changes\n      this.$store.commit('categories/import', import_obj.categories);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/settings"}]}