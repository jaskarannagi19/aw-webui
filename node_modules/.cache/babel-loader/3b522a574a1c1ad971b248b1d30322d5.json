{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/time.js","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/time.js","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2phc2thcmFuL2NvZGUvamFza2FyYW4vYWN0aXZpdHl3YXRjaC9hdy1zZXJ2ZXItcnVzdC9hdy13ZWJ1aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGZ1bmN0aW9uIHNlY29uZHNfdG9fZHVyYXRpb24oc2Vjb25kcykgewogIHZhciBocnMgPSBNYXRoLmZsb29yKHNlY29uZHMgLyA2MCAvIDYwKTsKICB2YXIgbWluID0gTWF0aC5mbG9vcihzZWNvbmRzIC8gNjAgJSA2MCk7CiAgdmFyIHNlYyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAlIDYwKTsKICB2YXIgbCA9IFtdOwogIGlmIChocnMgIT0gMCkgbC5wdXNoKGhycyArICdoJyk7CiAgaWYgKG1pbiAhPSAwKSBsLnB1c2gobWluICsgJ20nKTsKICBpZiAoc2VjICE9IDAgfHwgbC5sZW5ndGggPT0gMCkgbC5wdXNoKHNlYyArICdzJyk7CiAgcmV0dXJuIGwuam9pbignICcpOwp9CmV4cG9ydCBmdW5jdGlvbiBmcmllbmRseWRhdGUodGltZXN0YW1wKSB7CiAgdmFyIG5vdyA9IG1vbWVudCgpOwogIHZhciBtID0gbW9tZW50LnBhcnNlWm9uZSh0aW1lc3RhbXApOwogIHZhciBzaW5jZU5vdyA9IG1vbWVudC5kdXJhdGlvbihtLmRpZmYobm93KSk7CgogIGlmICgtc2luY2VOb3cuYXNTZWNvbmRzKCkgPD0gNjApIHsKICAgIHJldHVybiAiIi5jb25jYXQoTWF0aC5yb3VuZCgtc2luY2VOb3cuYXNTZWNvbmRzKCkpLCAicyBhZ28iKTsKICB9IGVsc2UgaWYgKC1zaW5jZU5vdy5hc1NlY29uZHMoKSA8PSA2MCAqIDYwICogMjQpIHsKICAgIHJldHVybiBzaW5jZU5vdy5odW1hbml6ZSh0cnVlKTsKICB9CgogIHJldHVybiBzaW5jZU5vdy5odW1hbml6ZSh0cnVlKTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0X2RheV9zdGFydF93aXRoX29mZnNldChkYXRlUGFyYW0pIHsKICB2YXIgZGF0ZU1vbWVudCA9IGRhdGVQYXJhbSA/IG1vbWVudChkYXRlUGFyYW0pIDogbW9tZW50KCkuc3RhcnRPZignZGF5Jyk7CiAgdmFyIHN0YXJ0X29mX2RheSA9IGxvY2FsU3RvcmFnZS5zdGFydE9mRGF5OwogIHZhciBzdGFydF9vZl9kYXlfaG91cnMgPSBwYXJzZUludChzdGFydF9vZl9kYXkuc3BsaXQoJzonKVswXSk7CiAgdmFyIHN0YXJ0X29mX2RheV9taW51dGVzID0gcGFyc2VJbnQoc3RhcnRfb2ZfZGF5LnNwbGl0KCc6JylbMV0pOwogIHJldHVybiBkYXRlTW9tZW50LmhvdXIoc3RhcnRfb2ZfZGF5X2hvdXJzKS5taW51dGUoc3RhcnRfb2ZfZGF5X21pbnV0ZXMpLmZvcm1hdCgpOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRfaG91cl9vZmZzZXQoKSB7CiAgdmFyIHN0YXJ0X29mX2RheSA9IGxvY2FsU3RvcmFnZS5zdGFydE9mRGF5OwogIHZhciBzdGFydF9vZl9kYXlfaG91cnMgPSBwYXJzZUludChzdGFydF9vZl9kYXkuc3BsaXQoJzonKVswXSk7CiAgdmFyIHN0YXJ0X29mX2RheV9taW51dGVzID0gcGFyc2VJbnQoc3RhcnRfb2ZfZGF5LnNwbGl0KCc6JylbMV0pOwogIHJldHVybiBzdGFydF9vZl9kYXlfaG91cnMgKyBzdGFydF9vZl9kYXlfbWludXRlcyAvIDYwOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRfZGF5X2VuZF93aXRoX29mZnNldChkYXRlKSB7CiAgcmV0dXJuIG1vbWVudChnZXRfZGF5X3N0YXJ0X3dpdGhfb2Zmc2V0KGRhdGUpKS5hZGQoMSwgJ2RheXMnKS5mb3JtYXQoKTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0X2RheV9wZXJpb2QoZGF0ZSkgewogIHJldHVybiBnZXRfZGF5X3N0YXJ0X3dpdGhfb2Zmc2V0KGRhdGUpICsgJy8nICsgZ2V0X2RheV9lbmRfd2l0aF9vZmZzZXQoZGF0ZSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldF9wcmV2X2RheShkYXRlc3RyKSB7CiAgcmV0dXJuIG1vbWVudChkYXRlc3RyKS5hZGQoLTEsICdkYXlzJyk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldF9uZXh0X2RheShkYXRlc3RyKSB7CiAgcmV0dXJuIG1vbWVudChkYXRlc3RyKS5hZGQoMSwgJ2RheXMnKTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0X29mZnNldCgpIHsKICB2YXIgc3RhcnRfb2ZfZGF5ID0gbG9jYWxTdG9yYWdlLnN0YXJ0T2ZEYXk7CgogIHZhciBfc3RhcnRfb2ZfZGF5JHNwbGl0ID0gc3RhcnRfb2ZfZGF5LnNwbGl0KCc6JyksCiAgICAgIF9zdGFydF9vZl9kYXkkc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX3N0YXJ0X29mX2RheSRzcGxpdCwgMiksCiAgICAgIGhvdXJzID0gX3N0YXJ0X29mX2RheSRzcGxpdDJbMF0sCiAgICAgIG1pbnV0ZXMgPSBfc3RhcnRfb2ZfZGF5JHNwbGl0MlsxXTsKCiAgcmV0dXJuIG1vbWVudC5kdXJhdGlvbih7CiAgICBob3VyczogaG91cnMsCiAgICBtaW51dGVzOiBtaW51dGVzCiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldF90b2RheSgpIHsKICByZXR1cm4gbW9tZW50KCkuc3VidHJhY3QoZ2V0X29mZnNldCgpKS5zdGFydE9mKCdkYXknKS5mb3JtYXQoJ1lZWVktTU0tREQnKTsKfQ=="},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/util/time.js"],"names":["moment","seconds_to_duration","seconds","hrs","Math","floor","min","sec","l","push","length","join","friendlydate","timestamp","now","m","parseZone","sinceNow","duration","diff","asSeconds","round","humanize","get_day_start_with_offset","dateParam","dateMoment","startOf","start_of_day","localStorage","startOfDay","start_of_day_hours","parseInt","split","start_of_day_minutes","hour","minute","format","get_hour_offset","get_day_end_with_offset","date","add","get_day_period","get_prev_day","datestr","get_next_day","get_offset","hours","minutes","get_today","subtract"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AAE3C,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAAV,GAAe,EAA1B,CAAZ;AACA,MAAMI,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAYH,OAAO,GAAG,EAAX,GAAiB,EAA5B,CAAZ;AACA,MAAMK,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAZ;AACA,MAAMM,CAAC,GAAG,EAAV;AACA,MAAIL,GAAG,IAAI,CAAX,EAAcK,CAAC,CAACC,IAAF,CAAON,GAAG,GAAG,GAAb;AACd,MAAIG,GAAG,IAAI,CAAX,EAAcE,CAAC,CAACC,IAAF,CAAOH,GAAG,GAAG,GAAb;AACd,MAAIC,GAAG,IAAI,CAAP,IAAYC,CAAC,CAACE,MAAF,IAAY,CAA5B,EAA+BF,CAAC,CAACC,IAAF,CAAOF,GAAG,GAAG,GAAb;AAC/B,SAAOC,CAAC,CAACG,IAAF,CAAO,GAAP,CAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,MAAMC,GAAG,GAAGd,MAAM,EAAlB;AACA,MAAMe,CAAC,GAAGf,MAAM,CAACgB,SAAP,CAAiBH,SAAjB,CAAV;AACA,MAAMI,QAAQ,GAAGjB,MAAM,CAACkB,QAAP,CAAgBH,CAAC,CAACI,IAAF,CAAOL,GAAP,CAAhB,CAAjB;;AACA,MAAI,CAACG,QAAQ,CAACG,SAAT,EAAD,IAAyB,EAA7B,EAAiC;AAC/B,qBAAUhB,IAAI,CAACiB,KAAL,CAAW,CAACJ,QAAQ,CAACG,SAAT,EAAZ,CAAV;AACD,GAFD,MAEO,IAAI,CAACH,QAAQ,CAACG,SAAT,EAAD,IAAyB,KAAK,EAAL,GAAU,EAAvC,EAA2C;AAChD,WAAOH,QAAQ,CAACK,QAAT,CAAkB,IAAlB,CAAP;AACD;;AACD,SAAOL,QAAQ,CAACK,QAAT,CAAkB,IAAlB,CAAP;AACD;AAED,OAAO,SAASC,yBAAT,CAAmCC,SAAnC,EAA8C;AACnD,MAAMC,UAAU,GAAGD,SAAS,GAAGxB,MAAM,CAACwB,SAAD,CAAT,GAAuBxB,MAAM,GAAG0B,OAAT,CAAiB,KAAjB,CAAnD;AACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,UAAlC;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAnC;AACA,MAAMC,oBAAoB,GAAGF,QAAQ,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAArC;AACA,SAAOP,UAAU,CAACS,IAAX,CAAgBJ,kBAAhB,EAAoCK,MAApC,CAA2CF,oBAA3C,EAAiEG,MAAjE,EAAP;AACD;AAGD,OAAO,SAASC,eAAT,GAA2B;AAChC,MAAMV,YAAY,GAAGC,YAAY,CAACC,UAAlC;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAnC;AACA,MAAMC,oBAAoB,GAAGF,QAAQ,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAArC;AACA,SAAOF,kBAAkB,GAAGG,oBAAoB,GAAG,EAAnD;AACD;AAED,OAAO,SAASK,uBAAT,CAAiCC,IAAjC,EAAuC;AAC5C,SAAOvC,MAAM,CAACuB,yBAAyB,CAACgB,IAAD,CAA1B,CAAN,CAAwCC,GAAxC,CAA4C,CAA5C,EAA+C,MAA/C,EAAuDJ,MAAvD,EAAP;AACD;AAED,OAAO,SAASK,cAAT,CAAwBF,IAAxB,EAA8B;AACnC,SAAOhB,yBAAyB,CAACgB,IAAD,CAAzB,GAAkC,GAAlC,GAAwCD,uBAAuB,CAACC,IAAD,CAAtE;AACD;AAED,OAAO,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAO3C,MAAM,CAAC2C,OAAD,CAAN,CAAgBH,GAAhB,CAAoB,CAAC,CAArB,EAAwB,MAAxB,CAAP;AACD;AAED,OAAO,SAASI,YAAT,CAAsBD,OAAtB,EAA+B;AACpC,SAAO3C,MAAM,CAAC2C,OAAD,CAAN,CAAgBH,GAAhB,CAAoB,CAApB,EAAuB,MAAvB,CAAP;AACD;AAED,OAAO,SAASK,UAAT,GAAsB;AAC3B,MAAMlB,YAAY,GAAGC,YAAY,CAACC,UAAlC;;AAD2B,4BAEFF,YAAY,CAACK,KAAb,CAAmB,GAAnB,CAFE;AAAA;AAAA,MAEpBc,KAFoB;AAAA,MAEbC,OAFa;;AAG3B,SAAO/C,MAAM,CAACkB,QAAP,CAAgB;AAAE4B,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,OAAO,EAAPA;AAAT,GAAhB,CAAP;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;AAE1B,SAAOhD,MAAM,GAAGiD,QAAT,CAAkBJ,UAAU,EAA5B,EAAgCnB,OAAhC,CAAwC,KAAxC,EAA+CU,MAA/C,CAAsD,YAAtD,CAAP;AACD","sourcesContent":["import moment from 'moment';\n\nexport function seconds_to_duration(seconds) {\n  // Returns a human-readable duration string\n  const hrs = Math.floor(seconds / 60 / 60);\n  const min = Math.floor((seconds / 60) % 60);\n  const sec = Math.floor(seconds % 60);\n  const l = [];\n  if (hrs != 0) l.push(hrs + 'h');\n  if (min != 0) l.push(min + 'm');\n  if (sec != 0 || l.length == 0) l.push(sec + 's');\n  return l.join(' ');\n}\n\nexport function friendlydate(timestamp) {\n  const now = moment();\n  const m = moment.parseZone(timestamp);\n  const sinceNow = moment.duration(m.diff(now));\n  if (-sinceNow.asSeconds() <= 60) {\n    return `${Math.round(-sinceNow.asSeconds())}s ago`;\n  } else if (-sinceNow.asSeconds() <= 60 * 60 * 24) {\n    return sinceNow.humanize(true);\n  }\n  return sinceNow.humanize(true);\n}\n\nexport function get_day_start_with_offset(dateParam) {\n  const dateMoment = dateParam ? moment(dateParam) : moment().startOf('day');\n  const start_of_day = localStorage.startOfDay;\n  const start_of_day_hours = parseInt(start_of_day.split(':')[0]);\n  const start_of_day_minutes = parseInt(start_of_day.split(':')[1]);\n  return dateMoment.hour(start_of_day_hours).minute(start_of_day_minutes).format();\n}\n\n// Return the startOfDay offset as a number of hours\nexport function get_hour_offset() {\n  const start_of_day = localStorage.startOfDay;\n  const start_of_day_hours = parseInt(start_of_day.split(':')[0]);\n  const start_of_day_minutes = parseInt(start_of_day.split(':')[1]);\n  return start_of_day_hours + start_of_day_minutes / 60;\n}\n\nexport function get_day_end_with_offset(date) {\n  return moment(get_day_start_with_offset(date)).add(1, 'days').format();\n}\n\nexport function get_day_period(date) {\n  return get_day_start_with_offset(date) + '/' + get_day_end_with_offset(date);\n}\n\nexport function get_prev_day(datestr) {\n  return moment(datestr).add(-1, 'days');\n}\n\nexport function get_next_day(datestr) {\n  return moment(datestr).add(1, 'days');\n}\n\nexport function get_offset() {\n  const start_of_day = localStorage.startOfDay;\n  const [hours, minutes] = start_of_day.split(':');\n  return moment.duration({ hours, minutes });\n}\n\nexport function get_today() {\n  // Gets \"today\" in an offset-aware way\n  return moment().subtract(get_offset()).startOf('day').format('YYYY-MM-DD');\n}\n"]}]}