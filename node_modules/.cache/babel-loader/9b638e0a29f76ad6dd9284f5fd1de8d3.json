{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/Bucket.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/Bucket.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2phc2thcmFuL2NvZGUvamFza2FyYW4vYWN0aXZpdHl3YXRjaC9hdy1zZXJ2ZXIvYXctd2VidWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0J1Y2tldCcsCiAgcHJvcHM6IHsKICAgIGlkOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBidWNrZXRfd2l0aF9ldmVudHM6IHsKICAgICAgICBldmVudHM6IFtdCiAgICAgIH0sCiAgICAgIGV2ZW50czogW10sCiAgICAgIGV2ZW50Y291bnQ6ICc/JywKICAgICAgZGF0ZXJhbmdlOiBudWxsLAogICAgICBtYXhEdXJhdGlvbjogMzEgKiAyNCAqIDYwICogNjAKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgYnVja2V0OiBmdW5jdGlvbiBidWNrZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydidWNrZXRzL2dldEJ1Y2tldCddKHRoaXMuaWQpIHx8IHt9OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGVyYW5nZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RhdGVyYW5nZSA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRFdmVudHModGhpcy5pZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkYXRlcmFuZ2UoKSB7CiAgICAgICAgcmV0dXJuIF9kYXRlcmFuZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRhdGVyYW5nZTsKICAgIH0oKQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9tb3VudGVkID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYnVja2V0cy9lbnN1cmVCdWNrZXRzJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEV2ZW50Q291bnQodGhpcy5pZCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgICAgcmV0dXJuIF9tb3VudGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIG1vdW50ZWQ7CiAgfSgpLAogIG1ldGhvZHM6IHsKICAgIGdldEV2ZW50czogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEV2ZW50cyA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGJ1Y2tldF9pZCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2J1Y2tldHMvZ2V0QnVja2V0V2l0aEV2ZW50cycsIHsKICAgICAgICAgICAgICAgICAgaWQ6IGJ1Y2tldF9pZCwKICAgICAgICAgICAgICAgICAgc3RhcnQ6IHRoaXMuZGF0ZXJhbmdlWzBdLmZvcm1hdCgpLAogICAgICAgICAgICAgICAgICBlbmQ6IHRoaXMuZGF0ZXJhbmdlWzFdLmZvcm1hdCgpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgdGhpcy5idWNrZXRfd2l0aF9ldmVudHMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzID0gdGhpcy5idWNrZXRfd2l0aF9ldmVudHMuZXZlbnRzOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRFdmVudHMoX3gpIHsKICAgICAgICByZXR1cm4gX2dldEV2ZW50cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0RXZlbnRzOwogICAgfSgpLAogICAgZ2V0RXZlbnRDb3VudDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEV2ZW50Q291bnQgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChidWNrZXRfaWQpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGF3LmNvdW50RXZlbnRzKGJ1Y2tldF9pZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRjb3VudCA9IF9jb250ZXh0NC5zZW50LmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEV2ZW50Q291bnQoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9nZXRFdmVudENvdW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRFdmVudENvdW50OwogICAgfSgpLAogICAgdXBkYXRlRXZlbnQ6IGZ1bmN0aW9uIHVwZGF0ZUV2ZW50KGV2ZW50KSB7CiAgICAgIHZhciBpID0gdGhpcy5ldmVudHMuZmluZEluZGV4KGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUuaWQgPT0gZXZlbnQuaWQ7CiAgICAgIH0pOwoKICAgICAgaWYgKGkgIT0gLTEpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy5ldmVudHMsIGksIGV2ZW50KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCc6KCcpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Bucket.vue"],"names":[],"mappings":";;;AAkCA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,GAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;AALA,KAAA;AAOA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,mBAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA;AAHA,GAdA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA;AAAA,iEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,SAAA,CAAA,KAAA,EAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GAnBA;AAwBA,EAAA,OAAA;AAAA,6DAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,CADA;;AAAA;AAAA;AAAA,qBAEA,KAAA,aAAA,CAAA,KAAA,EAAA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA;AAAA,iEAAA,kBAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,MAAA,CAAA,QAAA,CAAA,6BAAA,EAAA;AACA,kBAAA,EAAA,EAAA,SADA;AAEA,kBAAA,KAAA,EAAA,KAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAFA;AAGA,kBAAA,GAAA,EAAA,KAAA,SAAA,CAAA,CAAA,EAAA,MAAA;AAHA,iBAAA,CADA;;AAAA;AACA,qBAAA,kBADA;AAMA,qBAAA,MAAA,GAAA,KAAA,kBAAA,CAAA,MAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AASA,IAAA,aAAA;AAAA,qEAAA,kBAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,GAAA,CAAA,WAAA,CAAA,SAAA,CADA;;AAAA;AACA,qBAAA,UADA,kBACA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OATA;AAYA,IAAA,WAAA,EAAA,qBAAA,KAAA,EAAA;AACA,UAAA,CAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AAGA,aAAA,IAAA,CAAA,KAAA,MAAA,EAAA,CAAA,EAAA,KAAA;AACA,OAJA,MAIA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA;AArBA;AA5BA,CAAA","sourcesContent":["<template lang=\"pug\">\n\ndiv\n  h3 {{ id }}\n  table\n    tr\n      th Type:\n      td {{ bucket.type }}\n    tr\n      th Client:\n      td {{ bucket.client }}\n    tr\n      th Hostname:\n      td {{ bucket.hostname }}\n    tr\n      th Created:\n      td {{ bucket.created | iso8601 }}\n    tr(v-if=\"bucket.metadata\")\n      th First/last event:\n      td\n        | {{ bucket.metadata.start}} /\n        | {{ bucket.metadata.end }}\n    tr\n      th Eventcount:\n      td {{ eventcount }}\n\n  input-timeinterval(v-model=\"daterange\", :maxDuration=\"maxDuration\")\n\n  vis-timeline(:buckets=\"[bucket_with_events]\", :showRowLabels=\"false\")\n\n  aw-eventlist(:bucket_id=\"id\", @save=\"updateEvent\", :events=\"events\" editable=true)\n</template>\n\n<script>\nexport default {\n  name: 'Bucket',\n  props: {\n    id: String,\n  },\n  data: () => {\n    return {\n      bucket_with_events: { events: [] },\n      events: [],\n      eventcount: '?',\n      daterange: null,\n      maxDuration: 31 * 24 * 60 * 60,\n    };\n  },\n  computed: {\n    bucket() {\n      return this.$store.getters['buckets/getBucket'](this.id) || {};\n    },\n  },\n  watch: {\n    daterange: async function () {\n      await this.getEvents(this.id);\n    },\n  },\n  mounted: async function () {\n    await this.$store.dispatch('buckets/ensureBuckets');\n    await this.getEventCount(this.id);\n  },\n  methods: {\n    getEvents: async function (bucket_id) {\n      this.bucket_with_events = await this.$store.dispatch('buckets/getBucketWithEvents', {\n        id: bucket_id,\n        start: this.daterange[0].format(),\n        end: this.daterange[1].format(),\n      });\n      this.events = this.bucket_with_events.events;\n    },\n    getEventCount: async function (bucket_id) {\n      this.eventcount = (await this.$aw.countEvents(bucket_id)).data;\n    },\n    updateEvent: function (event) {\n      const i = this.events.findIndex(e => e.id == event.id);\n      if (i != -1) {\n        // This is needed instead of this.events[i] because insides of arrays\n        // are not reactive in Vue.\n        this.$set(this.events, i, event);\n      } else {\n        console.error(':(');\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}