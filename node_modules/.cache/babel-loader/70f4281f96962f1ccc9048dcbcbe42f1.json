{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/components/NewReleaseNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/components/NewReleaseNotification.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NewReleaseNotification.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n  div\n    b-alert(v-if=\"isVisible\", variant=\"info\", show)\n      | A new release, v{{ latestVersion }}, is available for \n      | #[a(href=\"https://activitywatch.net/downloads/\" target=\"_blank\" class=\"alert-link\") download], \n      | you can also #[a(href=\"javascript:void(0);\" class=\"alert-link\" @click=\"disableCheck\") disable]\n      | future reminders and checks for updates.\n      button(type=\"button\", class=\"close\", @click=\"isVisible=false\") &times;\n\n    b-alert(v-if=\"isFollowUpVisible\", variant=\"success\", show)\n      | Checking for new releases is now disabled, you can re-enable it in the \n      | #[router-link(to=\"/settings\" class=\"alert-link\" @click.native=\"isFollowUpVisible=false\") settings page].\n      button(type=\"button\", class=\"close\", @click=\"isFollowUpVisible=false\") &times;\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\nimport semver from 'semver';\n\nconst SHORT_BACKOFF_PERIOD = 24 * 60 * 60;\nconst LONG_BACKOFF_PERIOD = 5 * 24 * 60 * 60;\n// After reminding the user every SHORT_BACKOFF_PERIOD days for BACKOFF_THRESHOLD times, switch to LONG_BACKOFF_PERIOD\nconst BACKOFF_THRESHOLD = 5;\n// The following may be used for testing, roughly 10s and 30s each\n// const SHORT_BACKOFF_PERIOD = 10;\n// const LONG_BACKOFF_PERIOD = 30;\n\nexport default {\n  name: 'new-release-notification',\n  data() {\n    return {\n      isVisible: false,\n      isFollowUpVisible: false,\n      data: null, // data should have isEnabled, nextCheckTime, howOftenToCheck, timesChecked\n      currentVersion: null,\n      latestVersion: null,\n      latestVersionDate: null,\n      // The following constants can be used in other files, such as ReleaseNotificationSettings.vue\n      SHORT_BACKOFF_PERIOD: SHORT_BACKOFF_PERIOD,\n      LONG_BACKOFF_PERIOD: LONG_BACKOFF_PERIOD,\n    };\n  },\n  async mounted() {\n    this.retrieveData();\n    if (this.data && (!this.data.isEnabled || moment() < moment(this.data.nextCheckTime))) return;\n\n    await this.retrieveCurrentVersion();\n    await this.retrieveLatestVersion();\n    this.isVisible = this.getHasNewRelease() && this.getReleaseIsReady();\n\n    if (this.isVisible && this.data) {\n      const _timesChecked = Math.min(this.data.timesChecked + 1, BACKOFF_THRESHOLD);\n      const _howOftenToCheck =\n        _timesChecked > BACKOFF_THRESHOLD - 1 ? LONG_BACKOFF_PERIOD : SHORT_BACKOFF_PERIOD;\n      this.data = {\n        isEnabled: true,\n        nextCheckTime: moment().add(_howOftenToCheck, 'seconds'),\n        howOftenToCheck: _howOftenToCheck,\n        timesChecked: _timesChecked,\n      };\n    } else {\n      this.data = {\n        isEnabled: true,\n        nextCheckTime: moment().add(SHORT_BACKOFF_PERIOD, 'seconds'),\n        howOftenToCheck: SHORT_BACKOFF_PERIOD,\n        timesChecked: this.isVisible ? 1 : 0,\n      };\n    }\n\n    this.saveData();\n  },\n  methods: {\n    retrieveData() {\n      if (localStorage.getItem('newReleaseCheckData')) {\n        try {\n          this.data = JSON.parse(localStorage.getItem('newReleaseCheckData'));\n        } catch (err) {\n          console.error('newReleaseCheckData not found in localStorage: ', err);\n          localStorage.removeItem('newReleaseCheckData');\n        }\n      }\n    },\n    async retrieveCurrentVersion() {\n      try {\n        const response = await this.$aw.getInfo();\n        this.currentVersion = this.cleanVersionTag(response.version);\n      } catch (err) {\n        console.error('unable to connect to aw-server: ', err);\n      }\n    },\n    async retrieveLatestVersion() {\n      try {\n        const response = await axios.get(\n          'https://api.github.com/repos/ActivityWatch/activitywatch/releases/latest'\n        );\n        this.latestVersion = this.cleanVersionTag(response.data.tag_name);\n        this.latestVersionDate = moment(response.data.published_at);\n      } catch (err) {\n        console.error('unable to connect to GitHub API to check for latest version: ', err);\n      }\n    },\n    cleanVersionTag(tag) {\n      tag = tag.trim();\n\n      // Remove the build metadata if it exists, e.g. 'v0.8.dev+c6433ea'\n      const plus_idx = tag.indexOf('+');\n      tag = tag.substring(0, plus_idx != -1 ? plus_idx : tag.length);\n      // Remove server type if it exists, e.g. 'v0.8.0 (rust)'\n      const space_idx = tag.indexOf(' ');\n      tag = tag.substring(0, space_idx != -1 ? space_idx : tag.length);\n\n      return semver.valid(tag);\n    },\n    getHasNewRelease() {\n      // Null version means format was invalid, so fail silently and not show reminder\n      if (this.currentVersion && this.latestVersion)\n        return semver.lt(this.currentVersion, this.latestVersion);\n      return false;\n    },\n    getReleaseIsReady() {\n      // Want to make sure that the latest release is out for a week to make sure it's well tested\n      if (this.latestVersionDate) return moment() >= this.latestVersionDate.add(7, 'days');\n      return false;\n    },\n    saveData() {\n      const parsed = JSON.stringify(this.data);\n      localStorage.setItem('newReleaseCheckData', parsed);\n    },\n    disableCheck() {\n      this.isVisible = false;\n      this.isFollowUpVisible = true;\n      this.data.isEnabled = false;\n      this.saveData();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}