{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/store/modules/categories.js","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/store/modules/categories.js","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9qYXNrYXJhbi9jb2RlL2phc2thcmFuL2FjdGl2aXR5d2F0Y2gvYXctc2VydmVyL2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9tYXAgZnJvbSAibG9kYXNoL21hcCI7CmltcG9ydCBfbWF4IGZyb20gImxvZGFzaC9tYXgiOwppbXBvcnQgX2lzRXF1YWwgZnJvbSAibG9kYXNoL2lzRXF1YWwiOwppbXBvcnQgX2ZsYXR0ZW4gZnJvbSAibG9kYXNoL2ZsYXR0ZW4iOwppbXBvcnQgX3VuaXFCeSBmcm9tICJsb2Rhc2gvdW5pcUJ5IjsKaW1wb3J0IF9zb3J0QnkgZnJvbSAibG9kYXNoL3NvcnRCeSI7CmltcG9ydCBfY2xvbmVEZWVwIGZyb20gImxvZGFzaC9jbG9uZURlZXAiOwppbXBvcnQgeyBzYXZlQ2xhc3NlcywgbG9hZENsYXNzZXMsIGRlZmF1bHRDYXRlZ29yaWVzLCBidWlsZF9jYXRlZ29yeV9oaWVyYXJjaHksIGNyZWF0ZU1pc3NpbmdQYXJlbnRzIH0gZnJvbSAnfi91dGlsL2NsYXNzZXMnOwp2YXIgX3N0YXRlID0gewogIGNsYXNzZXM6IFtdLAogIGNsYXNzZXNfdW5zYXZlZF9jaGFuZ2VzOiBmYWxzZQp9Owp2YXIgZ2V0dGVycyA9IHsKICBjbGFzc2VzX2hpZXJhcmNoeTogZnVuY3Rpb24gY2xhc3Nlc19oaWVyYXJjaHkoc3RhdGUpIHsKICAgIHZhciBoaWVyID0gYnVpbGRfY2F0ZWdvcnlfaGllcmFyY2h5KF9jbG9uZURlZXAoc3RhdGUuY2xhc3NlcykpOwogICAgcmV0dXJuIF9zb3J0QnkoaGllciwgW2Z1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBjLmlkIHx8IDA7CiAgICB9XSk7CiAgfSwKICBhbGxfY2F0ZWdvcmllczogZnVuY3Rpb24gYWxsX2NhdGVnb3JpZXMoc3RhdGUpIHsKICAgIHJldHVybiBfdW5pcUJ5KF9mbGF0dGVuKHN0YXRlLmNsYXNzZXMubWFwKGZ1bmN0aW9uIChjKSB7CiAgICAgIHZhciBsID0gW107CgogICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBjLm5hbWUubGVuZ3RoOyBpKyspIHsKICAgICAgICBsLnB1c2goYy5uYW1lLnNsaWNlKDAsIGkpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGw7CiAgICB9KSksIGZ1bmN0aW9uICh2KSB7CiAgICAgIHJldHVybiB2LmpvaW4oJz4+Pj4nKTsKICAgIH0pOwogIH0sCiAgZ2V0X2NhdGVnb3J5OiBmdW5jdGlvbiBnZXRfY2F0ZWdvcnkoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoY2F0ZWdvcnlfYXJyKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jbGFzc2VzLmZpbmQoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gX2lzRXF1YWwoYy5uYW1lLCBjYXRlZ29yeV9hcnIpOwogICAgICB9KTsKICAgIH07CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsb2FkOiBmdW5jdGlvbiBsb2FkKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBjb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGxvYWRDbGFzc2VzKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX2NvbnRleHQudDEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICgwLCBfY29udGV4dC50MCkoJ2xvYWRDbGFzc2VzJywgX2NvbnRleHQudDEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgc2F2ZTogZnVuY3Rpb24gc2F2ZShfcmVmMikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlLCBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBzYXZlQ2xhc3NlcyhzdGF0ZS5jbGFzc2VzKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdzYXZlQ29tcGxldGVkJyk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHIpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIGxvYWRDbGFzc2VzOiBmdW5jdGlvbiBsb2FkQ2xhc3NlcyhzdGF0ZSwgY2xhc3NlcykgewogICAgY2xhc3NlcyA9IGNyZWF0ZU1pc3NpbmdQYXJlbnRzKGNsYXNzZXMpOwogICAgdmFyIGkgPSAwOwogICAgc3RhdGUuY2xhc3NlcyA9IGNsYXNzZXMubWFwKGZ1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGMsIHsKICAgICAgICBpZDogaSsrCiAgICAgIH0pOwogICAgfSk7CiAgICBjb25zb2xlLmxvZygnTG9hZGVkIGNsYXNzZXM6Jywgc3RhdGUuY2xhc3Nlcyk7CiAgICBzdGF0ZS5jbGFzc2VzX3Vuc2F2ZWRfY2hhbmdlcyA9IGZhbHNlOwogIH0sCiAgImltcG9ydCI6IGZ1bmN0aW9uIF9pbXBvcnQoc3RhdGUsIGNsYXNzZXMpIHsKICAgIHZhciBpID0gMDsKICAgIHN0YXRlLmNsYXNzZXMgPSBjbGFzc2VzLm1hcChmdW5jdGlvbiAoYykgewogICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihjLCB7CiAgICAgICAgaWQ6IGkrKwogICAgICB9KTsKICAgIH0pOwogICAgY29uc29sZS5sb2coJ0xvYWRlZCBjbGFzc2VzOicsIHN0YXRlLmNsYXNzZXMpOwogICAgc3RhdGUuY2xhc3Nlc191bnNhdmVkX2NoYW5nZXMgPSB0cnVlOwogIH0sCiAgdXBkYXRlQ2xhc3M6IGZ1bmN0aW9uIHVwZGF0ZUNsYXNzKHN0YXRlLCBuZXdfY2xhc3MpIHsKICAgIGNvbnNvbGUubG9nKCdVcGRhdGluZyBjbGFzczonLCBuZXdfY2xhc3MpOwoKICAgIHZhciBvbGRfY2xhc3MgPSBfY2xvbmVEZWVwKHN0YXRlLmNsYXNzZXNbbmV3X2NsYXNzLmlkXSk7CgogICAgaWYgKG5ld19jbGFzcy5pZCA9PT0gdW5kZWZpbmVkIHx8IG5ld19jbGFzcy5pZCA9PT0gbnVsbCkgewogICAgICBuZXdfY2xhc3MuaWQgPSBfbWF4KF9tYXAoc3RhdGUuY2xhc3NlcywgJ2lkJykpICsgMTsKICAgICAgc3RhdGUuY2xhc3Nlcy5wdXNoKG5ld19jbGFzcyk7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuYXNzaWduKHN0YXRlLmNsYXNzZXNbbmV3X2NsYXNzLmlkXSwgbmV3X2NsYXNzKTsKICAgIH0KCiAgICB2YXIgcGFyZW50X2RlcHRoID0gb2xkX2NsYXNzLm5hbWUubGVuZ3RoOwoKICAgIF9tYXAoc3RhdGUuY2xhc3NlcywgZnVuY3Rpb24gKGMpIHsKICAgICAgaWYgKF9pc0VxdWFsKG9sZF9jbGFzcy5uYW1lLCBjLm5hbWUuc2xpY2UoMCwgcGFyZW50X2RlcHRoKSkpIHsKICAgICAgICBjLm5hbWUgPSBuZXdfY2xhc3MubmFtZS5jb25jYXQoYy5uYW1lLnNsaWNlKHBhcmVudF9kZXB0aCkpOwogICAgICAgIGNvbnNvbGUubG9nKCdSZW5hbWVkIGNoaWxkOicsIGMubmFtZSk7CiAgICAgIH0KICAgIH0pOwoKICAgIHN0YXRlLmNsYXNzZXNfdW5zYXZlZF9jaGFuZ2VzID0gdHJ1ZTsKICB9LAogIGFkZENsYXNzOiBmdW5jdGlvbiBhZGRDbGFzcyhzdGF0ZSwgbmV3X2NsYXNzKSB7CiAgICBuZXdfY2xhc3MuaWQgPSBfbWF4KF9tYXAoc3RhdGUuY2xhc3NlcywgJ2lkJykpICsgMTsKICAgIHN0YXRlLmNsYXNzZXMucHVzaChuZXdfY2xhc3MpOwogICAgc3RhdGUuY2xhc3Nlc191bnNhdmVkX2NoYW5nZXMgPSB0cnVlOwogIH0sCiAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKHN0YXRlLCBjbHMpIHsKICAgIHN0YXRlLmNsYXNzZXMgPSBzdGF0ZS5jbGFzc2VzLmZpbHRlcihmdW5jdGlvbiAoYykgewogICAgICByZXR1cm4gYy5pZCAhPT0gY2xzLmlkOwogICAgfSk7CiAgICBzdGF0ZS5jbGFzc2VzX3Vuc2F2ZWRfY2hhbmdlcyA9IHRydWU7CiAgfSwKICByZXN0b3JlRGVmYXVsdENsYXNzZXM6IGZ1bmN0aW9uIHJlc3RvcmVEZWZhdWx0Q2xhc3NlcyhzdGF0ZSkgewogICAgdmFyIGkgPSAwOwogICAgc3RhdGUuY2xhc3NlcyA9IGNyZWF0ZU1pc3NpbmdQYXJlbnRzKGRlZmF1bHRDYXRlZ29yaWVzKS5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oYywgewogICAgICAgIGlkOiBpKysKICAgICAgfSk7CiAgICB9KTsKICAgIHN0YXRlLmNsYXNzZXNfdW5zYXZlZF9jaGFuZ2VzID0gdHJ1ZTsKICB9LAogIGNsZWFyQWxsOiBmdW5jdGlvbiBjbGVhckFsbChzdGF0ZSkgewogICAgc3RhdGUuY2xhc3NlcyA9IFtdOwogICAgc3RhdGUuY2xhc3Nlc191bnNhdmVkX2NoYW5nZXMgPSB0cnVlOwogIH0sCiAgc2F2ZUNvbXBsZXRlZDogZnVuY3Rpb24gc2F2ZUNvbXBsZXRlZChzdGF0ZSkgewogICAgc3RhdGUuY2xhc3Nlc191bnNhdmVkX2NoYW5nZXMgPSBmYWxzZTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBfc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/store/modules/categories.js"],"names":["saveClasses","loadClasses","defaultCategories","build_category_hierarchy","createMissingParents","_state","classes","classes_unsaved_changes","getters","classes_hierarchy","state","hier","c","id","all_categories","map","l","i","name","length","push","slice","v","join","get_category","category_arr","find","actions","load","commit","save","r","mutations","Object","assign","console","log","updateClass","new_class","old_class","undefined","parent_depth","concat","addClass","removeClass","cls","filter","restoreDefaultClasses","clearAll","saveCompleted","namespaced"],"mappings":";;;;;;;;;;;;;;;;AACA,SACEA,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,wBAJF,EAKEC,oBALF,QAMO,gBANP;AASA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,EADI;AAEbC,EAAAA,uBAAuB,EAAE;AAFZ,CAAf;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,iBAAiB,EAAE,2BAAAC,KAAK,EAAI;AAC1B,QAAMC,IAAI,GAAGR,wBAAwB,CAAC,WAAYO,KAAK,CAACJ,OAAlB,CAAD,CAArC;AACA,WAAO,QAASK,IAAT,EAAe,CAAC,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,EAAF,IAAQ,CAAZ;AAAA,KAAF,CAAf,CAAP;AACD,GAJa;AAKdC,EAAAA,cAAc,EAAE,wBAAAJ,KAAK,EAAI;AAEvB,WAAO,QACL,SACEA,KAAK,CAACJ,OAAN,CAAcS,GAAd,CAAkB,UAAAH,CAAC,EAAI;AACrB,UAAMI,CAAC,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,CAAC,CAACM,IAAF,CAAOC,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCD,QAAAA,CAAC,CAACI,IAAF,CAAOR,CAAC,CAACM,IAAF,CAAOG,KAAP,CAAa,CAAb,EAAgBJ,CAAhB,CAAP;AACD;;AACD,aAAOD,CAAP;AACD,KAND,CADF,CADK,EAUL,UAAAM,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,CAAO,MAAP,CAAJ;AAAA,KAVI,CAAP;AAYD,GAnBa;AAoBdC,EAAAA,YAAY,EAAE,sBAAAd,KAAK;AAAA,WAAI,UAAAe,YAAY,EAAI;AACrC,aAAOf,KAAK,CAACJ,OAAN,CAAcoB,IAAd,CAAmB,UAAAd,CAAC;AAAA,eAAI,SAAUA,CAAC,CAACM,IAAZ,EAAkBO,YAAlB,CAAJ;AAAA,OAApB,CAAP;AACD,KAFkB;AAAA;AApBL,CAAhB;AA0BA,IAAME,OAAO,GAAG;AACRC,EAAAA,IADQ,sBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA,4BACrBA,MADqB;AAAA;AAAA,qBACO5B,WAAW,EADlB;;AAAA;AAAA;AAAA,+BACd,aADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtB,GAHa;AAIR6B,EAAAA,IAJQ,uBAIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBpB,cAAAA,KAAiB,SAAjBA,KAAiB,EAAVmB,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACZ7B,WAAW,CAACU,KAAK,CAACJ,OAAP,CADC;;AAAA;AACtByB,cAAAA,CADsB;AAE5BF,cAAAA,MAAM,CAAC,eAAD,CAAN;AAF4B,gDAGrBE,CAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI7B;AARa,CAAhB;AAYA,IAAMC,SAAS,GAAG;AAChB/B,EAAAA,WADgB,uBACJS,KADI,EACGJ,OADH,EACY;AAC1BA,IAAAA,OAAO,GAAGF,oBAAoB,CAACE,OAAD,CAA9B;AAEA,QAAIW,CAAC,GAAG,CAAR;AACAP,IAAAA,KAAK,CAACJ,OAAN,GAAgBA,OAAO,CAACS,GAAR,CAAY,UAAAH,CAAC;AAAA,aAAIqB,MAAM,CAACC,MAAP,CAActB,CAAd,EAAiB;AAAEC,QAAAA,EAAE,EAAEI,CAAC;AAAP,OAAjB,CAAJ;AAAA,KAAb,CAAhB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B1B,KAAK,CAACJ,OAArC;AACAI,IAAAA,KAAK,CAACH,uBAAN,GAAgC,KAAhC;AACD,GARe;AAAA,6BASTG,KATS,EASFJ,OATE,EASO;AACrB,QAAIW,CAAC,GAAG,CAAR;AAEAP,IAAAA,KAAK,CAACJ,OAAN,GAAgBA,OAAO,CAACS,GAAR,CAAY,UAAAH,CAAC;AAAA,aAAIqB,MAAM,CAACC,MAAP,CAActB,CAAd,EAAiB;AAAEC,QAAAA,EAAE,EAAEI,CAAC;AAAP,OAAjB,CAAJ;AAAA,KAAb,CAAhB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B1B,KAAK,CAACJ,OAArC;AACAI,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GAfe;AAgBhB8B,EAAAA,WAhBgB,uBAgBJ3B,KAhBI,EAgBG4B,SAhBH,EAgBc;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,SAA/B;;AACA,QAAMC,SAAS,GAAG,WAAY7B,KAAK,CAACJ,OAAN,CAAcgC,SAAS,CAACzB,EAAxB,CAAZ,CAAlB;;AAEA,QAAIyB,SAAS,CAACzB,EAAV,KAAiB2B,SAAjB,IAA8BF,SAAS,CAACzB,EAAV,KAAiB,IAAnD,EAAyD;AACvDyB,MAAAA,SAAS,CAACzB,EAAV,GAAe,KAAM,KAAMH,KAAK,CAACJ,OAAZ,EAAqB,IAArB,CAAN,IAAoC,CAAnD;AACAI,MAAAA,KAAK,CAACJ,OAAN,CAAcc,IAAd,CAAmBkB,SAAnB;AACD,KAHD,MAGO;AACLL,MAAAA,MAAM,CAACC,MAAP,CAAcxB,KAAK,CAACJ,OAAN,CAAcgC,SAAS,CAACzB,EAAxB,CAAd,EAA2CyB,SAA3C;AACD;;AAGD,QAAMG,YAAY,GAAGF,SAAS,CAACrB,IAAV,CAAeC,MAApC;;AACA,SAAMT,KAAK,CAACJ,OAAZ,EAAqB,UAAAM,CAAC,EAAI;AACxB,UAAI,SAAU2B,SAAS,CAACrB,IAApB,EAA0BN,CAAC,CAACM,IAAF,CAAOG,KAAP,CAAa,CAAb,EAAgBoB,YAAhB,CAA1B,CAAJ,EAA8D;AAC5D7B,QAAAA,CAAC,CAACM,IAAF,GAASoB,SAAS,CAACpB,IAAV,CAAewB,MAAf,CAAsB9B,CAAC,CAACM,IAAF,CAAOG,KAAP,CAAaoB,YAAb,CAAtB,CAAT;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BxB,CAAC,CAACM,IAAhC;AACD;AACF,KALD;;AAOAR,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GArCe;AAsChBoC,EAAAA,QAtCgB,oBAsCPjC,KAtCO,EAsCA4B,SAtCA,EAsCW;AACzBA,IAAAA,SAAS,CAACzB,EAAV,GAAe,KAAM,KAAMH,KAAK,CAACJ,OAAZ,EAAqB,IAArB,CAAN,IAAoC,CAAnD;AACAI,IAAAA,KAAK,CAACJ,OAAN,CAAcc,IAAd,CAAmBkB,SAAnB;AACA5B,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GA1Ce;AA2ChBqC,EAAAA,WA3CgB,uBA2CJlC,KA3CI,EA2CGmC,GA3CH,EA2CQ;AACtBnC,IAAAA,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACJ,OAAN,CAAcwC,MAAd,CAAqB,UAAAlC,CAAC;AAAA,aAAIA,CAAC,CAACC,EAAF,KAASgC,GAAG,CAAChC,EAAjB;AAAA,KAAtB,CAAhB;AACAH,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GA9Ce;AA+ChBwC,EAAAA,qBA/CgB,iCA+CMrC,KA/CN,EA+Ca;AAC3B,QAAIO,CAAC,GAAG,CAAR;AACAP,IAAAA,KAAK,CAACJ,OAAN,GAAgBF,oBAAoB,CAACF,iBAAD,CAApB,CAAwCa,GAAxC,CAA4C,UAAAH,CAAC;AAAA,aAAIqB,MAAM,CAACC,MAAP,CAActB,CAAd,EAAiB;AAAEC,QAAAA,EAAE,EAAEI,CAAC;AAAP,OAAjB,CAAJ;AAAA,KAA7C,CAAhB;AACAP,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GAnDe;AAoDhByC,EAAAA,QApDgB,oBAoDPtC,KApDO,EAoDA;AACdA,IAAAA,KAAK,CAACJ,OAAN,GAAgB,EAAhB;AACAI,IAAAA,KAAK,CAACH,uBAAN,GAAgC,IAAhC;AACD,GAvDe;AAwDhB0C,EAAAA,aAxDgB,yBAwDFvC,KAxDE,EAwDK;AACnBA,IAAAA,KAAK,CAACH,uBAAN,GAAgC,KAAhC;AACD;AA1De,CAAlB;AA6DA,eAAe;AACb2C,EAAAA,UAAU,EAAE,IADC;AAEbxC,EAAAA,KAAK,EAAEL,MAFM;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbmB,EAAAA,OAAO,EAAPA,OAJa;AAKbK,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import _ from 'lodash';\nimport {\n  saveClasses,\n  loadClasses,\n  defaultCategories,\n  build_category_hierarchy,\n  createMissingParents,\n} from '~/util/classes';\n\n// initial state\nconst _state = {\n  classes: [],\n  classes_unsaved_changes: false,\n};\n\n// getters\nconst getters = {\n  classes_hierarchy: state => {\n    const hier = build_category_hierarchy(_.cloneDeep(state.classes));\n    return _.sortBy(hier, [c => c.id || 0]);\n  },\n  all_categories: state => {\n    // Returns a list of category names (a list of list of strings)\n    return _.uniqBy(\n      _.flatten(\n        state.classes.map(c => {\n          const l = [];\n          for (let i = 1; i <= c.name.length; i++) {\n            l.push(c.name.slice(0, i));\n          }\n          return l;\n        })\n      ),\n      v => v.join('>>>>') // Can be any separator that doesn't appear in the category names themselves\n    );\n  },\n  get_category: state => category_arr => {\n    return state.classes.find(c => _.isEqual(c.name, category_arr));\n  },\n};\n\n// actions\nconst actions = {\n  async load({ commit }) {\n    commit('loadClasses', await loadClasses());\n  },\n  async save({ state, commit }) {\n    const r = await saveClasses(state.classes);\n    commit('saveCompleted');\n    return r;\n  },\n};\n\n// mutations\nconst mutations = {\n  loadClasses(state, classes) {\n    classes = createMissingParents(classes);\n\n    let i = 0;\n    state.classes = classes.map(c => Object.assign(c, { id: i++ }));\n    console.log('Loaded classes:', state.classes);\n    state.classes_unsaved_changes = false;\n  },\n  import(state, classes) {\n    let i = 0;\n    // overwrite id even if already set\n    state.classes = classes.map(c => Object.assign(c, { id: i++ }));\n    console.log('Loaded classes:', state.classes);\n    state.classes_unsaved_changes = true;\n  },\n  updateClass(state, new_class) {\n    console.log('Updating class:', new_class);\n    const old_class = _.cloneDeep(state.classes[new_class.id]);\n\n    if (new_class.id === undefined || new_class.id === null) {\n      new_class.id = _.max(_.map(state.classes, 'id')) + 1;\n      state.classes.push(new_class);\n    } else {\n      Object.assign(state.classes[new_class.id], new_class);\n    }\n\n    // When a parent category is renamed, we also need to rename the children\n    const parent_depth = old_class.name.length;\n    _.map(state.classes, c => {\n      if (_.isEqual(old_class.name, c.name.slice(0, parent_depth))) {\n        c.name = new_class.name.concat(c.name.slice(parent_depth));\n        console.log('Renamed child:', c.name);\n      }\n    });\n\n    state.classes_unsaved_changes = true;\n  },\n  addClass(state, new_class) {\n    new_class.id = _.max(_.map(state.classes, 'id')) + 1;\n    state.classes.push(new_class);\n    state.classes_unsaved_changes = true;\n  },\n  removeClass(state, cls) {\n    state.classes = state.classes.filter(c => c.id !== cls.id);\n    state.classes_unsaved_changes = true;\n  },\n  restoreDefaultClasses(state) {\n    let i = 0;\n    state.classes = createMissingParents(defaultCategories).map(c => Object.assign(c, { id: i++ }));\n    state.classes_unsaved_changes = true;\n  },\n  clearAll(state) {\n    state.classes = [];\n    state.classes_unsaved_changes = true;\n  },\n  saveCompleted(state) {\n    state.classes_unsaved_changes = false;\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: _state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}