{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Bucket.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Bucket.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2phc2thcmFuL2NvZGUvamFza2FyYW4vYWN0aXZpdHl3YXRjaC9hdy1zZXJ2ZXItcnVzdC9hdy13ZWJ1aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQnVja2V0JywKICBwcm9wczogewogICAgaWQ6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJ1Y2tldF93aXRoX2V2ZW50czogewogICAgICAgIGV2ZW50czogW10KICAgICAgfSwKICAgICAgZXZlbnRzOiBbXSwKICAgICAgZXZlbnRjb3VudDogJz8nLAogICAgICBkYXRlcmFuZ2U6IG51bGwsCiAgICAgIG1heER1cmF0aW9uOiAzMSAqIDI0ICogNjAgKiA2MAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBidWNrZXQ6IGZ1bmN0aW9uIGJ1Y2tldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2J1Y2tldHMvZ2V0QnVja2V0J10odGhpcy5pZCkgfHwge307CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZGF0ZXJhbmdlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZGF0ZXJhbmdlID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEV2ZW50cyh0aGlzLmlkKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGRhdGVyYW5nZSgpIHsKICAgICAgICByZXR1cm4gX2RhdGVyYW5nZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZGF0ZXJhbmdlOwogICAgfSgpCiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX21vdW50ZWQgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdidWNrZXRzL2Vuc3VyZUJ1Y2tldHMnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RXZlbnRDb3VudCh0aGlzLmlkKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICByZXR1cm4gX21vdW50ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gbW91bnRlZDsKICB9KCksCiAgbWV0aG9kczogewogICAgZ2V0RXZlbnRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0RXZlbnRzID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoYnVja2V0X2lkKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYnVja2V0cy9nZXRCdWNrZXRXaXRoRXZlbnRzJywgewogICAgICAgICAgICAgICAgICBpZDogYnVja2V0X2lkLAogICAgICAgICAgICAgICAgICBzdGFydDogdGhpcy5kYXRlcmFuZ2VbMF0uZm9ybWF0KCksCiAgICAgICAgICAgICAgICAgIGVuZDogdGhpcy5kYXRlcmFuZ2VbMV0uZm9ybWF0KCkKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICB0aGlzLmJ1Y2tldF93aXRoX2V2ZW50cyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5ldmVudHMgPSB0aGlzLmJ1Y2tldF93aXRoX2V2ZW50cy5ldmVudHM7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEV2ZW50cyhfeCkgewogICAgICAgIHJldHVybiBfZ2V0RXZlbnRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRFdmVudHM7CiAgICB9KCksCiAgICBnZXRFdmVudENvdW50OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0RXZlbnRDb3VudCA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGJ1Y2tldF9pZCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kYXcuY291bnRFdmVudHMoYnVja2V0X2lkKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgdGhpcy5ldmVudGNvdW50ID0gX2NvbnRleHQ0LnNlbnQuZGF0YTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0RXZlbnRDb3VudChfeDIpIHsKICAgICAgICByZXR1cm4gX2dldEV2ZW50Q291bnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldEV2ZW50Q291bnQ7CiAgICB9KCksCiAgICB1cGRhdGVFdmVudDogZnVuY3Rpb24gdXBkYXRlRXZlbnQoZXZlbnQpIHsKICAgICAgdmFyIGkgPSB0aGlzLmV2ZW50cy5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5pZCA9PSBldmVudC5pZDsKICAgICAgfSk7CgogICAgICBpZiAoaSAhPSAtMSkgewogICAgICAgIHRoaXMuJHNldCh0aGlzLmV2ZW50cywgaSwgZXZlbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJzooJyk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Bucket.vue"],"names":[],"mappings":";;;AAkCA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,GAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;AALA,KAAA;AAOA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,mBAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA;AAHA,GAdA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA;AAAA,iEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,SAAA,CAAA,KAAA,EAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GAnBA;AAwBA,EAAA,OAAA;AAAA,6DAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,CADA;;AAAA;AAAA;AAAA,qBAEA,KAAA,aAAA,CAAA,KAAA,EAAA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAxBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA;AAAA,iEAAA,kBAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,MAAA,CAAA,QAAA,CAAA,6BAAA,EAAA;AACA,kBAAA,EAAA,EAAA,SADA;AAEA,kBAAA,KAAA,EAAA,KAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAFA;AAGA,kBAAA,GAAA,EAAA,KAAA,SAAA,CAAA,CAAA,EAAA,MAAA;AAHA,iBAAA,CADA;;AAAA;AACA,qBAAA,kBADA;AAMA,qBAAA,MAAA,GAAA,KAAA,kBAAA,CAAA,MAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AASA,IAAA,aAAA;AAAA,qEAAA,kBAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,GAAA,CAAA,WAAA,CAAA,SAAA,CADA;;AAAA;AACA,qBAAA,UADA,kBACA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OATA;AAYA,IAAA,WAAA,EAAA,qBAAA,KAAA,EAAA;AACA,UAAA,CAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AAGA,aAAA,IAAA,CAAA,KAAA,MAAA,EAAA,CAAA,EAAA,KAAA;AACA,OAJA,MAIA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA;AArBA;AA5BA,CAAA","sourcesContent":["<template lang=\"pug\">\n\ndiv\n  h3 {{ id }}\n  table\n    tr\n      th Type:\n      td {{ bucket.type }}\n    tr\n      th Client:\n      td {{ bucket.client }}\n    tr\n      th Hostname:\n      td {{ bucket.hostname }}\n    tr\n      th Created:\n      td {{ bucket.created | iso8601 }}\n    tr(v-if=\"bucket.metadata\")\n      th First/last event:\n      td\n        | {{ bucket.metadata.start}} /\n        | {{ bucket.metadata.end }}\n    tr\n      th Eventcount:\n      td {{ eventcount }}\n\n  input-timeinterval(v-model=\"daterange\", :maxDuration=\"maxDuration\")\n\n  vis-timeline(:buckets=\"[bucket_with_events]\", :showRowLabels=\"false\")\n\n  aw-eventlist(:bucket_id=\"id\", @save=\"updateEvent\", :events=\"events\" editable=true)\n</template>\n\n<script>\nexport default {\n  name: 'Bucket',\n  props: {\n    id: String,\n  },\n  data: () => {\n    return {\n      bucket_with_events: { events: [] },\n      events: [],\n      eventcount: '?',\n      daterange: null,\n      maxDuration: 31 * 24 * 60 * 60,\n    };\n  },\n  computed: {\n    bucket() {\n      return this.$store.getters['buckets/getBucket'](this.id) || {};\n    },\n  },\n  watch: {\n    daterange: async function () {\n      await this.getEvents(this.id);\n    },\n  },\n  mounted: async function () {\n    await this.$store.dispatch('buckets/ensureBuckets');\n    await this.getEventCount(this.id);\n  },\n  methods: {\n    getEvents: async function (bucket_id) {\n      this.bucket_with_events = await this.$store.dispatch('buckets/getBucketWithEvents', {\n        id: bucket_id,\n        start: this.daterange[0].format(),\n        end: this.daterange[1].format(),\n      });\n      this.events = this.bucket_with_events.events;\n    },\n    getEventCount: async function (bucket_id) {\n      this.eventcount = (await this.$aw.countEvents(bucket_id)).data;\n    },\n    updateEvent: function (event) {\n      const i = this.events.findIndex(e => e.id == event.id);\n      if (i != -1) {\n        // This is needed instead of this.events[i] because insides of arrays\n        // are not reactive in Vue.\n        this.$set(this.events, i, event);\n      } else {\n        console.error(':(');\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}