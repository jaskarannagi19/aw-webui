{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/SunburstClock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/SunburstClock.vue","mtime":1622830085278},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90YWlsIGZyb20gImxvZGFzaC90YWlsIjsKaW1wb3J0IF9maXJzdCBmcm9tICJsb2Rhc2gvZmlyc3QiOwppbXBvcnQgX2NvbmNhdCBmcm9tICJsb2Rhc2gvY29uY2F0IjsKaW1wb3J0IF9zb3J0QnkgZnJvbSAibG9kYXNoL3NvcnRCeSI7CmltcG9ydCBzdW5idXJzdCBmcm9tICcuL3N1bmJ1cnN0LWNsb2NrLmpzJzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2F3LXN1bmJ1cnN0LWNsb2NrJywKICBwcm9wczogewogICAgZGF0ZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBhZmtCdWNrZXRJZDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICB3aW5kb3dCdWNrZXRJZDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdGFydHRpbWU6IG1vbWVudCgpLAogICAgICBlbmR0aW1lOiBtb21lbnQoKSwKICAgICAgY2VudGVyTXNnOiAnTG9hZGluZy4uLicKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgZGF0ZTogZnVuY3Rpb24gZGF0ZSh0bykgewogICAgICB0aGlzLnN0YXJ0dGltZSA9IG1vbWVudCh0byk7CiAgICAgIHRoaXMuZW5kdGltZSA9IG1vbWVudCh0aGlzLnN0YXJ0dGltZSkuYWRkKDEsICdkYXlzJyk7CiAgICAgIHRoaXMudmlzdWFsaXplKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgc3VuYnVyc3QuY3JlYXRlKHRoaXMuJGVsKTsKICAgIHRoaXMuc3RhcnR0aW1lID0gbW9tZW50KHRoaXMuZGF0ZSk7CiAgICB0aGlzLmVuZHRpbWUgPSBtb21lbnQodGhpcy5kYXRlKS5hZGQoMSwgJ2RheXMnKTsKICAgIHRoaXMudmlzdWFsaXplKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2RheXNFdmVudHM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90b2RheXNFdmVudHMgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGJ1Y2tldF9pZCkgewogICAgICAgIHZhciBxdWVyeXN0ciwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBxdWVyeXN0ciA9IFsiUkVUVVJOID0gZmxvb2QocXVlcnlfYnVja2V0KFwiIi5jb25jYXQoYnVja2V0X2lkLCAiXCIpKTsiKV07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdy5xdWVyeShbIiIuY29uY2F0KHRoaXMuc3RhcnR0aW1lLmZvcm1hdCgpLCAiLyIpLmNvbmNhdCh0aGlzLmVuZHRpbWUuZm9ybWF0KCkpXSwgcXVlcnlzdHIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGRhdGFbMF0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gdG9kYXlzRXZlbnRzKF94KSB7CiAgICAgICAgcmV0dXJuIF90b2RheXNFdmVudHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRvZGF5c0V2ZW50czsKICAgIH0oKSwKICAgIHZpc3VhbGl6ZTogZnVuY3Rpb24gdmlzdWFsaXplKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgZnVuY3Rpb24gYnVpbGRIaWVyYXJjaHkocGFyZW50cywgY2hpbGRyZW4pIHsKICAgICAgICBwYXJlbnRzID0gX3NvcnRCeShwYXJlbnRzLCAndGltZXN0YW1wJywgJ2Rlc2MnKTsKICAgICAgICBjaGlsZHJlbiA9IF9zb3J0QnkoY2hpbGRyZW4sICd0aW1lc3RhbXAnLCAnZGVzYycpOwogICAgICAgIHZhciBpX2NoaWxkID0gMDsKCiAgICAgICAgZm9yICh2YXIgaV9wYXJlbnQgPSAwOyBpX3BhcmVudCA8IHBhcmVudHMubGVuZ3RoOyBpX3BhcmVudCsrKSB7CiAgICAgICAgICB2YXIgcCA9IHBhcmVudHNbaV9wYXJlbnRdOwogICAgICAgICAgdmFyIHBfc3RhcnQgPSBtb21lbnQocC50aW1lc3RhbXApOwogICAgICAgICAgdmFyIHBfZW5kID0gcF9zdGFydC5jbG9uZSgpLmFkZChwLmR1cmF0aW9uLCAnc2Vjb25kcycpOwogICAgICAgICAgcC5jaGlsZHJlbiA9IFtdOwoKICAgICAgICAgIHdoaWxlIChpX2NoaWxkIDwgY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBlID0gY2hpbGRyZW5baV9jaGlsZF07CiAgICAgICAgICAgIHZhciBlX3N0YXJ0ID0gbW9tZW50KGUudGltZXN0YW1wKTsKICAgICAgICAgICAgdmFyIGVfZW5kID0gZV9zdGFydC5jbG9uZSgpLmFkZChlLmR1cmF0aW9uLCAnc2Vjb25kcycpOwogICAgICAgICAgICB2YXIgYmVmb3JlX3BhcmVudCA9IGVfZW5kLmlzQmVmb3JlKHBfc3RhcnQpOwogICAgICAgICAgICB2YXIgd2l0aGluX3BhcmVudCA9IGVfc3RhcnQuaXNBZnRlcihwX3N0YXJ0KSAmJiBlX2VuZC5pc0JlZm9yZShwX2VuZCk7CiAgICAgICAgICAgIHZhciBhZnRlcl9wYXJlbnQgPSBlX3N0YXJ0LmlzQWZ0ZXIocF9lbmQpOwoKICAgICAgICAgICAgaWYgKGJlZm9yZV9wYXJlbnQpIHsKICAgICAgICAgICAgICBpX2NoaWxkKys7CiAgICAgICAgICAgIH0gZWxzZSBpZiAod2l0aGluX3BhcmVudCkgewogICAgICAgICAgICAgIHAuY2hpbGRyZW4gPSBfY29uY2F0KHAuY2hpbGRyZW4sIGUpOwogICAgICAgICAgICAgIGlfY2hpbGQrKzsKICAgICAgICAgICAgfSBlbHNlIGlmIChhZnRlcl9wYXJlbnQpIHsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0JldHdlZW4gcGFyZW50cycpOwogICAgICAgICAgICAgIHAuY2hpbGRyZW4gPSBfY29uY2F0KHAuY2hpbGRyZW4sIGUpOwogICAgICAgICAgICAgIGlfY2hpbGQrKzsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdmFyIG1fc3RhcnQgPSBtb21lbnQoX2ZpcnN0KHBhcmVudHMpLnRpbWVzdGFtcCk7CiAgICAgICAgdmFyIG1fZW5kID0gbW9tZW50KF90YWlsKHBhcmVudHMpLnRpbWVzdGFtcCk7CiAgICAgICAgdmFyIGR1cmF0aW9uID0gKG1fZW5kIC0gbV9zdGFydCkgLyAxMDAwOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICB0aW1lc3RhbXA6IF9maXJzdChwYXJlbnRzKS50aW1lc3RhbXAsCiAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIHRpdGxlOiAnUk9PVCcKICAgICAgICAgIH0sCiAgICAgICAgICBjaGlsZHJlbjogcGFyZW50cwogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHRoaXMudG9kYXlzRXZlbnRzKHRoaXMuYWZrQnVja2V0SWQpLnRoZW4oZnVuY3Rpb24gKGV2ZW50c19hZmspIHsKICAgICAgICBfdGhpcy50b2RheXNFdmVudHMoX3RoaXMud2luZG93QnVja2V0SWQpLnRoZW4oZnVuY3Rpb24gKGV2ZW50c193aW5kb3cpIHsKICAgICAgICAgIHZhciBoaWVyYXJjaHkgPSBudWxsOwoKICAgICAgICAgIGlmIChldmVudHNfYWZrLmxlbmd0aCA+IDAgJiYgZXZlbnRzX3dpbmRvdy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGhpZXJhcmNoeSA9IGJ1aWxkSGllcmFyY2h5KGV2ZW50c19hZmssIGV2ZW50c193aW5kb3cpOwogICAgICAgICAgICBfdGhpcy5jZW50ZXJNc2cgPSAnSG92ZXIgdG8gaW5zcGVjdCc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBoaWVyYXJjaHkgPSB7CiAgICAgICAgICAgICAgdGltZXN0YW1wOiAnJywKICAgICAgICAgICAgICBkdXJhdGlvbjogMCwKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICB0aXRsZTogJ1JPT1QnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBjaGlsZHJlbjogW10KICAgICAgICAgICAgfTsKICAgICAgICAgICAgX3RoaXMuY2VudGVyTXNnID0gJ05vIGRhdGEnOwogICAgICAgICAgfQoKICAgICAgICAgIHN1bmJ1cnN0LnVwZGF0ZShfdGhpcy4kZWwsIGhpZXJhcmNoeSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SunburstClock.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv.sunburst\n  div.sidebar\n    div.legend\n\n  div.main\n    div.chart\n      div.explanation\n        div.base\n          | {{ centerMsg }}\n        div.hover(style=\"visibility: hidden\")\n          div.date\n          div.title\n          div.time\n          div.duration\n          div.data(style=\"text-overflow: ellipsis; white-space: nowrap; overflow: hidden;\")\n</template>\n\n<style scoped lang=\"scss\">\n.sunburst {\n  font-family: 'Open Sans', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  width: 100%;\n  height: 620px;\n  margin-top: 10px;\n\n  .main {\n    width: 750px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  .sidebar {\n    float: left;\n    height: 0;\n    width: 100px;\n  }\n\n  .sequence {\n    width: 600px;\n    height: 70px;\n  }\n\n  .legend {\n    padding: 10px 0 0 3px;\n  }\n\n  .sequence text,\n  .legend text {\n    font-weight: 600;\n    fill: #fff;\n  }\n\n  .chart {\n    position: relative;\n  }\n\n  .chart path {\n    stroke: #fff;\n  }\n\n  .explanation {\n    position: absolute;\n    top: 260px;\n    left: 305px;\n    width: 140px;\n    text-align: center;\n    color: #666;\n    z-index: 10; // might not be needed\n\n    .base {\n      color: #ddd;\n      font-size: 2em;\n    }\n\n    .hover {\n      .date {\n        font-size: 0.8em;\n      }\n\n      .time {\n        font-size: 1em;\n      }\n\n      .title {\n        font-size: 2em;\n        font-weight: bold;\n      }\n\n      .duration {\n        font-size: 1em;\n      }\n\n      .data {\n        font-size: 1em;\n      }\n    }\n  }\n}\n</style>\n\n<script>\n// NOTE: This is just a Vue.js component wrapper for timeline-simple.js\n//       Code should generally go in the framework-independent file.\n\n// TODO: Sunburst requires a hierarchical data format\n\nimport sunburst from './sunburst-clock.js';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default {\n  name: 'aw-sunburst-clock',\n  props: {\n    date: { type: String },\n    afkBucketId: { type: String },\n    windowBucketId: { type: String },\n  },\n\n  data: () => {\n    return {\n      starttime: moment(),\n      endtime: moment(),\n      centerMsg: 'Loading...',\n    };\n  },\n\n  watch: {\n    date: function (to) {\n      this.starttime = moment(to);\n      this.endtime = moment(this.starttime).add(1, 'days');\n      this.visualize();\n    },\n  },\n  mounted: function () {\n    sunburst.create(this.$el);\n    this.starttime = moment(this.date);\n    this.endtime = moment(this.date).add(1, 'days');\n    this.visualize();\n  },\n\n  methods: {\n    todaysEvents: async function (bucket_id) {\n      const querystr = [`RETURN = flood(query_bucket(\"${bucket_id}\"));`];\n      const data = await this.$aw.query(\n        [`${this.starttime.format()}/${this.endtime.format()}`],\n        querystr\n      );\n      return data[0];\n    },\n\n    visualize: function () {\n      function buildHierarchy(parents, children) {\n        parents = _.sortBy(parents, 'timestamp', 'desc');\n        children = _.sortBy(children, 'timestamp', 'desc');\n\n        let i_child = 0;\n        for (let i_parent = 0; i_parent < parents.length; i_parent++) {\n          const p = parents[i_parent];\n          const p_start = moment(p.timestamp);\n          const p_end = p_start.clone().add(p.duration, 'seconds');\n\n          p.children = [];\n          while (i_child < children.length) {\n            const e = children[i_child];\n            const e_start = moment(e.timestamp);\n            const e_end = e_start.clone().add(e.duration, 'seconds');\n\n            const before_parent = e_end.isBefore(p_start);\n            const within_parent = e_start.isAfter(p_start) && e_end.isBefore(p_end);\n            const after_parent = e_start.isAfter(p_end);\n\n            // TODO: This isn't correct, yet\n            if (before_parent) {\n              // Child is behind parent\n              //console.log(\"Too far behind: \" + i_child);\n              i_child++;\n            } else if (within_parent) {\n              //console.log(\"Added relation: \" + i_child);\n              p.children = _.concat(p.children, e);\n              i_child++;\n            } else if (after_parent) {\n              // Child is ahead of parent\n              //console.log(\"Too far ahead: \" + i_child);\n              break;\n            } else {\n              // TODO: Split events when this happens\n              console.warn('Between parents');\n              p.children = _.concat(p.children, e);\n              i_child++;\n            }\n          }\n        }\n\n        // Build the root node\n        //console.log(parents);\n        const m_start = moment(_.first(parents).timestamp);\n        const m_end = moment(_.tail(parents).timestamp);\n        const duration = (m_end - m_start) / 1000;\n        return {\n          timestamp: _.first(parents).timestamp,\n          // TODO: If we want a 12/24h clock, this has to change\n          duration: duration,\n          data: { title: 'ROOT' },\n          children: parents,\n        };\n      }\n\n      this.todaysEvents(this.afkBucketId).then(events_afk => {\n        this.todaysEvents(this.windowBucketId).then(events_window => {\n          let hierarchy = null;\n          if (events_afk.length > 0 && events_window.length > 0) {\n            hierarchy = buildHierarchy(events_afk, events_window);\n            this.centerMsg = 'Hover to inspect';\n          } else {\n            // FIXME: This should do the equivalent of \"No data\" when such is the case, but it doesn't.\n            hierarchy = {\n              timestamp: '',\n              // TODO: If we want a 12/24h clock, this has to change\n              duration: 0,\n              data: { title: 'ROOT' },\n              children: [],\n            };\n            this.centerMsg = 'No data';\n          }\n          sunburst.update(this.$el, hierarchy);\n        });\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/visualizations"}]}