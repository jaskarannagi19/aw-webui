{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Buckets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Buckets.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vcmRlckJ5IGZyb20gImxvZGFzaC9vcmRlckJ5IjsKaW1wb3J0ICd2dWUtYXdlc29tZS9pY29ucy90cmFzaCc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvZG93bmxvYWQnOwppbXBvcnQgJ3Z1ZS1hd2Vzb21lL2ljb25zL2ZvbGRlci1vcGVuJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdCdWNrZXRzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW1wb3J0X2ZpbGU6IG51bGwsCiAgICAgIGltcG9ydF9lcnJvcjogbnVsbCwKICAgICAgZGVsZXRlX2J1Y2tldF9zZWxlY3RlZDogbnVsbCwKICAgICAgZmllbGRzOiBbewogICAgICAgIGtleTogJ2lkJywKICAgICAgICBsYWJlbDogJ0J1Y2tldCBJRCcsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogJ2hvc3RuYW1lJywKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAnbGFzdF91cGRhdGVkJywKICAgICAgICBsYWJlbDogJ1VwZGF0ZWQnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdhY3Rpb25zJywKICAgICAgICBsYWJlbDogJycKICAgICAgfV0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgYnVja2V0czogZnVuY3Rpb24gYnVja2V0cygpIHsKICAgICAgcmV0dXJuIF9vcmRlckJ5KHRoaXMuJHN0b3JlLnN0YXRlLmJ1Y2tldHMuYnVja2V0cywgW2Z1bmN0aW9uIChiKSB7CiAgICAgICAgcmV0dXJuIGIuaWQ7CiAgICAgIH1dLCBbJ2FzYyddKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpbXBvcnRfZmlsZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2ltcG9ydF9maWxlID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfbmV3X3ZhbHVlLCBfb2xkX3ZhbHVlKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCEodGhpcy5pbXBvcnRfZmlsZSAhPSBudWxsKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbXBvcnRpbmcgZmlsZScpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmltcG9ydEJ1Y2tldHModGhpcy5pbXBvcnRfZmlsZSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbXBvcnQgc3VjY2Vzc2Z1bCcpOwogICAgICAgICAgICAgICAgdGhpcy5pbXBvcnRfZXJyb3IgPSBudWxsOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbXBvcnQgZmFpbGVkJyk7CiAgICAgICAgICAgICAgICB0aGlzLmltcG9ydF9lcnJvciA9ICdJbXBvcnQgZmFpbGVkLCBzZWUgYXctc2VydmVyIGxvZ3MgZm9yIG1vcmUgaW5mbyc7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2J1Y2tldHMvbG9hZEJ1Y2tldHMnKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIHRoaXMuaW1wb3J0X2ZpbGUgPSBudWxsOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1syLCA5XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBpbXBvcnRfZmlsZShfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9pbXBvcnRfZmlsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaW1wb3J0X2ZpbGU7CiAgICB9KCkKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbW91bnRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2J1Y2tldHMvZW5zdXJlQnVja2V0cycpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIHRoaXMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHJldHVybiBfbW91bnRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBtb3VudGVkOwogIH0oKSwKICBtZXRob2RzOiB7CiAgICBvcGVuRGVsZXRlQnVja2V0TW9kYWw6IGZ1bmN0aW9uIG9wZW5EZWxldGVCdWNrZXRNb2RhbChidWNrZXRJZCkgewogICAgICB0aGlzLmRlbGV0ZV9idWNrZXRfc2VsZWN0ZWQgPSBidWNrZXRJZDsKICAgICAgdGhpcy4kcm9vdC4kZW1pdCgnYnY6OnNob3c6Om1vZGFsJywgJ2RlbGV0ZS1tb2RhbCcpOwogICAgfSwKICAgIGRlbGV0ZUJ1Y2tldDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RlbGV0ZUJ1Y2tldCA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGJ1Y2tldElkKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYnVja2V0cy9kZWxldGVCdWNrZXQnLCB7CiAgICAgICAgICAgICAgICAgIGJ1Y2tldElkOiBidWNrZXRJZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoJ2J2OjpoaWRlOjptb2RhbCcsICdkZWxldGUtbW9kYWwnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZGVsZXRlQnVja2V0KF94MykgewogICAgICAgIHJldHVybiBfZGVsZXRlQnVja2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkZWxldGVCdWNrZXQ7CiAgICB9KCksCiAgICBpbXBvcnRCdWNrZXRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfaW1wb3J0QnVja2V0cyA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGltcG9ydEZpbGUpIHsKICAgICAgICB2YXIgZm9ybURhdGEsIGhlYWRlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2J1Y2tldHMuanNvbicsIGltcG9ydEZpbGUpOwogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCB0aGlzLiRhdy5yZXEucG9zdCgnLzAvaW1wb3J0JywgZm9ybURhdGEsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBpbXBvcnRCdWNrZXRzKF94NCkgewogICAgICAgIHJldHVybiBfaW1wb3J0QnVja2V0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaW1wb3J0QnVja2V0czsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["Buckets.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv\n  h2 Buckets\n\n  b-alert(show)\n    | Are you looking to collect more data? Check out #[a(href=\"https://activitywatch.readthedocs.io/en/latest/watchers.html\") the docs] for more watchers.\n\n  b-table(hover, small, :items=\"buckets\", :fields=\"fields\", responsive=\"md\", sort-by=\"last_updated\", :sort-desc=\"true\")\n    template(v-slot:cell(id)=\"data\")\n      small\n        | {{ data.item.id }}\n    template(v-slot:cell(hostname)=\"data\")\n      small\n        | {{ data.item.hostname }}\n    template(v-slot:cell(last_updated)=\"data\")\n      // aw-server-python\n      small(v-if=\"data.item.last_updated\")\n        | {{ data.item.last_updated | friendlytime }}\n      // aw-server-rust\n      small(v-if=\"data.item.metadata && data.item.metadata.end\")\n        | {{ data.item.metadata.end | friendlytime }}\n    template(v-slot:cell(actions)=\"data\")\n      b-button-toolbar.float-right\n        b-button-group(size=\"sm\", class=\"mx-1\")\n          b-button(variant=\"primary\", :to=\"'/buckets/' + data.item.id\")\n            icon(name=\"folder-open\").d-none.d-md-inline-block\n            | Open\n          b-dropdown(variant=\"outline-secondary\", size=\"sm\", text=\"More\")\n            b-dropdown-item(\n                       :href=\"$aw.baseURL + '/api/0/buckets/' + data.item.id + '/export'\",\n                       :download=\"'aw-bucket-export-' + data.item.id + '.json'\",\n                       title=\"Export bucket to JSON\",\n                       variant=\"secondary\")\n                icon(name=\"download\")\n                | Export as JSON\n            b-dropdown-divider\n            b-dropdown-item-button(@click=\"openDeleteBucketModal(data.item.id)\",\n                     title=\"Delete this bucket permanently\",\n                     variant=\"danger\")\n              | #[icon(name=\"trash\")] Delete bucket\n\n  b-modal(id=\"delete-modal\", title=\"Danger!\", centered, hide-footer)\n    | Are you sure you want to delete bucket \"{{delete_bucket_selected}}\"?\n    br\n    br\n    b This is permanent and cannot be undone!\n    hr\n    div.float-right\n      b-button.mx-2(@click=\"$root.$emit('bv::hide::modal','delete-modal')\")\n        | Cancel\n      b-button(@click=\"deleteBucket(delete_bucket_selected)\", variant=\"danger\")\n        | Confirm\n\n  h3 Import and export buckets\n\n  b-card-group.deck\n    b-card(header=\"Import buckets\")\n      b-alert(v-if=\"import_error\" show variant=\"danger\" dismissable)\n        | {{ import_error }}\n      b-form-file(v-model=\"import_file\"\n                  placeholder=\"Choose a file or drop file here...\"\n                  drop-placeholder=\"Drop file here...\")\n      // TODO: This spinner could be placed in a more suitable place\n      div(v-if=\"import_file\" class=\"spinner-border\" role=\"status\")\n      span\n        | A valid file to import is a JSON file from either an export of a single bucket or an export from multiple buckets.\n        | If there are buckets with the same name the import will fail\n    b-card(header=\"Export buckets\")\n      b-button(:href=\"$aw.baseURL + '/api/0/export'\",\n               :download=\"'aw-bucket-export.json'\",\n               title=\"Export bucket to JSON\",\n               variant=\"outline-secondary\")\n        icon(name=\"download\")\n        | Export all buckets as JSON\n\n</template>\n\n<style lang=\"scss\">\n// This won't work if scoped\n.bucket-card {\n  .card-header,\n  .card-footer {\n    padding: 0.5em 0.75em 0.5em 0.75em;\n  }\n\n  .card-body {\n    padding: 0.5em;\n  }\n}\n</style>\n\n<style scoped lang=\"scss\">\n.bucket-card {\n  margin-bottom: 1em;\n}\n\n.bucket-last-updated {\n  color: #666;\n}\n</style>\n\n<script>\nimport 'vue-awesome/icons/trash';\nimport 'vue-awesome/icons/download';\nimport 'vue-awesome/icons/folder-open';\nimport _ from 'lodash';\n\nexport default {\n  name: 'Buckets',\n  data() {\n    return {\n      import_file: null,\n      import_error: null,\n      delete_bucket_selected: null,\n      fields: [\n        { key: 'id', label: 'Bucket ID', sortable: true },\n        { key: 'hostname', sortable: true },\n        { key: 'last_updated', label: 'Updated', sortable: true },\n        { key: 'actions', label: '' },\n      ],\n    };\n  },\n  computed: {\n    buckets: function () {\n      return _.orderBy(this.$store.state.buckets.buckets, [b => b.id], ['asc']);\n    },\n  },\n  watch: {\n    import_file: async function (_new_value, _old_value) {\n      if (this.import_file != null) {\n        console.log('Importing file');\n        try {\n          await this.importBuckets(this.import_file);\n          console.log('Import successful');\n          this.import_error = null;\n        } catch (err) {\n          console.log('Import failed');\n          // TODO: Make aw-server report error message so it can be shown in the web-ui\n          this.import_error = 'Import failed, see aw-server logs for more info';\n        }\n        // We need to reload buckets even if we fail because imports can be partial\n        // (first bucket succeeds, second fails for example when importing multiple)\n        await this.$store.dispatch('buckets/loadBuckets');\n        this.import_file = null;\n      }\n    },\n  },\n  mounted: async function () {\n    await this.$store.dispatch('buckets/ensureBuckets');\n  },\n  methods: {\n    openDeleteBucketModal: function (bucketId) {\n      this.delete_bucket_selected = bucketId;\n      this.$root.$emit('bv::show::modal', 'delete-modal');\n    },\n    deleteBucket: async function (bucketId) {\n      await this.$store.dispatch('buckets/deleteBucket', { bucketId });\n      this.$root.$emit('bv::hide::modal', 'delete-modal');\n    },\n    importBuckets: async function (importFile) {\n      const formData = new FormData();\n      formData.append('buckets.json', importFile);\n      const headers = { 'Content-Type': 'multipart/form-data' };\n      return this.$aw.req.post('/0/import', formData, { headers });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}