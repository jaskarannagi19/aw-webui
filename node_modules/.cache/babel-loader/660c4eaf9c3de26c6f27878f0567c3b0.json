{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/activity/Activity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/activity/Activity.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvaG9tZS9qYXNrYXJhbi9jb2RlL2phc2thcmFuL2FjdGl2aXR5d2F0Y2gvYXctc2VydmVyL2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci9hdy13ZWJ1aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZmlsdGVyIGZyb20gImxvZGFzaC9maWx0ZXIiOwppbXBvcnQgX2lzRXF1YWwgZnJvbSAibG9kYXNoL2lzRXF1YWwiOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCB7IGdldF9kYXlfc3RhcnRfd2l0aF9vZmZzZXQsIGdldF90b2RheSB9IGZyb20gJ34vdXRpbC90aW1lJzsKaW1wb3J0ICd2dWUtYXdlc29tZS9pY29ucy9hcnJvdy1sZWZ0JzsKaW1wb3J0ICd2dWUtYXdlc29tZS9pY29ucy9hcnJvdy1yaWdodCc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvc3luYyc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvcGx1cyc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvZWRpdCc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvdGltZXMnOwppbXBvcnQgJ3Z1ZS1hd2Vzb21lL2ljb25zL3NhdmUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FjdGl2aXR5JywKICBwcm9wczogewogICAgaG9zdDogU3RyaW5nLAogICAgZGF0ZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBwZXJpb2RMZW5ndGg6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdkYXknCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdG9kYXk6IGdldF90b2RheSgpLAogICAgICBmaWx0ZXJDYXRlZ29yeTogbnVsbCwKICAgICAgaW5jbHVkZUF1ZGlibGU6IHRydWUsCiAgICAgIGZpbHRlckFGSzogdHJ1ZSwKICAgICAgbmV3X3ZpZXc6IHt9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHZpZXdzOiBmdW5jdGlvbiB2aWV3cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnZpZXdzLnZpZXdzOwogICAgfSwKICAgIGN1cnJlbnRWaWV3OiBmdW5jdGlvbiBjdXJyZW50VmlldygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLnZpZXdzLmZpbmQoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdi5pZCA9PSBfdGhpcy4kcm91dGUucGFyYW1zLnZpZXdfaWQ7CiAgICAgIH0pIHx8IHRoaXMudmlld3NbMF07CiAgICB9LAogICAgX2RhdGU6IGZ1bmN0aW9uIF9kYXRlKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRlIHx8IGdldF90b2RheSgpOwogICAgfSwKICAgIHN1YnZpZXc6IGZ1bmN0aW9uIHN1YnZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5tZXRhLnN1YnZpZXc7CiAgICB9LAogICAgY2F0ZWdvcmllczogZnVuY3Rpb24gY2F0ZWdvcmllcygpIHsKICAgICAgdmFyIGNhdHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjYXRlZ29yaWVzL2FsbF9jYXRlZ29yaWVzJ107CiAgICAgIHZhciBlbnRyaWVzID0gY2F0cy5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogYy5qb2luKCcgPiAnKSwKICAgICAgICAgIHZhbHVlOiBjCiAgICAgICAgfTsKICAgICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhLnRleHQgPiBiLnRleHQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gW3sKICAgICAgICB0ZXh0OiAnQWxsJywKICAgICAgICB2YWx1ZTogbnVsbAogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1VuY2F0ZWdvcml6ZWQnLAogICAgICAgIHZhbHVlOiBbJ1VuY2F0ZWdvcml6ZWQnXQogICAgICB9XS5jb25jYXQoZW50cmllcyk7CiAgICB9LAogICAgZmlsdGVyQ2F0ZWdvcmllczogZnVuY3Rpb24gZmlsdGVyQ2F0ZWdvcmllcygpIHsKICAgICAgaWYgKHRoaXMuZmlsdGVyQ2F0ZWdvcnkpIHsKICAgICAgICB2YXIgY2F0cyA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NhdGVnb3JpZXMvYWxsX2NhdGVnb3JpZXMnXTsKCiAgICAgICAgdmFyIGlzQ2hpbGQgPSBmdW5jdGlvbiBpc0NoaWxkKHApIHsKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYykgewogICAgICAgICAgICByZXR1cm4gYy5sZW5ndGggPiBwLmxlbmd0aCAmJiBfaXNFcXVhbChwLCBjLnNsaWNlKDAsIHAubGVuZ3RoKSk7CiAgICAgICAgICB9OwogICAgICAgIH07CgogICAgICAgIHZhciBjaGlsZHJlbiA9IF9maWx0ZXIoY2F0cywgaXNDaGlsZCh0aGlzLmZpbHRlckNhdGVnb3J5KSk7CgogICAgICAgIHJldHVybiBbdGhpcy5maWx0ZXJDYXRlZ29yeV0uY29uY2F0KGNoaWxkcmVuKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSwKICAgIGxpbmtfcHJlZml4OiBmdW5jdGlvbiBsaW5rX3ByZWZpeCgpIHsKICAgICAgcmV0dXJuICIvYWN0aXZpdHkvIi5jb25jYXQodGhpcy5ob3N0LCAiLyIpLmNvbmNhdCh0aGlzLnBlcmlvZExlbmd0aCk7CiAgICB9LAogICAgcGVyaW9kdXNhZ2U6IGZ1bmN0aW9uIHBlcmlvZHVzYWdlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snYWN0aXZpdHkvZ2V0QWN0aXZlSGlzdG9yeUFyb3VuZFRpbWVwZXJpb2QnXSh0aGlzLnRpbWVwZXJpb2QpOwogICAgfSwKICAgIHRpbWVwZXJpb2Q6IGZ1bmN0aW9uIHRpbWVwZXJpb2QoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgc3RhcnQ6IGdldF9kYXlfc3RhcnRfd2l0aF9vZmZzZXQodGhpcy5fZGF0ZSksCiAgICAgICAgbGVuZ3RoOiBbMSwgdGhpcy5wZXJpb2RMZW5ndGhdCiAgICAgIH07CiAgICB9LAogICAgZGF0ZWZvcm1hdDogZnVuY3Rpb24gZGF0ZWZvcm1hdCgpIHsKICAgICAgaWYgKHRoaXMucGVyaW9kTGVuZ3RoID09PSAnZGF5JykgewogICAgICAgIHJldHVybiAnWVlZWS1NTS1ERCc7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5wZXJpb2RMZW5ndGggPT09ICd3ZWVrJykgewogICAgICAgIHJldHVybiAnWVlZWVsgV11XVyc7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5wZXJpb2RMZW5ndGggPT09ICdtb250aCcpIHsKICAgICAgICByZXR1cm4gJ1lZWVktTU0nOwogICAgICB9IGVsc2UgaWYgKHRoaXMucGVyaW9kTGVuZ3RoID09PSAneWVhcicpIHsKICAgICAgICByZXR1cm4gJ1lZWVknOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAnWVlZWS1NTS1ERCc7CiAgICAgIH0KICAgIH0sCiAgICBwZXJpb2RSZWFkYWJsZTogZnVuY3Rpb24gcGVyaW9kUmVhZGFibGUoKSB7CiAgICAgIHJldHVybiBtb21lbnQodGhpcy50aW1lcGVyaW9kLnN0YXJ0KS5mb3JtYXQodGhpcy5kYXRlZm9ybWF0KTsKICAgIH0sCiAgICBwZXJpb2RMZW5ndGhNb21lbnQ6IGZ1bmN0aW9uIHBlcmlvZExlbmd0aE1vbWVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMucGVyaW9kTGVuZ3RoQ29udmVydE1vbWVudCh0aGlzLnBlcmlvZExlbmd0aCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaG9zdDogZnVuY3Rpb24gaG9zdCgpIHsKICAgICAgdGhpcy5yZWZyZXNoKCk7CiAgICB9LAogICAgdGltZXBlcmlvZDogZnVuY3Rpb24gdGltZXBlcmlvZCgpIHsKICAgICAgdGhpcy5yZWZyZXNoKCk7CiAgICB9LAogICAgZmlsdGVyQ2F0ZWdvcnk6IGZ1bmN0aW9uIGZpbHRlckNhdGVnb3J5KCkgewogICAgICB0aGlzLnJlZnJlc2goKTsKICAgIH0sCiAgICBmaWx0ZXJBRks6IGZ1bmN0aW9uIGZpbHRlckFGSygpIHsKICAgICAgdGhpcy5yZWZyZXNoKCk7CiAgICB9LAogICAgaW5jbHVkZUF1ZGlibGU6IGZ1bmN0aW9uIGluY2x1ZGVBdWRpYmxlKCkgewogICAgICB0aGlzLnJlZnJlc2goKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbW91bnRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndmlld3MvbG9hZCcpOwogICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRlZ29yaWVzL2xvYWQnKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZWZyZXNoKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHJldHVybiBfbW91bnRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBtb3VudGVkOwogIH0oKSwKICBtZXRob2RzOiB7CiAgICBwcmV2aW91c1BlcmlvZDogZnVuY3Rpb24gcHJldmlvdXNQZXJpb2QoKSB7CiAgICAgIHJldHVybiBtb21lbnQodGhpcy5fZGF0ZSkuc3VidHJhY3QoMSwgIiIuY29uY2F0KHRoaXMucGVyaW9kTGVuZ3RoLCAicyIpKS5mb3JtYXQoJ1lZWVktTU0tREQnKTsKICAgIH0sCiAgICBuZXh0UGVyaW9kOiBmdW5jdGlvbiBuZXh0UGVyaW9kKCkgewogICAgICByZXR1cm4gbW9tZW50KHRoaXMuX2RhdGUpLmFkZCgxLCAiIi5jb25jYXQodGhpcy5wZXJpb2RMZW5ndGgsICJzIikpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgfSwKICAgIHBlcmlvZExlbmd0aENvbnZlcnRNb21lbnQ6IGZ1bmN0aW9uIHBlcmlvZExlbmd0aENvbnZlcnRNb21lbnQocGVyaW9kTGVuZ3RoKSB7CiAgICAgIGlmIChwZXJpb2RMZW5ndGggPT09ICdkYXknKSB7CiAgICAgICAgcmV0dXJuICdkYXknOwogICAgICB9IGVsc2UgaWYgKHBlcmlvZExlbmd0aCA9PT0gJ3dlZWsnKSB7CiAgICAgICAgcmV0dXJuICdpc29XZWVrJzsKICAgICAgfSBlbHNlIGlmIChwZXJpb2RMZW5ndGggPT09ICdtb250aCcpIHsKICAgICAgICByZXR1cm4gJ21vbnRoJzsKICAgICAgfSBlbHNlIGlmIChwZXJpb2RMZW5ndGggPT09ICd5ZWFyJykgewogICAgICAgIHJldHVybiAneWVhcic7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5lcnJvcignSW52YWxpZCBwZXJpb2RMZW5ndGggJHtwZXJpb2RMZW5ndGh9LCBkZWZhdWx0aW5nIHRvICJkYXkiJyk7CiAgICAgICAgcmV0dXJuICdkYXknOwogICAgICB9CiAgICB9LAogICAgc2V0RGF0ZTogZnVuY3Rpb24gc2V0RGF0ZShkYXRlLCBwZXJpb2RMZW5ndGgpIHsKICAgICAgaWYgKCFwZXJpb2RMZW5ndGgpIHsKICAgICAgICBwZXJpb2RMZW5ndGggPSB0aGlzLnBlcmlvZExlbmd0aDsKICAgICAgfQoKICAgICAgdmFyIG5ld19wZXJpb2RfbGVuZ3RoX21vbWVudCA9IHRoaXMucGVyaW9kTGVuZ3RoQ29udmVydE1vbWVudChwZXJpb2RMZW5ndGgpOwogICAgICB2YXIgbmV3X2RhdGUgPSBtb21lbnQoZGF0ZSkuc3RhcnRPZihuZXdfcGVyaW9kX2xlbmd0aF9tb21lbnQpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICBjb25zb2xlLmxvZyhuZXdfZGF0ZSwgcGVyaW9kTGVuZ3RoKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9hY3Rpdml0eS8iLmNvbmNhdCh0aGlzLmhvc3QsICIvIikuY29uY2F0KHBlcmlvZExlbmd0aCwgIi8iKS5jb25jYXQobmV3X2RhdGUsICIvIikuY29uY2F0KHRoaXMuc3VidmlldykpOwogICAgfSwKICAgIHJlZnJlc2g6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZWZyZXNoID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoZm9yY2UpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdhY3Rpdml0eS9lbnN1cmVfbG9hZGVkJywgewogICAgICAgICAgICAgICAgICB0aW1lcGVyaW9kOiB0aGlzLnRpbWVwZXJpb2QsCiAgICAgICAgICAgICAgICAgIGhvc3Q6IHRoaXMuaG9zdCwKICAgICAgICAgICAgICAgICAgZm9yY2U6IGZvcmNlLAogICAgICAgICAgICAgICAgICBmaWx0ZXJBRks6IHRoaXMuZmlsdGVyQUZLLAogICAgICAgICAgICAgICAgICBpbmNsdWRlQXVkaWJsZTogdGhpcy5pbmNsdWRlQXVkaWJsZSwKICAgICAgICAgICAgICAgICAgZmlsdGVyQ2F0ZWdvcmllczogdGhpcy5maWx0ZXJDYXRlZ29yaWVzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVmcmVzaChfeCkgewogICAgICAgIHJldHVybiBfcmVmcmVzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVmcmVzaDsKICAgIH0oKSwKICAgIGxvYWRfZGVtbzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2xvYWRfZGVtbyA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FjdGl2aXR5L2xvYWRfZGVtbycpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBsb2FkX2RlbW8oKSB7CiAgICAgICAgcmV0dXJuIF9sb2FkX2RlbW8uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvYWRfZGVtbzsKICAgIH0oKSwKICAgIGNoZWNrRm9ybVZhbGlkaXR5OiBmdW5jdGlvbiBjaGVja0Zvcm1WYWxpZGl0eSgpIHsKICAgICAgdmFyIGNoZWNrcyA9IHsKICAgICAgICAnSUQgaXMgbm90IHVuaXF1ZSc6IHRoaXMuJHN0b3JlLnN0YXRlLnZpZXdzLnZpZXdzLm1hcChmdW5jdGlvbiAodikgewogICAgICAgICAgcmV0dXJuIHYuaWQ7CiAgICAgICAgfSkuaW5jbHVkZXModGhpcy5uZXdfdmlldy5pZCksCiAgICAgICAgJ01pc3NpbmcgbmFtZSc6IHRoaXMubmV3X3ZpZXcubmFtZSA9PT0gJycKICAgICAgfTsKICAgICAgdmFyIGVycm9ycyA9IE9iamVjdC5lbnRyaWVzKGNoZWNrcykuZmlsdGVyKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgIF9rID0gX3JlZjJbMF0sCiAgICAgICAgICAgIHYgPSBfcmVmMlsxXTsKCiAgICAgICAgcmV0dXJuIHY7CiAgICAgIH0pLm1hcChmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgICB2YXIgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMiksCiAgICAgICAgICAgIGsgPSBfcmVmNFswXSwKICAgICAgICAgICAgX3YgPSBfcmVmNFsxXTsKCiAgICAgICAgcmV0dXJuIGs7CiAgICAgIH0pOwogICAgICB2YXIgdmFsaWQgPSBlcnJvcnMubGVuZ3RoID09IDA7CgogICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgYWxlcnQoIkludmFsaWQgZm9ybSBpbnB1dDogIi5jb25jYXQoZXJyb3JzKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB2YWxpZDsKICAgIH0sCiAgICBoYW5kbGVPazogZnVuY3Rpb24gaGFuZGxlT2soZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy5oYW5kbGVTdWJtaXQoKTsKICAgIH0sCiAgICBoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgdmFsaWQgPSB0aGlzLmNoZWNrRm9ybVZhbGlkaXR5KCk7CgogICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3ZpZXdzL2FkZFZpZXcnLCB7CiAgICAgICAgaWQ6IHRoaXMubmV3X3ZpZXcuaWQsCiAgICAgICAgbmFtZTogdGhpcy5uZXdfdmlldy5uYW1lCiAgICAgIH0pOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLiRyZWZzLm5ld192aWV3LmhpZGUoKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVzZXRNb2RhbDogZnVuY3Rpb24gcmVzZXRNb2RhbCgpIHsKICAgICAgdGhpcy5uZXdfdmlldyA9IHsKICAgICAgICBpZDogJycsCiAgICAgICAgbmFtZTogJycKICAgICAgfTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Activity.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv\n  h3.mb-0 Activity for {{ periodReadable }}\n\n  div.mb-2\n    ul.list-group.list-group-horizontal-md.mb-3(style=\"font-size: 0.9em; opacity: 0.7\")\n      li.list-group-item.pl-0.pr-3.py-0(style=\"border: 0\")\n        | #[b Host:] {{ host }}\n      li.list-group-item.pl-0.pr-3.py-0(style=\"border: 0\")\n        | #[b Time active:] {{ $store.state.activity.active.duration | friendlyduration }}\n\n  div.mb-2.d-flex\n    div\n      b-input-group\n        b-input-group-prepend\n          b-button.px-2(:to=\"link_prefix + '/' + previousPeriod() + '/' + subview\",\n                   variant=\"outline-dark\")\n            icon(name=\"arrow-left\")\n        b-select.px-2(:value=\"periodLength\", :options=\"['day', 'week', 'month']\",\n                 @change=\"(periodLength) => setDate(_date, periodLength)\")\n        b-input-group-append\n          b-button.px-2(:to=\"link_prefix + '/' + nextPeriod() + '/' + subview\",\n                   :disabled=\"nextPeriod() > today\", variant=\"outline-dark\")\n            icon(name=\"arrow-right\")\n\n    div.mx-2(v-if=\"periodLength === 'day'\")\n      input.form-control.px-2(id=\"date\" type=\"date\" :value=\"_date\" :max=\"today\"\n                         @change=\"setDate($event.target.value, periodLength)\")\n\n    div.ml-auto\n      b-button-group\n        b-button.px-2(@click=\"refresh(true)\", variant=\"outline-dark\")\n          icon(name=\"sync\")\n          span.d-none.d-md-inline\n            |  Refresh\n\n  aw-periodusage(:periodusage_arr=\"periodusage\", @update=\"setDate\")\n\n  ul.row.nav.nav-tabs.mt-3.px-3\n    li.nav-item(v-for=\"view in views\")\n      router-link.nav-link(:to=\"{ name: 'activity-view', params: {...$route.params, view_id: view.id}}\" :class=\"{'router-link-exact-active': currentView.id == view.id}\")\n        h6 {{view.name}}\n\n    li.nav-item(style=\"margin-left: auto\")\n      a.nav-link(@click=\"$refs.new_view.show()\")\n        h6\n          icon(name=\"plus\")\n          span.d-none.d-md-inline\n            | New view\n\n  b-modal(id=\"new_view\" ref=\"new_view\" title=\"New view\" @show=\"resetModal\" @hidden=\"resetModal\" @ok=\"handleOk\")\n    div.my-1\n      b-input-group.my-1(prepend=\"ID\")\n        b-form-input(v-model=\"new_view.id\")\n      b-input-group.my-1(prepend=\"Name\")\n        b-form-input(v-model=\"new_view.name\")\n\n  div\n    router-view\n\n  div\n    hr\n    h5 Options\n\n    div.row\n      div.col-lg-6\n        b-form-checkbox(v-model=\"filterAFK\")\n          | Filter AFK\n        b-form-checkbox(v-model=\"includeAudible\")\n          | Count audible browser tab as active\n\n      div.col-lg-6\n        b-form-group(label=\"Show/filter category\" label-cols=\"5\" label-cols-lg=\"4\")\n          b-form-select(v-model=\"filterCategory\", :options=\"categories\")\n\n    aw-devonly\n      b-btn(id=\"load-demo\", @click=\"load_demo\")\n        | Load demo data\n</template>\n\n<style lang=\"scss\" scoped>\n$buttoncolor: #ddd;\n$bordercolor: #ddd;\n\n.nav {\n  border-bottom: 2px solid $bordercolor;\n\n  .nav-item {\n    margin-bottom: -2px;\n\n    .nav-link {\n      background-color: $buttoncolor;\n      margin: 0 0.2em 0 0.2em;\n      padding: 0.4em 0.5em 0.1em 0.5em;\n      border: 2px solid $bordercolor;\n      border-bottom: none;\n      border-radius: 0.5rem 0.5rem 0 0;\n      color: #111 !important;\n      cursor: pointer;\n\n      &:hover {\n        background-color: #f8f8f8;\n      }\n\n      &.router-link-exact-active {\n        background-color: #fff;\n        color: #333 !important;\n\n        &:hover {\n          background-color: #fff;\n        }\n      }\n    }\n  }\n}\n</style>\n\n<script>\nimport moment from 'moment';\nimport { get_day_start_with_offset, get_today } from '~/util/time';\nimport _ from 'lodash';\n\nimport 'vue-awesome/icons/arrow-left';\nimport 'vue-awesome/icons/arrow-right';\nimport 'vue-awesome/icons/sync';\nimport 'vue-awesome/icons/plus';\nimport 'vue-awesome/icons/edit';\nimport 'vue-awesome/icons/times';\nimport 'vue-awesome/icons/save';\n\nexport default {\n  name: 'Activity',\n  props: {\n    host: String,\n    date: {\n      type: String,\n      // NOTE: This does not work as you'd might expect since the default is set on\n      // initialization, which would lead to the same date always being returned,\n      // even if the day has changed.\n      // Instead, use the computed _date.\n      //default: get_today(),\n    },\n    periodLength: {\n      type: String,\n      default: 'day',\n    },\n  },\n  data: function () {\n    return {\n      today: get_today(),\n      filterCategory: null,\n      includeAudible: true,\n      filterAFK: true,\n      new_view: {},\n    };\n  },\n  computed: {\n    views: function () {\n      return this.$store.state.views.views;\n    },\n    currentView: function () {\n      return this.views.find(v => v.id == this.$route.params.view_id) || this.views[0];\n    },\n    _date: function () {\n      return this.date || get_today();\n    },\n    subview: function () {\n      return this.$route.meta.subview;\n    },\n    categories: function () {\n      const cats = this.$store.getters['categories/all_categories'];\n      const entries = cats\n        .map(c => {\n          return { text: c.join(' > '), value: c };\n        })\n        .sort((a, b) => a.text > b.text);\n      return [\n        { text: 'All', value: null },\n        { text: 'Uncategorized', value: ['Uncategorized'] },\n      ].concat(entries);\n    },\n    filterCategories: function () {\n      if (this.filterCategory) {\n        const cats = this.$store.getters['categories/all_categories'];\n        const isChild = p => c => c.length > p.length && _.isEqual(p, c.slice(0, p.length));\n        const children = _.filter(cats, isChild(this.filterCategory));\n        return [this.filterCategory].concat(children);\n      } else {\n        return null;\n      }\n    },\n    link_prefix: function () {\n      return `/activity/${this.host}/${this.periodLength}`;\n    },\n    periodusage: function () {\n      return this.$store.getters['activity/getActiveHistoryAroundTimeperiod'](this.timeperiod);\n    },\n    timeperiod: function () {\n      return { start: get_day_start_with_offset(this._date), length: [1, this.periodLength] };\n    },\n    dateformat: function () {\n      if (this.periodLength === 'day') {\n        return 'YYYY-MM-DD';\n      } else if (this.periodLength === 'week') {\n        return 'YYYY[ W]WW';\n      } else if (this.periodLength === 'month') {\n        return 'YYYY-MM';\n      } else if (this.periodLength === 'year') {\n        return 'YYYY';\n      } else {\n        return 'YYYY-MM-DD';\n      }\n    },\n    periodReadable: function () {\n      return moment(this.timeperiod.start).format(this.dateformat);\n    },\n    periodLengthMoment: function () {\n      return this.periodLengthConvertMoment(this.periodLength);\n    },\n  },\n  watch: {\n    host: function () {\n      this.refresh();\n    },\n    timeperiod: function () {\n      this.refresh();\n    },\n    filterCategory: function () {\n      this.refresh();\n    },\n    filterAFK: function () {\n      this.refresh();\n    },\n    includeAudible: function () {\n      this.refresh();\n    },\n  },\n\n  mounted: async function () {\n    this.$store.dispatch('views/load');\n    this.$store.dispatch('categories/load');\n    await this.refresh();\n  },\n\n  methods: {\n    previousPeriod: function () {\n      return moment(this._date).subtract(1, `${this.periodLength}s`).format('YYYY-MM-DD');\n    },\n    nextPeriod: function () {\n      return moment(this._date).add(1, `${this.periodLength}s`).format('YYYY-MM-DD');\n    },\n    periodLengthConvertMoment(periodLength) {\n      if (periodLength === 'day') {\n        return 'day';\n      } else if (periodLength === 'week') {\n        /* This is necessary so the week starts on Monday instead of Sunday */\n        return 'isoWeek';\n      } else if (periodLength === 'month') {\n        return 'month';\n      } else if (periodLength === 'year') {\n        return 'year';\n      } else {\n        console.error('Invalid periodLength ${periodLength}, defaulting to \"day\"');\n        return 'day';\n      }\n    },\n\n    setDate: function (date, periodLength) {\n      // periodLength is an optional argument, default to this.periodLength\n      if (!periodLength) {\n        periodLength = this.periodLength;\n      }\n      const new_period_length_moment = this.periodLengthConvertMoment(periodLength);\n      const new_date = moment(date).startOf(new_period_length_moment).format('YYYY-MM-DD');\n      console.log(new_date, periodLength);\n      this.$router.push(`/activity/${this.host}/${periodLength}/${new_date}/${this.subview}`);\n    },\n\n    refresh: async function (force) {\n      await this.$store.dispatch('activity/ensure_loaded', {\n        timeperiod: this.timeperiod,\n        host: this.host,\n        force: force,\n        filterAFK: this.filterAFK,\n        includeAudible: this.includeAudible,\n        filterCategories: this.filterCategories,\n      });\n    },\n\n    load_demo: async function () {\n      await this.$store.dispatch('activity/load_demo');\n    },\n\n    checkFormValidity() {\n      // All checks must be false for check to pass\n      const checks = {\n        // Check if view id is unique\n        'ID is not unique': this.$store.state.views.views.map(v => v.id).includes(this.new_view.id),\n        'Missing name': this.new_view.name === '',\n      };\n      const errors = Object.entries(checks)\n        .filter(([_k, v]) => v)\n        .map(([k, _v]) => k);\n      const valid = errors.length == 0;\n      if (!valid) {\n        alert(`Invalid form input: ${errors}`);\n      }\n      return valid;\n    },\n\n    handleOk(event) {\n      // Prevent modal from closing\n      event.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n\n    handleSubmit() {\n      // Exit when the form isn't valid\n      const valid = this.checkFormValidity();\n      if (!valid) {\n        return;\n      }\n\n      this.$store.commit('views/addView', { id: this.new_view.id, name: this.new_view.name });\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.new_view.hide();\n      });\n    },\n\n    resetModal() {\n      this.new_view = {\n        id: '',\n        name: '',\n      };\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/activity"}]}