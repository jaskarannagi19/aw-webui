{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/Search.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci1ydXN0L2F3LXdlYnVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vcmRlckJ5IGZyb20gImxvZGFzaC9vcmRlckJ5IjsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBjYW5vbmljYWxFdmVudHMgfSBmcm9tICd+L3F1ZXJpZXMnOwppbXBvcnQgJ3Z1ZS1hd2Vzb21lL2ljb25zL3NlYXJjaCc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvc3Bpbm5lcic7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvYW5nbGUtZG91YmxlLWRvd24nOwppbXBvcnQgJ3Z1ZS1hd2Vzb21lL2ljb25zL2FuZ2xlLWRvdWJsZS11cCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2VhcmNoJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGF0dGVybjogJycsCiAgICAgIHZpc19tZXRob2Q6ICdldmVudGxpc3QnLAogICAgICBldmVudF90eXBlOiAnY3VycmVudHdpbmRvdycsCiAgICAgIGV2ZW50czogbnVsbCwKICAgICAgZXJyb3I6ICcnLAogICAgICBzdGF0dXM6IG51bGwsCiAgICAgIGhvc3RuYW1lOiAnJywKICAgICAgc2hvd19vcHRpb25zOiBmYWxzZSwKICAgICAgdXNlX3JlZ2V4OiB0cnVlLAogICAgICBmaWx0ZXJfYWZrOiB0cnVlLAogICAgICBzdGFydDogbW9tZW50KCkuc3VidHJhY3QoMSwgJ2RheScpLAogICAgICBzdG9wOiBtb21lbnQoKS5hZGQoMSwgJ2RheScpCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9tb3VudGVkID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYnVja2V0cy9lbnN1cmVCdWNrZXRzJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgdGhpcy5ob3N0bmFtZSA9IE9iamVjdC5rZXlzKHRoaXMuJHN0b3JlLmdldHRlcnNbJ2J1Y2tldHMvYnVja2V0c0J5SG9zdG5hbWUnXSlbMF07CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHJldHVybiBfbW91bnRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBtb3VudGVkOwogIH0oKSwKICBtZXRob2RzOiB7CiAgICBzZWFyY2g6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZWFyY2ggPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcXVlcnksIHF1ZXJ5X2FycmF5LCB0aW1lcGVyaW9kcywgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcXVlcnkgPSBjYW5vbmljYWxFdmVudHMoewogICAgICAgICAgICAgICAgICBiaWRfd2luZG93OiAnYXctd2F0Y2hlci13aW5kb3dfJyArIHRoaXMuaG9zdG5hbWUsCiAgICAgICAgICAgICAgICAgIGJpZF9hZms6ICdhdy13YXRjaGVyLWFma18nICsgdGhpcy5ob3N0bmFtZSwKICAgICAgICAgICAgICAgICAgZmlsdGVyX2FmazogdGhpcy5maWx0ZXJfYWZrLAogICAgICAgICAgICAgICAgICBjbGFzc2VzOiBbW1snc2VhcmNoZWQnXSwgewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdyZWdleCcsCiAgICAgICAgICAgICAgICAgICAgcmVnZXg6IHRoaXMucGF0dGVybgogICAgICAgICAgICAgICAgICB9XV0sCiAgICAgICAgICAgICAgICAgIGZpbHRlcl9jbGFzc2VzOiBbWydzZWFyY2hlZCddXQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBxdWVyeSArPSAnOyBSRVRVUk4gPSBldmVudHM7JzsKICAgICAgICAgICAgICAgIHF1ZXJ5X2FycmF5ID0gcXVlcnkuc3BsaXQoJzsnKS5tYXAoZnVuY3Rpb24gKHMpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHMudHJpbSgpICsgJzsnOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aW1lcGVyaW9kcyA9IFt0aGlzLnN0YXJ0LmZvcm1hdCgpICsgJy8nICsgdGhpcy5zdG9wLmZvcm1hdCgpXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNDsKICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzID0gJ3NlYXJjaGluZyc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kYXcucXVlcnkodGltZXBlcmlvZHMsIHF1ZXJ5X2FycmF5KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5ldmVudHMgPSBfb3JkZXJCeShkYXRhWzBdLCBbJ3RpbWVzdGFtcCddLCBbJ2Rlc2MnXSk7CiAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gJyc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEzOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwogICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9IF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2U7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE3OwogICAgICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSBudWxsOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5maW5pc2goMTcpOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzLCBbWzQsIDEzLCAxNywgMjBdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHNlYXJjaCgpIHsKICAgICAgICByZXR1cm4gX3NlYXJjaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc2VhcmNoOwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;AAoEA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,eAAA,QAAA,WAAA;AAEA,OAAA,0BAAA;AACA,OAAA,2BAAA;AACA,OAAA,qCAAA;AACA,OAAA,mCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,WAFA;AAGA,MAAA,UAAA,EAAA,eAHA;AAIA,MAAA,MAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAMA,MAAA,MAAA,EAAA,IANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAUA,MAAA,YAAA,EAAA,KAVA;AAWA,MAAA,SAAA,EAAA,IAXA;AAYA,MAAA,UAAA,EAAA,IAZA;AAaA,MAAA,KAAA,EAAA,MAAA,GAAA,QAAA,CAAA,CAAA,EAAA,KAAA,CAbA;AAcA,MAAA,IAAA,EAAA,MAAA,GAAA,GAAA,CAAA,CAAA,EAAA,KAAA;AAdA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,OAAA;AAAA,6DAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,CADA;;AAAA;AAEA,mBAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,EAAA,CAAA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA;AAAA,8DAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,eAAA,CAAA;AACA,kBAAA,UAAA,EAAA,uBAAA,KAAA,QADA;AAEA,kBAAA,OAAA,EAAA,oBAAA,KAAA,QAFA;AAGA,kBAAA,UAAA,EAAA,KAAA,UAHA;AAIA,kBAAA,OAAA,EAAA,CAAA,CAAA,CAAA,UAAA,CAAA,EAAA;AAAA,oBAAA,IAAA,EAAA,OAAA;AAAA,oBAAA,KAAA,EAAA,KAAA;AAAA,mBAAA,CAAA,CAJA;AAKA,kBAAA,cAAA,EAAA,CAAA,CAAA,UAAA,CAAA;AALA,iBAAA,CADA;AAQA,gBAAA,KAAA,IAAA,oBAAA;AAEA,gBAAA,WAVA,GAUA,KAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,GAAA;AAAA,iBAAA,CAVA;AAWA,gBAAA,WAXA,GAWA,CAAA,KAAA,KAAA,CAAA,MAAA,KAAA,GAAA,GAAA,KAAA,IAAA,CAAA,MAAA,EAAA,CAXA;AAAA;AAaA,qBAAA,MAAA,GAAA,WAAA;AAbA;AAAA,uBAcA,KAAA,GAAA,CAAA,KAAA,CAAA,WAAA,EAAA,WAAA,CAdA;;AAAA;AAcA,gBAAA,IAdA;AAeA,qBAAA,MAAA,GAAA,SAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACA,qBAAA,KAAA,GAAA,EAAA;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAkBA,gBAAA,OAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,aAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AAnBA;AAAA;AAqBA,qBAAA,MAAA,GAAA,IAAA;AArBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA;AAxBA,CAAA","sourcesContent":["<template lang=\"pug\">\ndiv\n  h3 Search\n\n  b-alert(style=\"warning\" show)\n    | This feature is still in early development.\n\n  b-alert(v-if=\"error\" show variant=\"danger\")\n    | {{error}}\n\n  b-input-group(size=\"lg\")\n    b-input(v-model=\"pattern\" v-on:keyup.enter=\"search()\" placeholder=\"Regex pattern to search for\")\n    b-input-group-append\n      b-button(type=\"button\", @click=\"search()\" variant=\"success\")\n        icon(name=\"search\")\n        | Search\n\n  div.d-flex.mt-1\n    span.mr-auto.small(style=\"color: #666\") Hostname: {{hostname}}\n    b-button(size=\"sm\", variant=\"outline-dark\" style=\"border: 0\" @click=\"show_options = !show_options\")\n      span(v-if=\"!show_options\")\n        | #[icon(name=\"angle-double-down\")] Show options\n      span(v-else)\n        | #[icon(name=\"angle-double-up\")] Hide options\n\n  div(v-if=\"show_options\")\n    h4 Options\n    div Hostname\n      select(v-model=\"hostname\")\n        option(v-for=\"hostname in Object.keys($store.getters['buckets/bucketsByHostname'])\")\n          | {{hostname}}\n    div Start: {{start.format()}}\n    div End: {{stop.format()}}\n    //div\n      label Use regex\n      input(type=\"checkbox\" v-model=\"use_regex\")\n    div\n      label Filter AFK\n      input(type=\"checkbox\" v-model=\"filter_afk\")\n    //div.form-row\n      div.form-group.col-md-6\n        | Start\n        input.form-control(type=\"date\", :max=\"today\", v-model=\"startdate\")\n      div.form-group.col-md-6\n        | End\n        input.form-control(type=\"date\", :max=\"tomorrow\", v-model=\"enddate\")\n\n    div.form-inline\n\n  div(v-if=\"status == 'searching'\")\n    div #[icon(name=\"spinner\" pulse)] Searching...\n\n  div(v-if=\"events != null\")\n    hr\n\n    aw-selectable-eventview(:events=\"events\")\n\n    div\n      | Didn't find what you were looking for?\n      br\n      | Add a week to the search: #[b-button(size=\"sm\" variant=\"outline-dark\" @click=\"start = start.subtract(1, 'week'); search()\") +1 week]\n\n</template>\n\n<style scoped lang=\"scss\"></style>\n\n<script>\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { canonicalEvents } from '~/queries';\n\nimport 'vue-awesome/icons/search';\nimport 'vue-awesome/icons/spinner';\nimport 'vue-awesome/icons/angle-double-down';\nimport 'vue-awesome/icons/angle-double-up';\n\nexport default {\n  name: 'Search',\n  data() {\n    return {\n      pattern: '',\n      vis_method: 'eventlist',\n      event_type: 'currentwindow',\n      events: null,\n      error: '',\n      status: null,\n      hostname: '',\n\n      // Options\n      show_options: false,\n      use_regex: true,\n      filter_afk: true,\n      start: moment().subtract(1, 'day'),\n      stop: moment().add(1, 'day'),\n    };\n  },\n  mounted: async function () {\n    await this.$store.dispatch('buckets/ensureBuckets');\n    this.hostname = Object.keys(this.$store.getters['buckets/bucketsByHostname'])[0];\n  },\n  methods: {\n    search: async function () {\n      let query = canonicalEvents({\n        bid_window: 'aw-watcher-window_' + this.hostname,\n        bid_afk: 'aw-watcher-afk_' + this.hostname,\n        filter_afk: this.filter_afk,\n        classes: [[['searched'], { type: 'regex', regex: this.pattern }]],\n        filter_classes: [['searched']],\n      });\n      query += '; RETURN = events;';\n\n      const query_array = query.split(';').map(s => s.trim() + ';');\n      const timeperiods = [this.start.format() + '/' + this.stop.format()];\n      try {\n        this.status = 'searching';\n        const data = await this.$aw.query(timeperiods, query_array);\n        this.events = _.orderBy(data[0], ['timestamp'], ['desc']);\n        this.error = '';\n      } catch (e) {\n        console.error(e);\n        this.error = e.response.data.message;\n      } finally {\n        this.status = null;\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}