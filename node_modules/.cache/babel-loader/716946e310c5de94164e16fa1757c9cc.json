{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/eslint-loader/index.js??ref--12-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/util/transforms.js","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/util/transforms.js","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9yYW5nZSBmcm9tICJsb2Rhc2gvcmFuZ2UiOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCB7IGdldF9ob3VyX29mZnNldCB9IGZyb20gJ34vdXRpbC90aW1lJzsKZXhwb3J0IGZ1bmN0aW9uIHNwbGl0X2J5X2hvdXJfaW50b19kYXRhKGV2ZW50cykgewogIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCB8fCBldmVudHMgPT09IG51bGwgfHwgZXZlbnRzLmxlbmd0aCA9PSAwKSByZXR1cm4gW107CiAgdmFyIGQgPSBtb21lbnQoZXZlbnRzWzBdLnRpbWVzdGFtcCkuc3RhcnRPZignZGF5Jyk7CiAgdmFyIGhvdXJzT2Zmc2V0ID0gZ2V0X2hvdXJfb2Zmc2V0KCk7CiAgcmV0dXJuIF9yYW5nZSgwLCAyNCkubWFwKGZ1bmN0aW9uIChoKSB7CiAgICBoICs9IGhvdXJzT2Zmc2V0OwogICAgdmFyIGR1cmF0aW9uID0gMDsKICAgIHZhciBkX3N0YXJ0ID0gZC5jbG9uZSgpLmhvdXIoaCk7CiAgICB2YXIgZF9lbmQgPSBkLmNsb25lKCkuaG91cihoICsgMSk7CiAgICBldmVudHMubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciBlX3N0YXJ0ID0gbW9tZW50KGUudGltZXN0YW1wKTsKICAgICAgdmFyIGVfZW5kID0gZV9zdGFydC5jbG9uZSgpLmFkZChlLmR1cmF0aW9uLCAnc2Vjb25kcycpOwoKICAgICAgaWYgKGVfc3RhcnQuaXNCZXR3ZWVuKGRfc3RhcnQsIGRfZW5kKSB8fCBlX2VuZC5pc0JldHdlZW4oZF9zdGFydCwgZF9lbmQpIHx8IGRfc3RhcnQuaXNCZXR3ZWVuKGVfc3RhcnQsIGVfZW5kKSkgewogICAgICAgIGlmIChkX3N0YXJ0IDwgZV9zdGFydCAmJiBlX2VuZCA8IGRfZW5kKSB7CiAgICAgICAgICBkdXJhdGlvbiArPSBlLmR1cmF0aW9uOwogICAgICAgIH0gZWxzZSBpZiAoZF9zdGFydCA8IGVfc3RhcnQpIHsKICAgICAgICAgIGR1cmF0aW9uICs9IChkX2VuZCAtIGVfc3RhcnQpIC8gMTAwMDsKICAgICAgICB9IGVsc2UgaWYgKGVfZW5kIDwgZF9lbmQpIHsKICAgICAgICAgIGR1cmF0aW9uICs9IChlX2VuZCAtIGRfc3RhcnQpIC8gMTAwMDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZHVyYXRpb24gKz0gMzYwMDsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIGR1cmF0aW9uIC8gNjAgLyA2MDsKICB9KTsKfQ=="},{"version":3,"sources":["/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/util/transforms.js"],"names":["moment","get_hour_offset","split_by_hour_into_data","events","undefined","length","d","timestamp","startOf","hoursOffset","map","h","duration","d_start","clone","hour","d_end","e","e_start","e_end","add","isBetween"],"mappings":";;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,aAAhC;AAGA,OAAO,SAASC,uBAAT,CAAiCC,MAAjC,EAAyC;AAC9C,MAAIA,MAAM,KAAKC,SAAX,IAAwBD,MAAM,KAAK,IAAnC,IAA2CA,MAAM,CAACE,MAAP,IAAiB,CAAhE,EAAmE,OAAO,EAAP;AACnE,MAAMC,CAAC,GAAGN,MAAM,CAACG,MAAM,CAAC,CAAD,CAAN,CAAUI,SAAX,CAAN,CAA4BC,OAA5B,CAAoC,KAApC,CAAV;AACA,MAAMC,WAAW,GAAGR,eAAe,EAAnC;AACA,SAAO,OAAQ,CAAR,EAAW,EAAX,EAAeS,GAAf,CAAmB,UAAAC,CAAC,EAAI;AAC7BA,IAAAA,CAAC,IAAIF,WAAL;AACA,QAAIG,QAAQ,GAAG,CAAf;AACA,QAAMC,OAAO,GAAGP,CAAC,CAACQ,KAAF,GAAUC,IAAV,CAAeJ,CAAf,CAAhB;AACA,QAAMK,KAAK,GAAGV,CAAC,CAACQ,KAAF,GAAUC,IAAV,CAAeJ,CAAC,GAAG,CAAnB,CAAd;AAEAR,IAAAA,MAAM,CAACO,GAAP,CAAW,UAAAO,CAAC,EAAI;AACd,UAAMC,OAAO,GAAGlB,MAAM,CAACiB,CAAC,CAACV,SAAH,CAAtB;AACA,UAAMY,KAAK,GAAGD,OAAO,CAACJ,KAAR,GAAgBM,GAAhB,CAAoBH,CAAC,CAACL,QAAtB,EAAgC,SAAhC,CAAd;;AACA,UACEM,OAAO,CAACG,SAAR,CAAkBR,OAAlB,EAA2BG,KAA3B,KACAG,KAAK,CAACE,SAAN,CAAgBR,OAAhB,EAAyBG,KAAzB,CADA,IAEAH,OAAO,CAACQ,SAAR,CAAkBH,OAAlB,EAA2BC,KAA3B,CAHF,EAIE;AACA,YAAIN,OAAO,GAAGK,OAAV,IAAqBC,KAAK,GAAGH,KAAjC,EAAwC;AAEtCJ,UAAAA,QAAQ,IAAIK,CAAC,CAACL,QAAd;AACD,SAHD,MAGO,IAAIC,OAAO,GAAGK,OAAd,EAAuB;AAE5BN,UAAAA,QAAQ,IAAI,CAACI,KAAK,GAAGE,OAAT,IAAoB,IAAhC;AACD,SAHM,MAGA,IAAIC,KAAK,GAAGH,KAAZ,EAAmB;AAExBJ,UAAAA,QAAQ,IAAI,CAACO,KAAK,GAAGN,OAAT,IAAoB,IAAhC;AACD,SAHM,MAGA;AAELD,UAAAA,QAAQ,IAAI,IAAZ;AACD;AACF;AACF,KAtBD;AAuBA,WAAOA,QAAQ,GAAG,EAAX,GAAgB,EAAvB;AACD,GA9BM,CAAP;AA+BD","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport { get_hour_offset } from '~/util/time';\n\n// TODO: Move somewhere else, possibly turn into a serverside transform\nexport function split_by_hour_into_data(events) {\n  if (events === undefined || events === null || events.length == 0) return [];\n  const d = moment(events[0].timestamp).startOf('day');\n  const hoursOffset = get_hour_offset();\n  return _.range(0, 24).map(h => {\n    h += hoursOffset;\n    let duration = 0;\n    const d_start = d.clone().hour(h);\n    const d_end = d.clone().hour(h + 1);\n    // This can be made faster by not checking every event per hour, but since number of events is small anyway this and this is a lot shorter and easier to read it doesn't really matter.\n    events.map(e => {\n      const e_start = moment(e.timestamp);\n      const e_end = e_start.clone().add(e.duration, 'seconds');\n      if (\n        e_start.isBetween(d_start, d_end) ||\n        e_end.isBetween(d_start, d_end) ||\n        d_start.isBetween(e_start, e_end)\n      ) {\n        if (d_start < e_start && e_end < d_end) {\n          // If entire event is contained within the hour\n          duration += e.duration;\n        } else if (d_start < e_start) {\n          // If start of event is within the hour, but not the end\n          duration += (d_end - e_start) / 1000;\n        } else if (e_end < d_end) {\n          // If end of event is within the hour, but not the start\n          duration += (e_end - d_start) / 1000;\n        } else {\n          // Happens if event covers entire hour and more\n          duration += 3600;\n        }\n      }\n    });\n    return duration / 60 / 60;\n  });\n}\n"]}]}