{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/visualizations/SunburstClock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/visualizations/SunburstClock.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci9hdy13ZWJ1aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfdGFpbCBmcm9tICJsb2Rhc2gvdGFpbCI7CmltcG9ydCBfZmlyc3QgZnJvbSAibG9kYXNoL2ZpcnN0IjsKaW1wb3J0IF9jb25jYXQgZnJvbSAibG9kYXNoL2NvbmNhdCI7CmltcG9ydCBfc29ydEJ5IGZyb20gImxvZGFzaC9zb3J0QnkiOwppbXBvcnQgc3VuYnVyc3QgZnJvbSAnLi9zdW5idXJzdC1jbG9jay5qcyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdhdy1zdW5idXJzdC1jbG9jaycsCiAgcHJvcHM6IHsKICAgIGRhdGU6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgYWZrQnVja2V0SWQ6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgd2luZG93QnVja2V0SWQ6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhcnR0aW1lOiBtb21lbnQoKSwKICAgICAgZW5kdGltZTogbW9tZW50KCksCiAgICAgIGNlbnRlck1zZzogJ0xvYWRpbmcuLi4nCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGU6IGZ1bmN0aW9uIGRhdGUodG8pIHsKICAgICAgdGhpcy5zdGFydHRpbWUgPSBtb21lbnQodG8pOwogICAgICB0aGlzLmVuZHRpbWUgPSBtb21lbnQodGhpcy5zdGFydHRpbWUpLmFkZCgxLCAnZGF5cycpOwogICAgICB0aGlzLnZpc3VhbGl6ZSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHN1bmJ1cnN0LmNyZWF0ZSh0aGlzLiRlbCk7CiAgICB0aGlzLnN0YXJ0dGltZSA9IG1vbWVudCh0aGlzLmRhdGUpOwogICAgdGhpcy5lbmR0aW1lID0gbW9tZW50KHRoaXMuZGF0ZSkuYWRkKDEsICdkYXlzJyk7CiAgICB0aGlzLnZpc3VhbGl6ZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgdG9kYXlzRXZlbnRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdG9kYXlzRXZlbnRzID0gX2FzeW5jVG9HZW5lcmF0b3IocmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShidWNrZXRfaWQpIHsKICAgICAgICB2YXIgcXVlcnlzdHIsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcXVlcnlzdHIgPSBbIlJFVFVSTiA9IGZsb29kKHF1ZXJ5X2J1Y2tldChcIiIuY29uY2F0KGJ1Y2tldF9pZCwgIlwiKSk7IildOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kYXcucXVlcnkoWyIiLmNvbmNhdCh0aGlzLnN0YXJ0dGltZS5mb3JtYXQoKSwgIi8iKS5jb25jYXQodGhpcy5lbmR0aW1lLmZvcm1hdCgpKV0sIHF1ZXJ5c3RyKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhWzBdKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHRvZGF5c0V2ZW50cyhfeCkgewogICAgICAgIHJldHVybiBfdG9kYXlzRXZlbnRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0b2RheXNFdmVudHM7CiAgICB9KCksCiAgICB2aXN1YWxpemU6IGZ1bmN0aW9uIHZpc3VhbGl6ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGZ1bmN0aW9uIGJ1aWxkSGllcmFyY2h5KHBhcmVudHMsIGNoaWxkcmVuKSB7CiAgICAgICAgcGFyZW50cyA9IF9zb3J0QnkocGFyZW50cywgJ3RpbWVzdGFtcCcsICdkZXNjJyk7CiAgICAgICAgY2hpbGRyZW4gPSBfc29ydEJ5KGNoaWxkcmVuLCAndGltZXN0YW1wJywgJ2Rlc2MnKTsKICAgICAgICB2YXIgaV9jaGlsZCA9IDA7CgogICAgICAgIGZvciAodmFyIGlfcGFyZW50ID0gMDsgaV9wYXJlbnQgPCBwYXJlbnRzLmxlbmd0aDsgaV9wYXJlbnQrKykgewogICAgICAgICAgdmFyIHAgPSBwYXJlbnRzW2lfcGFyZW50XTsKICAgICAgICAgIHZhciBwX3N0YXJ0ID0gbW9tZW50KHAudGltZXN0YW1wKTsKICAgICAgICAgIHZhciBwX2VuZCA9IHBfc3RhcnQuY2xvbmUoKS5hZGQocC5kdXJhdGlvbiwgJ3NlY29uZHMnKTsKICAgICAgICAgIHAuY2hpbGRyZW4gPSBbXTsKCiAgICAgICAgICB3aGlsZSAoaV9jaGlsZCA8IGNoaWxkcmVuLmxlbmd0aCkgewogICAgICAgICAgICB2YXIgZSA9IGNoaWxkcmVuW2lfY2hpbGRdOwogICAgICAgICAgICB2YXIgZV9zdGFydCA9IG1vbWVudChlLnRpbWVzdGFtcCk7CiAgICAgICAgICAgIHZhciBlX2VuZCA9IGVfc3RhcnQuY2xvbmUoKS5hZGQoZS5kdXJhdGlvbiwgJ3NlY29uZHMnKTsKICAgICAgICAgICAgdmFyIGJlZm9yZV9wYXJlbnQgPSBlX2VuZC5pc0JlZm9yZShwX3N0YXJ0KTsKICAgICAgICAgICAgdmFyIHdpdGhpbl9wYXJlbnQgPSBlX3N0YXJ0LmlzQWZ0ZXIocF9zdGFydCkgJiYgZV9lbmQuaXNCZWZvcmUocF9lbmQpOwogICAgICAgICAgICB2YXIgYWZ0ZXJfcGFyZW50ID0gZV9zdGFydC5pc0FmdGVyKHBfZW5kKTsKCiAgICAgICAgICAgIGlmIChiZWZvcmVfcGFyZW50KSB7CiAgICAgICAgICAgICAgaV9jaGlsZCsrOwogICAgICAgICAgICB9IGVsc2UgaWYgKHdpdGhpbl9wYXJlbnQpIHsKICAgICAgICAgICAgICBwLmNoaWxkcmVuID0gX2NvbmNhdChwLmNoaWxkcmVuLCBlKTsKICAgICAgICAgICAgICBpX2NoaWxkKys7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoYWZ0ZXJfcGFyZW50KSB7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdCZXR3ZWVuIHBhcmVudHMnKTsKICAgICAgICAgICAgICBwLmNoaWxkcmVuID0gX2NvbmNhdChwLmNoaWxkcmVuLCBlKTsKICAgICAgICAgICAgICBpX2NoaWxkKys7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBtX3N0YXJ0ID0gbW9tZW50KF9maXJzdChwYXJlbnRzKS50aW1lc3RhbXApOwogICAgICAgIHZhciBtX2VuZCA9IG1vbWVudChfdGFpbChwYXJlbnRzKS50aW1lc3RhbXApOwogICAgICAgIHZhciBkdXJhdGlvbiA9IChtX2VuZCAtIG1fc3RhcnQpIC8gMTAwMDsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGltZXN0YW1wOiBfZmlyc3QocGFyZW50cykudGltZXN0YW1wLAogICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICB0aXRsZTogJ1JPT1QnCiAgICAgICAgICB9LAogICAgICAgICAgY2hpbGRyZW46IHBhcmVudHMKICAgICAgICB9OwogICAgICB9CgogICAgICB0aGlzLnRvZGF5c0V2ZW50cyh0aGlzLmFma0J1Y2tldElkKS50aGVuKGZ1bmN0aW9uIChldmVudHNfYWZrKSB7CiAgICAgICAgX3RoaXMudG9kYXlzRXZlbnRzKF90aGlzLndpbmRvd0J1Y2tldElkKS50aGVuKGZ1bmN0aW9uIChldmVudHNfd2luZG93KSB7CiAgICAgICAgICB2YXIgaGllcmFyY2h5ID0gbnVsbDsKCiAgICAgICAgICBpZiAoZXZlbnRzX2Fmay5sZW5ndGggPiAwICYmIGV2ZW50c193aW5kb3cubGVuZ3RoID4gMCkgewogICAgICAgICAgICBoaWVyYXJjaHkgPSBidWlsZEhpZXJhcmNoeShldmVudHNfYWZrLCBldmVudHNfd2luZG93KTsKICAgICAgICAgICAgX3RoaXMuY2VudGVyTXNnID0gJ0hvdmVyIHRvIGluc3BlY3QnOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaGllcmFyY2h5ID0gewogICAgICAgICAgICAgIHRpbWVzdGFtcDogJycsCiAgICAgICAgICAgICAgZHVyYXRpb246IDAsCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgdGl0bGU6ICdST09UJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2hpbGRyZW46IFtdCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF90aGlzLmNlbnRlck1zZyA9ICdObyBkYXRhJzsKICAgICAgICAgIH0KCiAgICAgICAgICBzdW5idXJzdC51cGRhdGUoX3RoaXMuJGVsLCBoaWVyYXJjaHkpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SunburstClock.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv.sunburst\n  div.sidebar\n    div.legend\n\n  div.main\n    div.chart\n      div.explanation\n        div.base\n          | {{ centerMsg }}\n        div.hover(style=\"visibility: hidden\")\n          div.date\n          div.title\n          div.time\n          div.duration\n          div.data(style=\"text-overflow: ellipsis; white-space: nowrap; overflow: hidden;\")\n</template>\n\n<style scoped lang=\"scss\">\n.sunburst {\n  font-family: 'Open Sans', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  width: 100%;\n  height: 620px;\n  margin-top: 10px;\n\n  .main {\n    width: 750px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  .sidebar {\n    float: left;\n    height: 0;\n    width: 100px;\n  }\n\n  .sequence {\n    width: 600px;\n    height: 70px;\n  }\n\n  .legend {\n    padding: 10px 0 0 3px;\n  }\n\n  .sequence text,\n  .legend text {\n    font-weight: 600;\n    fill: #fff;\n  }\n\n  .chart {\n    position: relative;\n  }\n\n  .chart path {\n    stroke: #fff;\n  }\n\n  .explanation {\n    position: absolute;\n    top: 260px;\n    left: 305px;\n    width: 140px;\n    text-align: center;\n    color: #666;\n    z-index: 10; // might not be needed\n\n    .base {\n      color: #ddd;\n      font-size: 2em;\n    }\n\n    .hover {\n      .date {\n        font-size: 0.8em;\n      }\n\n      .time {\n        font-size: 1em;\n      }\n\n      .title {\n        font-size: 2em;\n        font-weight: bold;\n      }\n\n      .duration {\n        font-size: 1em;\n      }\n\n      .data {\n        font-size: 1em;\n      }\n    }\n  }\n}\n</style>\n\n<script>\n// NOTE: This is just a Vue.js component wrapper for timeline-simple.js\n//       Code should generally go in the framework-independent file.\n\n// TODO: Sunburst requires a hierarchical data format\n\nimport sunburst from './sunburst-clock.js';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default {\n  name: 'aw-sunburst-clock',\n  props: {\n    date: { type: String },\n    afkBucketId: { type: String },\n    windowBucketId: { type: String },\n  },\n\n  data: () => {\n    return {\n      starttime: moment(),\n      endtime: moment(),\n      centerMsg: 'Loading...',\n    };\n  },\n\n  watch: {\n    date: function (to) {\n      this.starttime = moment(to);\n      this.endtime = moment(this.starttime).add(1, 'days');\n      this.visualize();\n    },\n  },\n  mounted: function () {\n    sunburst.create(this.$el);\n    this.starttime = moment(this.date);\n    this.endtime = moment(this.date).add(1, 'days');\n    this.visualize();\n  },\n\n  methods: {\n    todaysEvents: async function (bucket_id) {\n      const querystr = [`RETURN = flood(query_bucket(\"${bucket_id}\"));`];\n      const data = await this.$aw.query(\n        [`${this.starttime.format()}/${this.endtime.format()}`],\n        querystr\n      );\n      return data[0];\n    },\n\n    visualize: function () {\n      function buildHierarchy(parents, children) {\n        parents = _.sortBy(parents, 'timestamp', 'desc');\n        children = _.sortBy(children, 'timestamp', 'desc');\n\n        let i_child = 0;\n        for (let i_parent = 0; i_parent < parents.length; i_parent++) {\n          const p = parents[i_parent];\n          const p_start = moment(p.timestamp);\n          const p_end = p_start.clone().add(p.duration, 'seconds');\n\n          p.children = [];\n          while (i_child < children.length) {\n            const e = children[i_child];\n            const e_start = moment(e.timestamp);\n            const e_end = e_start.clone().add(e.duration, 'seconds');\n\n            const before_parent = e_end.isBefore(p_start);\n            const within_parent = e_start.isAfter(p_start) && e_end.isBefore(p_end);\n            const after_parent = e_start.isAfter(p_end);\n\n            // TODO: This isn't correct, yet\n            if (before_parent) {\n              // Child is behind parent\n              //console.log(\"Too far behind: \" + i_child);\n              i_child++;\n            } else if (within_parent) {\n              //console.log(\"Added relation: \" + i_child);\n              p.children = _.concat(p.children, e);\n              i_child++;\n            } else if (after_parent) {\n              // Child is ahead of parent\n              //console.log(\"Too far ahead: \" + i_child);\n              break;\n            } else {\n              // TODO: Split events when this happens\n              console.warn('Between parents');\n              p.children = _.concat(p.children, e);\n              i_child++;\n            }\n          }\n        }\n\n        // Build the root node\n        //console.log(parents);\n        const m_start = moment(_.first(parents).timestamp);\n        const m_end = moment(_.tail(parents).timestamp);\n        const duration = (m_end - m_start) / 1000;\n        return {\n          timestamp: _.first(parents).timestamp,\n          // TODO: If we want a 12/24h clock, this has to change\n          duration: duration,\n          data: { title: 'ROOT' },\n          children: parents,\n        };\n      }\n\n      this.todaysEvents(this.afkBucketId).then(events_afk => {\n        this.todaysEvents(this.windowBucketId).then(events_window => {\n          let hierarchy = null;\n          if (events_afk.length > 0 && events_window.length > 0) {\n            hierarchy = buildHierarchy(events_afk, events_window);\n            this.centerMsg = 'Hover to inspect';\n          } else {\n            // FIXME: This should do the equivalent of \"No data\" when such is the case, but it doesn't.\n            hierarchy = {\n              timestamp: '',\n              // TODO: If we want a 12/24h clock, this has to change\n              duration: 0,\n              data: { title: 'ROOT' },\n              children: [],\n            };\n            this.centerMsg = 'No data';\n          }\n          sunburst.update(this.$el, hierarchy);\n        });\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/visualizations"}]}