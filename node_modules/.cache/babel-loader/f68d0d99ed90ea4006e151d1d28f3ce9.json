{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/settings/CategorizationSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/settings/CategorizationSettings.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvamFza2FyYW4vY29kZS9qYXNrYXJhbi9hY3Rpdml0eXdhdGNoL2F3LXNlcnZlci9hdy13ZWJ1aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL2phc2thcmFuL2NvZGUvamFza2FyYW4vYWN0aXZpdHl3YXRjaC9hdy1zZXJ2ZXIvYXctd2VidWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQ2F0ZWdvcnlFZGl0VHJlZSBmcm9tICd+L2NvbXBvbmVudHMvQ2F0ZWdvcnlFZGl0VHJlZS52dWUnOwppbXBvcnQgJ3Z1ZS1hd2Vzb21lL2ljb25zL3VuZG8nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NhdGVnb3JpemF0aW9uU2V0dGluZ3MnLAogIGNvbXBvbmVudHM6IHsKICAgIENhdGVnb3J5RWRpdFRyZWU6IENhdGVnb3J5RWRpdFRyZWUKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoJ2NhdGVnb3JpZXMnLCBbJ2NsYXNzZXNfaGllcmFyY2h5J10pKSwgbWFwU3RhdGUoJ2NhdGVnb3JpZXMnLCBbJ2NsYXNzZXNfdW5zYXZlZF9jaGFuZ2VzJ10pKSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NhdGVnb3JpZXMvbG9hZCcpOwogIH0sCiAgbWV0aG9kczogewogICAgYWRkQ2xhc3M6IGZ1bmN0aW9uIGFkZENsYXNzKCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NhdGVnb3JpZXMvYWRkQ2xhc3MnLCB7CiAgICAgICAgbmFtZTogWydOZXcgY2xhc3MnXSwKICAgICAgICBydWxlOiB7CiAgICAgICAgICB0eXBlOiAncmVnZXgnLAogICAgICAgICAgcmVnZXg6ICdGSUxMIE1FJwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2F2ZUNsYXNzZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zYXZlQ2xhc3NlcyA9IF9hc3luY1RvR2VuZXJhdG9yKHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NhdGVnb3JpZXMvc2F2ZScpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc2F2ZUNsYXNzZXMoKSB7CiAgICAgICAgcmV0dXJuIF9zYXZlQ2xhc3Nlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc2F2ZUNsYXNzZXM7CiAgICB9KCksCiAgICByZXNldENsYXNzZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZXNldENsYXNzZXMgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRlZ29yaWVzL2xvYWQnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVzZXRDbGFzc2VzKCkgewogICAgICAgIHJldHVybiBfcmVzZXRDbGFzc2VzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXNldENsYXNzZXM7CiAgICB9KCksCiAgICByZXN0b3JlRGVmYXVsdENsYXNzZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZXN0b3JlRGVmYXVsdENsYXNzZXMgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2F0ZWdvcmllcy9yZXN0b3JlRGVmYXVsdENsYXNzZXMnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVzdG9yZURlZmF1bHRDbGFzc2VzKCkgewogICAgICAgIHJldHVybiBfcmVzdG9yZURlZmF1bHRDbGFzc2VzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXN0b3JlRGVmYXVsdENsYXNzZXM7CiAgICB9KCksCiAgICBleHBvcnRDbGFzc2VzOiBmdW5jdGlvbiBleHBvcnRDbGFzc2VzKCkgewogICAgICBjb25zb2xlLmxvZygnRXhwb3J0aW5nIGNhdGVnb3JpZXMuLi4nKTsKICAgICAgdmFyIGV4cG9ydF9kYXRhID0gewogICAgICAgIGNhdGVnb3JpZXM6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmNsYXNzZXMpCiAgICAgIH07CiAgICAgIHZhciB0ZXh0ID0gSlNPTi5zdHJpbmdpZnkoZXhwb3J0X2RhdGEpOwogICAgICB2YXIgZmlsZW5hbWUgPSAnYXctY2F0ZWdvcnktZXhwb3J0Lmpzb24nOwogICAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgsJyArIGVuY29kZVVSSUNvbXBvbmVudCh0ZXh0KSk7CiAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsIGZpbGVuYW1lKTsKICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpOwogICAgICBlbGVtZW50LmNsaWNrKCk7CiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZWxlbWVudCk7CiAgICB9LAogICAgaW1wb3J0Q2F0ZWdvcmllczogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2ltcG9ydENhdGVnb3JpZXMgPSBfYXN5bmNUb0dlbmVyYXRvcihyZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChlbGVtKSB7CiAgICAgICAgdmFyIGZpbGUsIHRleHQsIGltcG9ydF9vYmo7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbXBvcnRpbmcgY2F0ZWdvcmllcy4uLicpOwogICAgICAgICAgICAgICAgZmlsZSA9IGVsZW0udGFyZ2V0LmZpbGVzWzBdOwoKICAgICAgICAgICAgICAgIGlmICghKGZpbGUudHlwZSAhPSAnYXBwbGljYXRpb24vanNvbicpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignT25seSBKU09OIGZpbGVzIGFyZSBwb3NzaWJsZSB0byBpbXBvcnQnKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIGZpbGUudGV4dCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICB0ZXh0ID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBpbXBvcnRfb2JqID0gSlNPTi5wYXJzZSh0ZXh0KTsKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2F0ZWdvcmllcy9pbXBvcnQnLCBpbXBvcnRfb2JqLmNhdGVnb3JpZXMpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gaW1wb3J0Q2F0ZWdvcmllcyhfeCkgewogICAgICAgIHJldHVybiBfaW1wb3J0Q2F0ZWdvcmllcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaW1wb3J0Q2F0ZWdvcmllczsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["CategorizationSettings.vue"],"names":[],"mappings":";;;AAsCA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,gBAAA,MAAA,mCAAA;AACA,OAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,kCACA,UAAA,CAAA,YAAA,EAAA,CAAA,mBAAA,CAAA,CADA,GAEA,QAAA,CAAA,YAAA,EAAA,CAAA,yBAAA,CAAA,CAFA,CALA;AASA,EAAA,OATA,qBASA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,iBAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,qBAAA,EAAA;AACA,QAAA,IAAA,EAAA,CAAA,WAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,KAAA,EAAA;AAAA;AAFA,OAAA;AAIA,KANA;AAOA,IAAA,WAAA;AAAA,mEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAPA;AAUA,IAAA,YAAA;AAAA,oEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAVA;AAaA,IAAA,qBAAA;AAAA,6EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,MAAA,CAAA,MAAA,CAAA,kCAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAbA;AAgBA,IAAA,aAAA,EAAA,yBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,yBAAA;AAEA,UAAA,WAAA,GAAA;AACA,QAAA,UAAA,EAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA;AADA,OAAA;AAGA,UAAA,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA;AACA,UAAA,QAAA,GAAA,yBAAA;AAGA,UAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,MAAA,EAAA,mCAAA,kBAAA,CAAA,IAAA,CAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,UAAA,EAAA,QAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,KAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,OAAA;AACA,KAjCA;AAkCA,IAAA,gBAAA;AAAA,wEAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,yBAAA;AAGA,gBAAA,IAJA,GAIA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAJA;;AAAA,sBAKA,IAAA,CAAA,IAAA,IAAA,kBALA;AAAA;AAAA;AAAA;;AAMA,gBAAA,OAAA,CAAA,KAAA,CAAA,wCAAA;AANA;;AAAA;AAAA;AAAA,uBAWA,IAAA,CAAA,IAAA,EAXA;;AAAA;AAWA,gBAAA,IAXA;AAYA,gBAAA,UAZA,GAYA,IAAA,CAAA,KAAA,CAAA,IAAA,CAZA;AAeA,qBAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,UAAA,CAAA,UAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlCA;AAZA,CAAA","sourcesContent":["<template lang=\"pug\">\ndiv\n  h5.d-inline-block\n    div Categorization\n  div.float-right\n    b-btn.ml-1(@click=\"restoreDefaultClasses\", variant=\"outline-warning\" size=\"sm\")\n      icon(name=\"undo\")\n      | Restore defaults\n    label.btn.btn-sm.ml-1.btn-outline-primary(style=\"margin: 0\")\n      | Import\n      input(type=\"file\" @change=\"importCategories\" hidden)\n    b-btn.ml-1(@click=\"exportClasses\", variant=\"outline-primary\" size=\"sm\")\n      | Export\n  p\n    | Rules for categorizing events. An event can only have one category. If several categories match, the deepest one will be chosen.\n  p\n    | For help on how to write categorization rules, see #[a(href=\"https://docs.activitywatch.net/en/latest/features/categorization.html\") the documentation].\n\n  div.my-4\n    b-alert(variant=\"warning\" :show=\"classes_unsaved_changes\")\n      | You have unsaved changes!\n      div.float-right(style=\"margin-top: -0.15em; margin-right: -0.6em\")\n        b-btn.ml-2(@click=\"saveClasses\", variant=\"success\" size=\"sm\")\n          | Save\n        b-btn.ml-2(@click=\"resetClasses\", variant=\"warning\" size=\"sm\")\n          | Discard\n    div(v-for=\"_class in classes_hierarchy\")\n      CategoryEditTree(:_class=\"_class\")\n\n  div.row\n    div.col-sm-12\n      b-btn(@click=\"addClass\")\n        icon.mr-2(name=\"plus\")\n        | Add category\n      b-btn.float-right(@click=\"saveClasses\", variant=\"success\" :disabled=\"!classes_unsaved_changes\")\n        | Save\n</template>\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport CategoryEditTree from '~/components/CategoryEditTree.vue';\nimport 'vue-awesome/icons/undo';\n\nexport default {\n  name: 'CategorizationSettings',\n  components: {\n    CategoryEditTree,\n  },\n  computed: {\n    ...mapGetters('categories', ['classes_hierarchy']),\n    ...mapState('categories', ['classes_unsaved_changes']),\n  },\n  mounted() {\n    this.$store.dispatch('categories/load');\n  },\n  methods: {\n    addClass: function () {\n      this.$store.commit('categories/addClass', {\n        name: ['New class'],\n        rule: { type: 'regex', regex: 'FILL ME' },\n      });\n    },\n    saveClasses: async function () {\n      await this.$store.dispatch('categories/save');\n    },\n    resetClasses: async function () {\n      await this.$store.dispatch('categories/load');\n    },\n    restoreDefaultClasses: async function () {\n      await this.$store.commit('categories/restoreDefaultClasses');\n    },\n    exportClasses: function () {\n      console.log('Exporting categories...');\n\n      const export_data = {\n        categories: JSON.parse(localStorage.classes),\n      };\n      const text = JSON.stringify(export_data);\n      const filename = 'aw-category-export.json';\n\n      // Initiate downloading a file by creating a hidden button and clicking it\n      const element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n    importCategories: async function (elem) {\n      console.log('Importing categories...');\n\n      // Get file from upload\n      const file = elem.target.files[0];\n      if (file.type != 'application/json') {\n        console.error('Only JSON files are possible to import');\n        return;\n      }\n\n      // Read and parse import text to JSON\n      const text = await file.text();\n      const import_obj = JSON.parse(text);\n\n      // Set import to categories as unsaved changes\n      this.$store.commit('categories/import', import_obj.categories);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/settings"}]}