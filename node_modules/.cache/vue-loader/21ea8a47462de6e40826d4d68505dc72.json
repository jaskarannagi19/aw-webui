{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/VisTimeline.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/VisTimeline.vue","mtime":1622830085278},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IENvbG9yIGZyb20gJ2NvbG9yJzsKaW1wb3J0IHsgYnVpbGRUb29sdGlwIH0gZnJvbSAnLi4vdXRpbC90b29sdGlwLmpzJzsKaW1wb3J0IHsgZ2V0Q29sb3JGcm9tU3RyaW5nLCBnZXRUaXRsZUF0dHIgfSBmcm9tICcuLi91dGlsL2NvbG9yJzsKCmltcG9ydCB7IFRpbWVsaW5lIH0gZnJvbSAndmlzLXRpbWVsaW5lL2VzbmV4dCc7CmltcG9ydCAndmlzLXRpbWVsaW5lL3N0eWxlcy92aXMtdGltZWxpbmUtZ3JhcGgyZC5jc3MnOwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBidWNrZXRzOiB7IHR5cGU6IEFycmF5IH0sCiAgICBzaG93Um93TGFiZWxzOiB7IHR5cGU6IEJvb2xlYW4gfSwKICAgIHF1ZXJpZWRJbnRlcnZhbDogeyB0eXBlOiBBcnJheSB9LAogICAgc2hvd1F1ZXJpZWRJbnRlcnZhbDogeyB0eXBlOiBCb29sZWFuIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZWxpbmU6IG51bGwsCiAgICAgIGZpbHRlclNob3J0RXZlbnRzOiB0cnVlLAogICAgICBvcHRpb25zOiB7CiAgICAgICAgem9vbU1pbjogMTAwMCAqIDYwLCAvLyAxMG1pbiBpbiBtaWxsaXNlY29uZHMKICAgICAgICB6b29tTWF4OiAxMDAwICogNjAgKiA2MCAqIDI0ICogMzEgKiAzLCAvLyBhYm91dCB0aHJlZSBtb250aHMgaW4gbWlsbGlzZWNvbmRzCiAgICAgICAgc3RhY2s6IGZhbHNlLAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGZvbGxvd01vdXNlOiB0cnVlLAogICAgICAgICAgb3ZlcmZsb3dNZXRob2Q6ICdjYXAnLAogICAgICAgIH0sCiAgICAgIH0sCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXJ0RGF0YSgpIHsKICAgICAgY29uc3QgZGF0YSA9IFtdOwogICAgICBfLmVhY2godGhpcy5idWNrZXRzLCAoYnVja2V0LCBiaWR4KSA9PiB7CiAgICAgICAgaWYgKGJ1Y2tldC5ldmVudHMgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBsZXQgZXZlbnRzID0gYnVja2V0LmV2ZW50czsKICAgICAgICAvLyBGaWx0ZXIgb3V0IGV2ZW50cyBzaG9ydGVyIHRoYW4gMSBzZWNvbmQgKG5vdGFibHkgaW5jbHVkaW5nIDAtZHVyYXRpb24gZXZlbnRzKQogICAgICAgIC8vIFRPRE86IFVzZSBmbG9vZGluZyBpbnN0ZWFkLCBwcmVmZXJhYmx5IHdpdGggc29tZSBhZGRpdGlvbmFsIG1ldGhvZCBvZiByZW1vdmluZy9zaW1wbGlmeWluZyBzaG9ydCBldmVudHMgZm9yIGV2ZW4gZ3JlYXRlciBwZXJmb3JtYW5jZQogICAgICAgIGlmICh0aGlzLmZpbHRlclNob3J0RXZlbnRzKSB7CiAgICAgICAgICBldmVudHMgPSBfLmZpbHRlcihldmVudHMsIGUgPT4gZS5kdXJhdGlvbiA+IDEpOwogICAgICAgIH0KICAgICAgICBldmVudHMgPSBfLnNvcnRCeShldmVudHMsIGUgPT4gZS50aW1lc3RhbXApOwogICAgICAgIF8uZWFjaChldmVudHMsIGUgPT4gewogICAgICAgICAgZGF0YS5wdXNoKFsKICAgICAgICAgICAgYmlkeCwKICAgICAgICAgICAgZ2V0VGl0bGVBdHRyKGJ1Y2tldCwgZSksCiAgICAgICAgICAgIGJ1aWxkVG9vbHRpcChidWNrZXQsIGUpLAogICAgICAgICAgICBuZXcgRGF0ZShlLnRpbWVzdGFtcCksCiAgICAgICAgICAgIG5ldyBEYXRlKG1vbWVudChlLnRpbWVzdGFtcCkuYWRkKGUuZHVyYXRpb24sICdzZWNvbmRzJykudmFsdWVPZigpKSwKICAgICAgICAgICAgZ2V0Q29sb3JGcm9tU3RyaW5nKGdldFRpdGxlQXR0cihidWNrZXQsIGUpKSwKICAgICAgICAgIF0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIGJ1Y2tldHMoKSB7CiAgICAgIC8vIEZvciBzb21lIHJlYXNvbiwgYW4gb2JqZWN0IGlzIHBhc3NlZCBoZXJlLCBhZnRlciB3aGljaCB0aGUgY29ycmVjdCBhcnJheSBhcnJpdmVzCiAgICAgIGlmICh0aGlzLmJ1Y2tldHMubGVuZ3RoID09PSB1bmRlZmluZWQpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKCJJIHRvbGQgeW91IHNvISIpCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAvLyBCdWlsZCBncm91cHMKICAgICAgY29uc3QgZ3JvdXBzID0gXy5tYXAodGhpcy5idWNrZXRzLCAoYnVja2V0LCBiaWR4KSA9PiB7CiAgICAgICAgcmV0dXJuIHsgaWQ6IGJpZHgsIGNvbnRlbnQ6IHRoaXMuc2hvd1Jvd0xhYmVscyA/IGJ1Y2tldC5pZCA6ICcnIH07CiAgICAgIH0pOwoKICAgICAgLy8gQnVpbGQgaXRlbXMKICAgICAgY29uc3QgaXRlbXMgPSBfLm1hcCh0aGlzLmNoYXJ0RGF0YSwgKHJvdywgaSkgPT4gewogICAgICAgIGNvbnN0IGJnQ29sb3IgPSByb3dbNV07CiAgICAgICAgY29uc3QgYm9yZGVyQ29sb3IgPSBDb2xvcihiZ0NvbG9yKS5kYXJrZW4oMC4zKTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWQ6IFN0cmluZyhpKSwKICAgICAgICAgIGdyb3VwOiByb3dbMF0sCiAgICAgICAgICBjb250ZW50OiByb3dbMV0sCiAgICAgICAgICB0aXRsZTogcm93WzJdLAogICAgICAgICAgc3RhcnQ6IG1vbWVudChyb3dbM10pLAogICAgICAgICAgZW5kOiBtb21lbnQocm93WzRdKSwKICAgICAgICAgIHN0eWxlOiBgYmFja2dyb3VuZC1jb2xvcjogJHtiZ0NvbG9yfTsgYm9yZGVyLWNvbG9yOiAke2JvcmRlckNvbG9yfWAsCiAgICAgICAgfTsKICAgICAgfSk7CgogICAgICBpZiAoZ3JvdXBzLmxlbmd0aCA+IDAgJiYgaXRlbXMubGVuZ3RoID4gMCkgewogICAgICAgIGlmICh0aGlzLnF1ZXJpZWRJbnRlcnZhbCAmJiB0aGlzLnNob3dRdWVyaWVkSW50ZXJ2YWwpIHsKICAgICAgICAgIGNvbnN0IGR1cmF0aW9uID0gdGhpcy5xdWVyaWVkSW50ZXJ2YWxbMV0uZGlmZih0aGlzLnF1ZXJpZWRJbnRlcnZhbFswXSwgJ3NlY29uZHMnKTsKICAgICAgICAgIGdyb3Vwcy5wdXNoKHsgaWQ6IFN0cmluZyhncm91cHMubGVuZ3RoKSwgY29udGVudDogJ3F1ZXJpZWQgaW50ZXJ2YWwnIH0pOwogICAgICAgICAgaXRlbXMucHVzaCh7CiAgICAgICAgICAgIGlkOiBTdHJpbmcoaXRlbXMubGVuZ3RoICsgMSksCiAgICAgICAgICAgIGdyb3VwOiBncm91cHMubGVuZ3RoIC0gMSwKICAgICAgICAgICAgdGl0bGU6IGJ1aWxkVG9vbHRpcCgKICAgICAgICAgICAgICB7IHR5cGU6ICd0ZXN0JyB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdGhpcy5xdWVyaWVkSW50ZXJ2YWxbMF0sCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sCiAgICAgICAgICAgICAgICBkYXRhOiB7IHRpdGxlOiAndGVzdCcgfSwKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICksCiAgICAgICAgICAgIGNvbnRlbnQ6ICdxdWVyeScsCiAgICAgICAgICAgIHN0YXJ0OiB0aGlzLnF1ZXJpZWRJbnRlcnZhbFswXSwKICAgICAgICAgICAgZW5kOiB0aGlzLnF1ZXJpZWRJbnRlcnZhbFsxXSwKICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhOyBoZWlnaHQ6IDEwcHgnLAogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBjb25zdCBzdGFydCA9CiAgICAgICAgICAodGhpcy5xdWVyaWVkSW50ZXJ2YWwgJiYgdGhpcy5xdWVyaWVkSW50ZXJ2YWxbMF0pIHx8CiAgICAgICAgICBfLm1pbihfLm1hcChpdGVtcywgaXRlbSA9PiBpdGVtLnN0YXJ0KSk7CiAgICAgICAgY29uc3QgZW5kID0KICAgICAgICAgICh0aGlzLnF1ZXJpZWRJbnRlcnZhbCAmJiB0aGlzLnF1ZXJpZWRJbnRlcnZhbFsxXSkgfHwKICAgICAgICAgIF8ubWF4KF8ubWFwKGl0ZW1zLCBpdGVtID0+IGl0ZW0uZW5kKSk7CiAgICAgICAgdGhpcy5vcHRpb25zLm1pbiA9IHN0YXJ0OwogICAgICAgIHRoaXMub3B0aW9ucy5tYXggPSBlbmQ7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXRPcHRpb25zKHRoaXMub3B0aW9ucyk7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXRXaW5kb3coc3RhcnQsIGVuZCk7CiAgICAgICAgdGhpcy50aW1lbGluZS5zZXREYXRhKHsgZ3JvdXBzOiBncm91cHMsIGl0ZW1zOiBpdGVtcyB9KTsKICAgICAgfQogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIGNvbnN0IGVsID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignI3Zpc3VhbGl6YXRpb24nKTsKICAgICAgdGhpcy50aW1lbGluZSA9IG5ldyBUaW1lbGluZShlbCwgW10sIFtdLCB0aGlzLm9wdGlvbnMpOwogICAgfSk7CiAgfSwKfTsK"},{"version":3,"sources":["VisTimeline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VisTimeline.vue","sourceRoot":"src/visualizations","sourcesContent":["<template lang=\"pug\">\ndiv\n  div#visualization\n</template>\n\n<style lang=\"scss\">\ndiv#visualization {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n\n  .timeline-timeline {\n    font-family: sans-serif !important;\n\n    .timeline-panel {\n      box-sizing: border-box;\n    }\n\n    .timeline-item {\n      border-radius: 2px;\n    }\n  }\n}\n</style>\n\n<script lang=\"ts\">\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Color from 'color';\nimport { buildTooltip } from '../util/tooltip.js';\nimport { getColorFromString, getTitleAttr } from '../util/color';\n\nimport { Timeline } from 'vis-timeline/esnext';\nimport 'vis-timeline/styles/vis-timeline-graph2d.css';\n\nexport default {\n  props: {\n    buckets: { type: Array },\n    showRowLabels: { type: Boolean },\n    queriedInterval: { type: Array },\n    showQueriedInterval: { type: Boolean },\n  },\n  data() {\n    return {\n      timeline: null,\n      filterShortEvents: true,\n      options: {\n        zoomMin: 1000 * 60, // 10min in milliseconds\n        zoomMax: 1000 * 60 * 60 * 24 * 31 * 3, // about three months in milliseconds\n        stack: false,\n        tooltip: {\n          followMouse: true,\n          overflowMethod: 'cap',\n        },\n      },\n    };\n  },\n  computed: {\n    chartData() {\n      const data = [];\n      _.each(this.buckets, (bucket, bidx) => {\n        if (bucket.events === undefined) {\n          return;\n        }\n        let events = bucket.events;\n        // Filter out events shorter than 1 second (notably including 0-duration events)\n        // TODO: Use flooding instead, preferably with some additional method of removing/simplifying short events for even greater performance\n        if (this.filterShortEvents) {\n          events = _.filter(events, e => e.duration > 1);\n        }\n        events = _.sortBy(events, e => e.timestamp);\n        _.each(events, e => {\n          data.push([\n            bidx,\n            getTitleAttr(bucket, e),\n            buildTooltip(bucket, e),\n            new Date(e.timestamp),\n            new Date(moment(e.timestamp).add(e.duration, 'seconds').valueOf()),\n            getColorFromString(getTitleAttr(bucket, e)),\n          ]);\n        });\n      });\n      return data;\n    },\n  },\n  watch: {\n    buckets() {\n      // For some reason, an object is passed here, after which the correct array arrives\n      if (this.buckets.length === undefined) {\n        //console.log(\"I told you so!\")\n        return;\n      }\n\n      // Build groups\n      const groups = _.map(this.buckets, (bucket, bidx) => {\n        return { id: bidx, content: this.showRowLabels ? bucket.id : '' };\n      });\n\n      // Build items\n      const items = _.map(this.chartData, (row, i) => {\n        const bgColor = row[5];\n        const borderColor = Color(bgColor).darken(0.3);\n        return {\n          id: String(i),\n          group: row[0],\n          content: row[1],\n          title: row[2],\n          start: moment(row[3]),\n          end: moment(row[4]),\n          style: `background-color: ${bgColor}; border-color: ${borderColor}`,\n        };\n      });\n\n      if (groups.length > 0 && items.length > 0) {\n        if (this.queriedInterval && this.showQueriedInterval) {\n          const duration = this.queriedInterval[1].diff(this.queriedInterval[0], 'seconds');\n          groups.push({ id: String(groups.length), content: 'queried interval' });\n          items.push({\n            id: String(items.length + 1),\n            group: groups.length - 1,\n            title: buildTooltip(\n              { type: 'test' },\n              {\n                timestamp: this.queriedInterval[0],\n                duration: duration,\n                data: { title: 'test' },\n              }\n            ),\n            content: 'query',\n            start: this.queriedInterval[0],\n            end: this.queriedInterval[1],\n            style: 'background-color: #aaa; height: 10px',\n          });\n        }\n\n        const start =\n          (this.queriedInterval && this.queriedInterval[0]) ||\n          _.min(_.map(items, item => item.start));\n        const end =\n          (this.queriedInterval && this.queriedInterval[1]) ||\n          _.max(_.map(items, item => item.end));\n        this.options.min = start;\n        this.options.max = end;\n        this.timeline.setOptions(this.options);\n        this.timeline.setWindow(start, end);\n        this.timeline.setData({ groups: groups, items: items });\n      }\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const el = this.$el.querySelector('#visualization');\n      this.timeline = new Timeline(el, [], [], this.options);\n    });\n  },\n};\n</script>\n"]}]}