{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/Stopwatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/Stopwatch.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKCmltcG9ydCBTdG9wd2F0Y2hFbnRyeSBmcm9tICcuLi9jb21wb25lbnRzL1N0b3B3YXRjaEVudHJ5LnZ1ZSc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvcGxheSc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvdHJhc2gnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdG9wd2F0Y2gnLAogIGNvbXBvbmVudHM6IHsKICAgICdzdG9wd2F0Y2gtZW50cnknOiBTdG9wd2F0Y2hFbnRyeSwKICB9LAogIGRhdGE6ICgpID0+IHsKICAgIHJldHVybiB7CiAgICAgIGJ1Y2tldF9pZDogJ2F3LXN0b3B3YXRjaCcsCiAgICAgIGV2ZW50czogW10sCiAgICAgIGxhYmVsOiAnJywKICAgICAgbm93OiBtb21lbnQoKSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcnVubmluZ1RpbWVycygpIHsKICAgICAgcmV0dXJuIF8uZmlsdGVyKHRoaXMuZXZlbnRzLCBlID0+IGUuZGF0YS5ydW5uaW5nKTsKICAgIH0sCiAgICBzdG9wcGVkVGltZXJzKCkgewogICAgICByZXR1cm4gXy5maWx0ZXIodGhpcy5ldmVudHMsIGUgPT4gIWUuZGF0YS5ydW5uaW5nKTsKICAgIH0sCiAgICB0aW1lcnNCeURhdGUoKSB7CiAgICAgIHJldHVybiBfLmdyb3VwQnkodGhpcy5zdG9wcGVkVGltZXJzLCBlID0+IG1vbWVudChlLnRpbWVzdGFtcCkuZm9ybWF0KCdZWVlZLU1NLUREJykpOwogICAgfSwKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIC8vIFRPRE86IExpc3QgYWxsIHBvc3NpYmxlIHRpbWVyIGJ1Y2tldHMKICAgIC8vdGhpcy5nZXRCdWNrZXRzKCk7CgogICAgLy8gQ3JlYXRlIGRlZmF1bHQgdGltZXIgYnVja2V0CiAgICB0aGlzLiRhdy5lbnN1cmVCdWNrZXQodGhpcy5idWNrZXRfaWQsICdnZW5lcmFsLnN0b3B3YXRjaCcsICd1bmtub3duJyk7CgogICAgLy8gVE9ETzogR2V0IGFsbCB0aW1lciBldmVudHMKICAgIHRoaXMuZ2V0RXZlbnRzKCk7CgogICAgc2V0SW50ZXJ2YWwoKCkgPT4gKHRoaXMubm93ID0gbW9tZW50KCkpLCAxMDAwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0YXJ0VGltZXI6IGFzeW5jIGZ1bmN0aW9uIChsYWJlbCkgewogICAgICBjb25zdCBldmVudCA9IGF3YWl0IHRoaXMuJGF3Lmluc2VydEV2ZW50KHRoaXMuYnVja2V0X2lkLCB7CiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHJ1bm5pbmc6IHRydWUsCiAgICAgICAgICBsYWJlbDogbGFiZWwsCiAgICAgICAgfSwKICAgICAgfSk7CiAgICAgIHRoaXMuZXZlbnRzLnVuc2hpZnQoZXZlbnQpOwogICAgfSwKCiAgICB1cGRhdGVUaW1lcjogYXN5bmMgZnVuY3Rpb24gKG5ld19ldmVudCkgewogICAgICBjb25zdCBpID0gdGhpcy5ldmVudHMuZmluZEluZGV4KGUgPT4gZS5pZCA9PSBuZXdfZXZlbnQuaWQpOwogICAgICBpZiAoaSAhPSAtMSkgewogICAgICAgIC8vIFRoaXMgaXMgbmVlZGVkIGluc3RlYWQgb2YgdGhpcy5ldmVudHNbaV0gYmVjYXVzZSBpbnNpZGVzIG9mIGFycmF5cwogICAgICAgIC8vIGFyZSBub3QgcmVhY3RpdmUgaW4gVnVlCiAgICAgICAgdGhpcy4kc2V0KHRoaXMuZXZlbnRzLCBpLCBuZXdfZXZlbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJzooJyk7CiAgICAgIH0KICAgIH0sCgogICAgcmVtb3ZlVGltZXI6IGZ1bmN0aW9uIChldmVudCkgewogICAgICB0aGlzLmV2ZW50cyA9IF8uZmlsdGVyKHRoaXMuZXZlbnRzLCBlID0+IGUuaWQgIT0gZXZlbnQuaWQpOwogICAgfSwKCiAgICBnZXRFdmVudHM6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5ldmVudHMgPSBhd2FpdCB0aGlzLiRhdy5nZXRFdmVudHModGhpcy5idWNrZXRfaWQsIHsgbGltaXQ6IDEwMCB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Stopwatch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Stopwatch.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\ndiv\n  h2 Stopwatch\n  p\n    | Using bucket: {{bucket_id}}\n\n  b-alert(show)\n    | This is an early experiment, an important missing feature is the ability to set start/end times manually.\n\n  b-input-group(size=\"lg\")\n    b-input(v-model=\"label\" placeholder=\"What are you working on?\")\n    b-input-group-append\n      b-button(@click=\"startTimer(label)\", variant=\"success\")\n        icon(name=\"play\")\n        | Start\n\n  hr\n\n  div.row\n    div.col-md-12\n      div(v-if=\"runningTimers.length > 0\")\n        h3 Running\n        div(v-for=\"e in runningTimers\" :key=\"e.id\")\n          stopwatch-entry(:event=\"e\", :bucket_id=\"bucket_id\", :now=\"now\",\n            @delete=\"removeTimer\", @update=\"updateTimer\")\n          hr(style=\"margin: 0\")\n      div(v-else)\n        span(style=\"color: #555\") No stopwatch running\n        hr\n\n      div(v-if=\"stoppedTimers.length > 0\")\n        h3.mt-4.mb-4 History\n        div(v-for=\"k in Object.keys(timersByDate).sort().reverse()\")\n          h5.mt-2.mb-1 {{ k }}\n          div(v-for=\"e in timersByDate[k]\" :key=\"e.id\")\n            stopwatch-entry(:event=\"e\", :bucket_id=\"bucket_id\", :now=\"now\",\n              @delete=\"removeTimer\", @update=\"updateTimer\", @new=\"startTimer(e.data.label)\")\n            hr(style=\"margin: 0\")\n      div(v-else)\n        span(style=\"color: #555\") No history to show\n        hr\n</template>\n\n<style scoped lang=\"scss\">\n.btn {\n  margin-right: 0.5em;\n\n  .fa-icon {\n    margin-left: 0;\n    margin-right: 0.5em;\n  }\n}\n</style>\n\n<script>\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport StopwatchEntry from '../components/StopwatchEntry.vue';\nimport 'vue-awesome/icons/play';\nimport 'vue-awesome/icons/trash';\n\nexport default {\n  name: 'Stopwatch',\n  components: {\n    'stopwatch-entry': StopwatchEntry,\n  },\n  data: () => {\n    return {\n      bucket_id: 'aw-stopwatch',\n      events: [],\n      label: '',\n      now: moment(),\n    };\n  },\n  computed: {\n    runningTimers() {\n      return _.filter(this.events, e => e.data.running);\n    },\n    stoppedTimers() {\n      return _.filter(this.events, e => !e.data.running);\n    },\n    timersByDate() {\n      return _.groupBy(this.stoppedTimers, e => moment(e.timestamp).format('YYYY-MM-DD'));\n    },\n  },\n  mounted: function () {\n    // TODO: List all possible timer buckets\n    //this.getBuckets();\n\n    // Create default timer bucket\n    this.$aw.ensureBucket(this.bucket_id, 'general.stopwatch', 'unknown');\n\n    // TODO: Get all timer events\n    this.getEvents();\n\n    setInterval(() => (this.now = moment()), 1000);\n  },\n  methods: {\n    startTimer: async function (label) {\n      const event = await this.$aw.insertEvent(this.bucket_id, {\n        timestamp: new Date(),\n        data: {\n          running: true,\n          label: label,\n        },\n      });\n      this.events.unshift(event);\n    },\n\n    updateTimer: async function (new_event) {\n      const i = this.events.findIndex(e => e.id == new_event.id);\n      if (i != -1) {\n        // This is needed instead of this.events[i] because insides of arrays\n        // are not reactive in Vue\n        this.$set(this.events, i, new_event);\n      } else {\n        console.error(':(');\n      }\n    },\n\n    removeTimer: function (event) {\n      this.events = _.filter(this.events, e => e.id != event.id);\n    },\n\n    getEvents: async function () {\n      this.events = await this.$aw.getEvents(this.bucket_id, { limit: 100 });\n    },\n  },\n};\n</script>\n"]}]}