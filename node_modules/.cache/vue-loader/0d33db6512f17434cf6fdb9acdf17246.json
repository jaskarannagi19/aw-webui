{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/TimelineInspect.vue?vue&type=style&index=0&id=62b8c91d&scoped=true&lang=scss&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/TimelineInspect.vue","mtime":1622830085278},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgpzdmcgewogIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7CiAgYm9yZGVyLXJhZGl1czogMC41ZW07Cn0K"},{"version":3,"sources":["TimelineInspect.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA","file":"TimelineInspect.vue","sourceRoot":"src/visualizations","sourcesContent":["<template lang=\"pug\">\ndiv\n</template>\n\n<style scoped lang=\"scss\">\nsvg {\n  border: 1px solid #999;\n  border-radius: 0.5em;\n}\n</style>\n\n<script>\n// NOTE: This is just a Vue.js component wrapper for timeline.js\n//       Code should generally go in the framework-independent file.\n\nimport timeline from './timeline.js';\n\nexport default {\n  name: 'aw-timeline',\n  props: {\n    chunks: { type: Object },\n    show_afk: { type: Boolean },\n    chunkfunc: { type: Function },\n    eventfunc: { type: Function },\n  },\n  watch: {\n    chunks: function () {\n      this.update();\n    },\n    show_afk: function () {\n      this.update();\n    },\n  },\n  mounted: function () {\n    timeline.create(this.$el);\n    this.update();\n  },\n  methods: {\n    update: function () {\n      if (this.chunks === null) {\n        timeline.set_status(this.$el, 'Loading...');\n      } else {\n        timeline.update(this.$el, this.chunks, this.show_afk, this.chunkfunc, this.eventfunc);\n      }\n    },\n  },\n};\n</script>\n"]}]}