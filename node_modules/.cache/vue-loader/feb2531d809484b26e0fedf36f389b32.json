{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/visualizations/SunburstCategories.vue?vue&type=style&index=0&id=55a7b6a0&lang=scss&scoped=true&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/visualizations/SunburstCategories.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW5mbyB7CiAgd2lkdGg6IDMwMHB4OwogIGhlaWdodDogMTAwcHg7CiAgcGFkZGluZzogMjBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA1MCU7CiAgbGVmdDogNTAlOwogIHotbGV2ZWw6IDEwOwogIHBvaW50ZXItZXZlbnRzOiBub25lOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW4tbGVmdDogLTE1MHB4OwogIG1hcmdpbi10b3A6IC03MHB4OwoKICAubmFtZSB7CiAgICBmb250LXNpemU6IDEuNWVtOwogIH0KCiAgLnBhcmVudCB7CiAgICBmb250LXNpemU6IDAuOGVtOwogIH0KfQo="},{"version":3,"sources":["SunburstCategories.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SunburstCategories.vue","sourceRoot":"src/visualizations","sourcesContent":["<template lang=\"pug\">\n// We want to use another colorscheme than the default 'schemeAccent',\n// unfortunately it seems like the color-scheme prop is broken.\n// See this issue: https://github.com/David-Desmaisons/Vue.D3.sunburst/issues/11\nsunburst(:data=\"data\", :colorScale=\"colorfunc\", :getCategoryForColor=\"categoryForColor\", :colorScheme=\"null\")\n  // Add behaviors\n  template(slot-scope=\"{ on, actions }\")\n    highlightOnHover(v-bind=\"{ on, actions }\")\n    zoomOnClick(v-bind=\"{ on, actions }\")\n\n  // Add information to be displayed on top of the graph\n  div(slot=\"top\", slot-scope=\"{ nodes }\")\n    //nodeInfoDisplayer(:current=\"nodes.mouseOver\" :root=\"nodes.root\" description=\"time spent\" :show-all-number=\"false\")\n    div.info\n      div(v-if=\"nodes.mouseOver !== null && nodes.mouseOver\")\n        div.parent {{ nodes.mouseOver.data.parent ? nodes.mouseOver.data.parent.join(\" > \") : \" \" }}\n        div.name {{ nodes.mouseOver.data.name }}\n        div {{ nodes.mouseOver.value | friendlyduration }}\n        div ({{ Math.round(100 * nodes.mouseOver.value / nodes.root.value) }}%)\n\n  // Add legend\n  //breadcrumbTrail(slot=\"legend\" slot-scope=\"{ nodes, colorGetter, width }\" :current=\"nodes.mouseOver\" :root=\"nodes.root\" :colorGetter=\"colorGetter\" :from=\"nodes.clicked\" :width=\"width\" :item-width=\"100\" :order=\"0\")\n</template>\n\n<script>\nimport {\n  breadcrumbTrail,\n  highlightOnHover,\n  nodeInfoDisplayer,\n  sunburst,\n  zoomOnClick,\n} from 'vue-d3-sunburst';\nimport 'vue-d3-sunburst/dist/vue-d3-sunburst.css';\nimport { getColorFromCategory } from '~/util/color';\n\nconst example_data = {\n  name: 'flare',\n  children: [\n    {\n      name: 'analytics',\n      children: [\n        {\n          name: 'cluster',\n          children: [\n            { name: 'AgglomerativeCluster', size: 3938 },\n            { name: 'CommunityStructure', size: 3812 },\n            { name: 'HierarchicalCluster', size: 6714 },\n            { name: 'MergeEdge', size: 743 },\n          ],\n        },\n        {\n          name: 'optimization',\n          children: [{ name: 'AspectRatioBanker', size: 7074 }],\n        },\n      ],\n    },\n  ],\n};\n\nconst SEP = '>';\n\nexport default {\n  components: {\n    breadcrumbTrail,\n    highlightOnHover,\n    nodeInfoDisplayer,\n    sunburst,\n    zoomOnClick,\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => example_data,\n    },\n  },\n  methods: {\n    categoryForColor: function (d) {\n      const category = d.parent ? d.parent.concat([d.name]) : [d.name];\n      return category.join(SEP);\n    },\n    colorfunc: function (s) {\n      if (s == 'All') return '#FFF';\n      const cat = this.$store.getters['categories/get_category'](s.split(SEP));\n      const allCats = this.$store.state.categories.classes;\n      const color = getColorFromCategory(cat, allCats);\n      return color;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.info {\n  width: 300px;\n  height: 100px;\n  padding: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-level: 10;\n  pointer-events: none;\n  text-align: center;\n  margin-left: -150px;\n  margin-top: -70px;\n\n  .name {\n    font-size: 1.5em;\n  }\n\n  .parent {\n    font-size: 0.8em;\n  }\n}\n</style>\n"]}]}