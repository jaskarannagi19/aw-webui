{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/QueryExplorer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/QueryExplorer.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKCmNvbnN0IHRvZGF5ID0gbW9tZW50KCkuc3RhcnRPZignZGF5Jyk7CmNvbnN0IHRvbW9ycm93ID0gbW9tZW50KHRvZGF5KS5hZGQoMjQsICdob3VycycpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdRdWVyeUV4cGxvcmVyJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlcnlfY29kZTogYGFma19ldmVudHMgPSBxdWVyeV9idWNrZXQoZmluZF9idWNrZXQoImF3LXdhdGNoZXItYWZrXyIpKTsKd2luZG93X2V2ZW50cyA9IHF1ZXJ5X2J1Y2tldChmaW5kX2J1Y2tldCgiYXctd2F0Y2hlci13aW5kb3dfIikpOwp3aW5kb3dfZXZlbnRzID0gZmlsdGVyX3BlcmlvZF9pbnRlcnNlY3Qod2luZG93X2V2ZW50cywgZmlsdGVyX2tleXZhbHMoYWZrX2V2ZW50cywgInN0YXR1cyIsIFsibm90LWFmayJdKSk7Cm1lcmdlZF9ldmVudHMgPSBtZXJnZV9ldmVudHNfYnlfa2V5cyh3aW5kb3dfZXZlbnRzLCBbImFwcCIsICJ0aXRsZSJdKTsKUkVUVVJOID0gc29ydF9ieV9kdXJhdGlvbihtZXJnZWRfZXZlbnRzKTtgLAogICAgICBldmVudF90eXBlOiAnY3VycmVudHdpbmRvdycsCiAgICAgIGV2ZW50czogW10sCiAgICAgIHRvZGF5OiB0b2RheS5mb3JtYXQoKSwKICAgICAgdG9tb3Jyb3c6IHRvbW9ycm93LmZvcm1hdCgpLAogICAgICBlcnJvcjogJycsCiAgICAgIHN0YXJ0ZGF0ZTogdG9kYXkuZm9ybWF0KCdZWVlZLU1NLUREJyksCiAgICAgIGVuZGRhdGU6IHRvbW9ycm93LmZvcm1hdCgnWVlZWS1NTS1ERCcpLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBldmVudGNvdW50X3N0cjogZnVuY3Rpb24gKCkgewogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmV2ZW50cykpIHJldHVybiAnTnVtYmVyIG9mIGV2ZW50czogJyArIHRoaXMuZXZlbnRzLmxlbmd0aDsKICAgICAgZWxzZSByZXR1cm4gJyc7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnk6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3QgcXVlcnkgPSB0aGlzLnF1ZXJ5X2NvZGUuc3BsaXQoJzsnKS5tYXAocyA9PiBzLnRyaW0oKSArICc7Jyk7CiAgICAgIGNvbnN0IHRpbWVwZXJpb2RzID0gW21vbWVudCh0aGlzLnN0YXJ0ZGF0ZSkuZm9ybWF0KCkgKyAnLycgKyBtb21lbnQodGhpcy5lbmRkYXRlKS5mb3JtYXQoKV07CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuJGF3LnF1ZXJ5KHRpbWVwZXJpb2RzLCBxdWVyeSk7CiAgICAgICAgdGhpcy5ldmVudHMgPSBkYXRhWzBdOwogICAgICAgIHRoaXMuZXJyb3IgPSAnJzsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMuZXJyb3IgPSBlLnJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["QueryExplorer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QueryExplorer.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n\ndiv\n  h3 Query Explorer\n\n  | See #[a(href=\"https://docs.activitywatch.net/en/latest/examples/querying-data.html\") the documentation] for help on how to write queries.\n\n  hr\n\n  div.alert.alert-danger(v-if=\"error\")\n    | {{error}}\n\n  form\n    div.form-row\n      div.form-group.col-md-6\n        | Start\n        input.form-control(type=\"date\", :max=\"today\", v-model=\"startdate\")\n      div.form-group.col-md-6\n        | End\n        input.form-control(type=\"date\", :max=\"tomorrow\", v-model=\"enddate\")\n\n    div.form-group\n      textarea.form-control(v-model=\"query_code\", style=\"font-family: monospace\" rows=4)\n    div.form-inline\n      div.form-group\n        button.btn.btn-success(type=\"button\", @click=\"query()\") Query\n      span(style=\"padding-left: 1em;\")\n      | {{eventcount_str}}\n\n  hr\n\n  aw-selectable-eventview(:events=\"events\", :event_type=\"event_type\")\n</template>\n\n<style scoped lang=\"scss\"></style>\n\n<script>\nimport moment from 'moment';\n\nconst today = moment().startOf('day');\nconst tomorrow = moment(today).add(24, 'hours');\n\nexport default {\n  name: 'QueryExplorer',\n  data() {\n    return {\n      query_code: `afk_events = query_bucket(find_bucket(\"aw-watcher-afk_\"));\nwindow_events = query_bucket(find_bucket(\"aw-watcher-window_\"));\nwindow_events = filter_period_intersect(window_events, filter_keyvals(afk_events, \"status\", [\"not-afk\"]));\nmerged_events = merge_events_by_keys(window_events, [\"app\", \"title\"]);\nRETURN = sort_by_duration(merged_events);`,\n      event_type: 'currentwindow',\n      events: [],\n      today: today.format(),\n      tomorrow: tomorrow.format(),\n      error: '',\n      startdate: today.format('YYYY-MM-DD'),\n      enddate: tomorrow.format('YYYY-MM-DD'),\n    };\n  },\n  computed: {\n    eventcount_str: function () {\n      if (Array.isArray(this.events)) return 'Number of events: ' + this.events.length;\n      else return '';\n    },\n  },\n  methods: {\n    query: async function () {\n      const query = this.query_code.split(';').map(s => s.trim() + ';');\n      const timeperiods = [moment(this.startdate).format() + '/' + moment(this.enddate).format()];\n      try {\n        const data = await this.$aw.query(timeperiods, query);\n        this.events = data[0];\n        this.error = '';\n      } catch (e) {\n        this.error = e.response.data.message;\n      }\n    },\n  },\n};\n</script>\n"]}]}