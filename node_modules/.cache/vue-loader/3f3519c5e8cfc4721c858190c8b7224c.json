{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/components/NewReleaseNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/components/NewReleaseNotification.vue","mtime":1622212604093},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IHNlbXZlciBmcm9tICdzZW12ZXInOwoKY29uc3QgU0hPUlRfQkFDS09GRl9QRVJJT0QgPSAyNCAqIDYwICogNjA7CmNvbnN0IExPTkdfQkFDS09GRl9QRVJJT0QgPSA1ICogMjQgKiA2MCAqIDYwOwovLyBBZnRlciByZW1pbmRpbmcgdGhlIHVzZXIgZXZlcnkgU0hPUlRfQkFDS09GRl9QRVJJT0QgZGF5cyBmb3IgQkFDS09GRl9USFJFU0hPTEQgdGltZXMsIHN3aXRjaCB0byBMT05HX0JBQ0tPRkZfUEVSSU9ECmNvbnN0IEJBQ0tPRkZfVEhSRVNIT0xEID0gNTsKLy8gVGhlIGZvbGxvd2luZyBtYXkgYmUgdXNlZCBmb3IgdGVzdGluZywgcm91Z2hseSAxMHMgYW5kIDMwcyBlYWNoCi8vIGNvbnN0IFNIT1JUX0JBQ0tPRkZfUEVSSU9EID0gMTA7Ci8vIGNvbnN0IExPTkdfQkFDS09GRl9QRVJJT0QgPSAzMDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbmV3LXJlbGVhc2Utbm90aWZpY2F0aW9uJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNWaXNpYmxlOiBmYWxzZSwKICAgICAgaXNGb2xsb3dVcFZpc2libGU6IGZhbHNlLAogICAgICBkYXRhOiBudWxsLCAvLyBkYXRhIHNob3VsZCBoYXZlIGlzRW5hYmxlZCwgbmV4dENoZWNrVGltZSwgaG93T2Z0ZW5Ub0NoZWNrLCB0aW1lc0NoZWNrZWQKICAgICAgY3VycmVudFZlcnNpb246IG51bGwsCiAgICAgIGxhdGVzdFZlcnNpb246IG51bGwsCiAgICAgIGxhdGVzdFZlcnNpb25EYXRlOiBudWxsLAogICAgICAvLyBUaGUgZm9sbG93aW5nIGNvbnN0YW50cyBjYW4gYmUgdXNlZCBpbiBvdGhlciBmaWxlcywgc3VjaCBhcyBSZWxlYXNlTm90aWZpY2F0aW9uU2V0dGluZ3MudnVlCiAgICAgIFNIT1JUX0JBQ0tPRkZfUEVSSU9EOiBTSE9SVF9CQUNLT0ZGX1BFUklPRCwKICAgICAgTE9OR19CQUNLT0ZGX1BFUklPRDogTE9OR19CQUNLT0ZGX1BFUklPRCwKICAgIH07CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgdGhpcy5yZXRyaWV2ZURhdGEoKTsKICAgIGlmICh0aGlzLmRhdGEgJiYgKCF0aGlzLmRhdGEuaXNFbmFibGVkIHx8IG1vbWVudCgpIDwgbW9tZW50KHRoaXMuZGF0YS5uZXh0Q2hlY2tUaW1lKSkpIHJldHVybjsKCiAgICBhd2FpdCB0aGlzLnJldHJpZXZlQ3VycmVudFZlcnNpb24oKTsKICAgIGF3YWl0IHRoaXMucmV0cmlldmVMYXRlc3RWZXJzaW9uKCk7CiAgICB0aGlzLmlzVmlzaWJsZSA9IHRoaXMuZ2V0SGFzTmV3UmVsZWFzZSgpICYmIHRoaXMuZ2V0UmVsZWFzZUlzUmVhZHkoKTsKCiAgICBpZiAodGhpcy5pc1Zpc2libGUgJiYgdGhpcy5kYXRhKSB7CiAgICAgIGNvbnN0IF90aW1lc0NoZWNrZWQgPSBNYXRoLm1pbih0aGlzLmRhdGEudGltZXNDaGVja2VkICsgMSwgQkFDS09GRl9USFJFU0hPTEQpOwogICAgICBjb25zdCBfaG93T2Z0ZW5Ub0NoZWNrID0KICAgICAgICBfdGltZXNDaGVja2VkID4gQkFDS09GRl9USFJFU0hPTEQgLSAxID8gTE9OR19CQUNLT0ZGX1BFUklPRCA6IFNIT1JUX0JBQ0tPRkZfUEVSSU9EOwogICAgICB0aGlzLmRhdGEgPSB7CiAgICAgICAgaXNFbmFibGVkOiB0cnVlLAogICAgICAgIG5leHRDaGVja1RpbWU6IG1vbWVudCgpLmFkZChfaG93T2Z0ZW5Ub0NoZWNrLCAnc2Vjb25kcycpLAogICAgICAgIGhvd09mdGVuVG9DaGVjazogX2hvd09mdGVuVG9DaGVjaywKICAgICAgICB0aW1lc0NoZWNrZWQ6IF90aW1lc0NoZWNrZWQsCiAgICAgIH07CiAgICB9IGVsc2UgewogICAgICB0aGlzLmRhdGEgPSB7CiAgICAgICAgaXNFbmFibGVkOiB0cnVlLAogICAgICAgIG5leHRDaGVja1RpbWU6IG1vbWVudCgpLmFkZChTSE9SVF9CQUNLT0ZGX1BFUklPRCwgJ3NlY29uZHMnKSwKICAgICAgICBob3dPZnRlblRvQ2hlY2s6IFNIT1JUX0JBQ0tPRkZfUEVSSU9ELAogICAgICAgIHRpbWVzQ2hlY2tlZDogdGhpcy5pc1Zpc2libGUgPyAxIDogMCwKICAgICAgfTsKICAgIH0KCiAgICB0aGlzLnNhdmVEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXRyaWV2ZURhdGEoKSB7CiAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbmV3UmVsZWFzZUNoZWNrRGF0YScpKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHRoaXMuZGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ25ld1JlbGVhc2VDaGVja0RhdGEnKSk7CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCduZXdSZWxlYXNlQ2hlY2tEYXRhIG5vdCBmb3VuZCBpbiBsb2NhbFN0b3JhZ2U6ICcsIGVycik7CiAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnbmV3UmVsZWFzZUNoZWNrRGF0YScpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIHJldHJpZXZlQ3VycmVudFZlcnNpb24oKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRhdy5nZXRJbmZvKCk7CiAgICAgICAgdGhpcy5jdXJyZW50VmVyc2lvbiA9IHRoaXMuY2xlYW5WZXJzaW9uVGFnKHJlc3BvbnNlLnZlcnNpb24pOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCd1bmFibGUgdG8gY29ubmVjdCB0byBhdy1zZXJ2ZXI6ICcsIGVycik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyByZXRyaWV2ZUxhdGVzdFZlcnNpb24oKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgICAgICAnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9BY3Rpdml0eVdhdGNoL2FjdGl2aXR5d2F0Y2gvcmVsZWFzZXMvbGF0ZXN0JwogICAgICAgICk7CiAgICAgICAgdGhpcy5sYXRlc3RWZXJzaW9uID0gdGhpcy5jbGVhblZlcnNpb25UYWcocmVzcG9uc2UuZGF0YS50YWdfbmFtZSk7CiAgICAgICAgdGhpcy5sYXRlc3RWZXJzaW9uRGF0ZSA9IG1vbWVudChyZXNwb25zZS5kYXRhLnB1Ymxpc2hlZF9hdCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ3VuYWJsZSB0byBjb25uZWN0IHRvIEdpdEh1YiBBUEkgdG8gY2hlY2sgZm9yIGxhdGVzdCB2ZXJzaW9uOiAnLCBlcnIpOwogICAgICB9CiAgICB9LAogICAgY2xlYW5WZXJzaW9uVGFnKHRhZykgewogICAgICB0YWcgPSB0YWcudHJpbSgpOwoKICAgICAgLy8gUmVtb3ZlIHRoZSBidWlsZCBtZXRhZGF0YSBpZiBpdCBleGlzdHMsIGUuZy4gJ3YwLjguZGV2K2M2NDMzZWEnCiAgICAgIGNvbnN0IHBsdXNfaWR4ID0gdGFnLmluZGV4T2YoJysnKTsKICAgICAgdGFnID0gdGFnLnN1YnN0cmluZygwLCBwbHVzX2lkeCAhPSAtMSA/IHBsdXNfaWR4IDogdGFnLmxlbmd0aCk7CiAgICAgIC8vIFJlbW92ZSBzZXJ2ZXIgdHlwZSBpZiBpdCBleGlzdHMsIGUuZy4gJ3YwLjguMCAocnVzdCknCiAgICAgIGNvbnN0IHNwYWNlX2lkeCA9IHRhZy5pbmRleE9mKCcgJyk7CiAgICAgIHRhZyA9IHRhZy5zdWJzdHJpbmcoMCwgc3BhY2VfaWR4ICE9IC0xID8gc3BhY2VfaWR4IDogdGFnLmxlbmd0aCk7CgogICAgICByZXR1cm4gc2VtdmVyLnZhbGlkKHRhZyk7CiAgICB9LAogICAgZ2V0SGFzTmV3UmVsZWFzZSgpIHsKICAgICAgLy8gTnVsbCB2ZXJzaW9uIG1lYW5zIGZvcm1hdCB3YXMgaW52YWxpZCwgc28gZmFpbCBzaWxlbnRseSBhbmQgbm90IHNob3cgcmVtaW5kZXIKICAgICAgaWYgKHRoaXMuY3VycmVudFZlcnNpb24gJiYgdGhpcy5sYXRlc3RWZXJzaW9uKQogICAgICAgIHJldHVybiBzZW12ZXIubHQodGhpcy5jdXJyZW50VmVyc2lvbiwgdGhpcy5sYXRlc3RWZXJzaW9uKTsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIGdldFJlbGVhc2VJc1JlYWR5KCkgewogICAgICAvLyBXYW50IHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBsYXRlc3QgcmVsZWFzZSBpcyBvdXQgZm9yIGEgd2VlayB0byBtYWtlIHN1cmUgaXQncyB3ZWxsIHRlc3RlZAogICAgICBpZiAodGhpcy5sYXRlc3RWZXJzaW9uRGF0ZSkgcmV0dXJuIG1vbWVudCgpID49IHRoaXMubGF0ZXN0VmVyc2lvbkRhdGUuYWRkKDcsICdkYXlzJyk7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBzYXZlRGF0YSgpIHsKICAgICAgY29uc3QgcGFyc2VkID0gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhKTsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ25ld1JlbGVhc2VDaGVja0RhdGEnLCBwYXJzZWQpOwogICAgfSwKICAgIGRpc2FibGVDaGVjaygpIHsKICAgICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTsKICAgICAgdGhpcy5pc0ZvbGxvd1VwVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuZGF0YS5pc0VuYWJsZWQgPSBmYWxzZTsKICAgICAgdGhpcy5zYXZlRGF0YSgpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["NewReleaseNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"NewReleaseNotification.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n  div\n    b-alert(v-if=\"isVisible\", variant=\"info\", show)\n      | A new release, v{{ latestVersion }}, is available for \n      | #[a(href=\"https://activitywatch.net/downloads/\" target=\"_blank\" class=\"alert-link\") download], \n      | you can also #[a(href=\"javascript:void(0);\" class=\"alert-link\" @click=\"disableCheck\") disable]\n      | future reminders and checks for updates.\n      button(type=\"button\", class=\"close\", @click=\"isVisible=false\") &times;\n\n    b-alert(v-if=\"isFollowUpVisible\", variant=\"success\", show)\n      | Checking for new releases is now disabled, you can re-enable it in the \n      | #[router-link(to=\"/settings\" class=\"alert-link\" @click.native=\"isFollowUpVisible=false\") settings page].\n      button(type=\"button\", class=\"close\", @click=\"isFollowUpVisible=false\") &times;\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\nimport semver from 'semver';\n\nconst SHORT_BACKOFF_PERIOD = 24 * 60 * 60;\nconst LONG_BACKOFF_PERIOD = 5 * 24 * 60 * 60;\n// After reminding the user every SHORT_BACKOFF_PERIOD days for BACKOFF_THRESHOLD times, switch to LONG_BACKOFF_PERIOD\nconst BACKOFF_THRESHOLD = 5;\n// The following may be used for testing, roughly 10s and 30s each\n// const SHORT_BACKOFF_PERIOD = 10;\n// const LONG_BACKOFF_PERIOD = 30;\n\nexport default {\n  name: 'new-release-notification',\n  data() {\n    return {\n      isVisible: false,\n      isFollowUpVisible: false,\n      data: null, // data should have isEnabled, nextCheckTime, howOftenToCheck, timesChecked\n      currentVersion: null,\n      latestVersion: null,\n      latestVersionDate: null,\n      // The following constants can be used in other files, such as ReleaseNotificationSettings.vue\n      SHORT_BACKOFF_PERIOD: SHORT_BACKOFF_PERIOD,\n      LONG_BACKOFF_PERIOD: LONG_BACKOFF_PERIOD,\n    };\n  },\n  async mounted() {\n    this.retrieveData();\n    if (this.data && (!this.data.isEnabled || moment() < moment(this.data.nextCheckTime))) return;\n\n    await this.retrieveCurrentVersion();\n    await this.retrieveLatestVersion();\n    this.isVisible = this.getHasNewRelease() && this.getReleaseIsReady();\n\n    if (this.isVisible && this.data) {\n      const _timesChecked = Math.min(this.data.timesChecked + 1, BACKOFF_THRESHOLD);\n      const _howOftenToCheck =\n        _timesChecked > BACKOFF_THRESHOLD - 1 ? LONG_BACKOFF_PERIOD : SHORT_BACKOFF_PERIOD;\n      this.data = {\n        isEnabled: true,\n        nextCheckTime: moment().add(_howOftenToCheck, 'seconds'),\n        howOftenToCheck: _howOftenToCheck,\n        timesChecked: _timesChecked,\n      };\n    } else {\n      this.data = {\n        isEnabled: true,\n        nextCheckTime: moment().add(SHORT_BACKOFF_PERIOD, 'seconds'),\n        howOftenToCheck: SHORT_BACKOFF_PERIOD,\n        timesChecked: this.isVisible ? 1 : 0,\n      };\n    }\n\n    this.saveData();\n  },\n  methods: {\n    retrieveData() {\n      if (localStorage.getItem('newReleaseCheckData')) {\n        try {\n          this.data = JSON.parse(localStorage.getItem('newReleaseCheckData'));\n        } catch (err) {\n          console.error('newReleaseCheckData not found in localStorage: ', err);\n          localStorage.removeItem('newReleaseCheckData');\n        }\n      }\n    },\n    async retrieveCurrentVersion() {\n      try {\n        const response = await this.$aw.getInfo();\n        this.currentVersion = this.cleanVersionTag(response.version);\n      } catch (err) {\n        console.error('unable to connect to aw-server: ', err);\n      }\n    },\n    async retrieveLatestVersion() {\n      try {\n        const response = await axios.get(\n          'https://api.github.com/repos/ActivityWatch/activitywatch/releases/latest'\n        );\n        this.latestVersion = this.cleanVersionTag(response.data.tag_name);\n        this.latestVersionDate = moment(response.data.published_at);\n      } catch (err) {\n        console.error('unable to connect to GitHub API to check for latest version: ', err);\n      }\n    },\n    cleanVersionTag(tag) {\n      tag = tag.trim();\n\n      // Remove the build metadata if it exists, e.g. 'v0.8.dev+c6433ea'\n      const plus_idx = tag.indexOf('+');\n      tag = tag.substring(0, plus_idx != -1 ? plus_idx : tag.length);\n      // Remove server type if it exists, e.g. 'v0.8.0 (rust)'\n      const space_idx = tag.indexOf(' ');\n      tag = tag.substring(0, space_idx != -1 ? space_idx : tag.length);\n\n      return semver.valid(tag);\n    },\n    getHasNewRelease() {\n      // Null version means format was invalid, so fail silently and not show reminder\n      if (this.currentVersion && this.latestVersion)\n        return semver.lt(this.currentVersion, this.latestVersion);\n      return false;\n    },\n    getReleaseIsReady() {\n      // Want to make sure that the latest release is out for a week to make sure it's well tested\n      if (this.latestVersionDate) return moment() >= this.latestVersionDate.add(7, 'days');\n      return false;\n    },\n    saveData() {\n      const parsed = JSON.stringify(this.data);\n      localStorage.setItem('newReleaseCheckData', parsed);\n    },\n    disableCheck() {\n      this.isVisible = false;\n      this.isFollowUpVisible = true;\n      this.data.isEnabled = false;\n      this.saveData();\n    },\n  },\n};\n</script>\n"]}]}