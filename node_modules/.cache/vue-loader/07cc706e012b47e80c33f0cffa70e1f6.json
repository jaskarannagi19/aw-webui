{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/SunburstClock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/visualizations/SunburstClock.vue","mtime":1622830085278},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIE5PVEU6IFRoaXMgaXMganVzdCBhIFZ1ZS5qcyBjb21wb25lbnQgd3JhcHBlciBmb3IgdGltZWxpbmUtc2ltcGxlLmpzCi8vICAgICAgIENvZGUgc2hvdWxkIGdlbmVyYWxseSBnbyBpbiB0aGUgZnJhbWV3b3JrLWluZGVwZW5kZW50IGZpbGUuCgovLyBUT0RPOiBTdW5idXJzdCByZXF1aXJlcyBhIGhpZXJhcmNoaWNhbCBkYXRhIGZvcm1hdAoKaW1wb3J0IHN1bmJ1cnN0IGZyb20gJy4vc3VuYnVyc3QtY2xvY2suanMnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2F3LXN1bmJ1cnN0LWNsb2NrJywKICBwcm9wczogewogICAgZGF0ZTogeyB0eXBlOiBTdHJpbmcgfSwKICAgIGFma0J1Y2tldElkOiB7IHR5cGU6IFN0cmluZyB9LAogICAgd2luZG93QnVja2V0SWQ6IHsgdHlwZTogU3RyaW5nIH0sCiAgfSwKCiAgZGF0YTogKCkgPT4gewogICAgcmV0dXJuIHsKICAgICAgc3RhcnR0aW1lOiBtb21lbnQoKSwKICAgICAgZW5kdGltZTogbW9tZW50KCksCiAgICAgIGNlbnRlck1zZzogJ0xvYWRpbmcuLi4nLAogICAgfTsKICB9LAoKICB3YXRjaDogewogICAgZGF0ZTogZnVuY3Rpb24gKHRvKSB7CiAgICAgIHRoaXMuc3RhcnR0aW1lID0gbW9tZW50KHRvKTsKICAgICAgdGhpcy5lbmR0aW1lID0gbW9tZW50KHRoaXMuc3RhcnR0aW1lKS5hZGQoMSwgJ2RheXMnKTsKICAgICAgdGhpcy52aXN1YWxpemUoKTsKICAgIH0sCiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICBzdW5idXJzdC5jcmVhdGUodGhpcy4kZWwpOwogICAgdGhpcy5zdGFydHRpbWUgPSBtb21lbnQodGhpcy5kYXRlKTsKICAgIHRoaXMuZW5kdGltZSA9IG1vbWVudCh0aGlzLmRhdGUpLmFkZCgxLCAnZGF5cycpOwogICAgdGhpcy52aXN1YWxpemUoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICB0b2RheXNFdmVudHM6IGFzeW5jIGZ1bmN0aW9uIChidWNrZXRfaWQpIHsKICAgICAgY29uc3QgcXVlcnlzdHIgPSBbYFJFVFVSTiA9IGZsb29kKHF1ZXJ5X2J1Y2tldCgiJHtidWNrZXRfaWR9IikpO2BdOwogICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy4kYXcucXVlcnkoCiAgICAgICAgW2Ake3RoaXMuc3RhcnR0aW1lLmZvcm1hdCgpfS8ke3RoaXMuZW5kdGltZS5mb3JtYXQoKX1gXSwKICAgICAgICBxdWVyeXN0cgogICAgICApOwogICAgICByZXR1cm4gZGF0YVswXTsKICAgIH0sCgogICAgdmlzdWFsaXplOiBmdW5jdGlvbiAoKSB7CiAgICAgIGZ1bmN0aW9uIGJ1aWxkSGllcmFyY2h5KHBhcmVudHMsIGNoaWxkcmVuKSB7CiAgICAgICAgcGFyZW50cyA9IF8uc29ydEJ5KHBhcmVudHMsICd0aW1lc3RhbXAnLCAnZGVzYycpOwogICAgICAgIGNoaWxkcmVuID0gXy5zb3J0QnkoY2hpbGRyZW4sICd0aW1lc3RhbXAnLCAnZGVzYycpOwoKICAgICAgICBsZXQgaV9jaGlsZCA9IDA7CiAgICAgICAgZm9yIChsZXQgaV9wYXJlbnQgPSAwOyBpX3BhcmVudCA8IHBhcmVudHMubGVuZ3RoOyBpX3BhcmVudCsrKSB7CiAgICAgICAgICBjb25zdCBwID0gcGFyZW50c1tpX3BhcmVudF07CiAgICAgICAgICBjb25zdCBwX3N0YXJ0ID0gbW9tZW50KHAudGltZXN0YW1wKTsKICAgICAgICAgIGNvbnN0IHBfZW5kID0gcF9zdGFydC5jbG9uZSgpLmFkZChwLmR1cmF0aW9uLCAnc2Vjb25kcycpOwoKICAgICAgICAgIHAuY2hpbGRyZW4gPSBbXTsKICAgICAgICAgIHdoaWxlIChpX2NoaWxkIDwgY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgICAgICAgIGNvbnN0IGUgPSBjaGlsZHJlbltpX2NoaWxkXTsKICAgICAgICAgICAgY29uc3QgZV9zdGFydCA9IG1vbWVudChlLnRpbWVzdGFtcCk7CiAgICAgICAgICAgIGNvbnN0IGVfZW5kID0gZV9zdGFydC5jbG9uZSgpLmFkZChlLmR1cmF0aW9uLCAnc2Vjb25kcycpOwoKICAgICAgICAgICAgY29uc3QgYmVmb3JlX3BhcmVudCA9IGVfZW5kLmlzQmVmb3JlKHBfc3RhcnQpOwogICAgICAgICAgICBjb25zdCB3aXRoaW5fcGFyZW50ID0gZV9zdGFydC5pc0FmdGVyKHBfc3RhcnQpICYmIGVfZW5kLmlzQmVmb3JlKHBfZW5kKTsKICAgICAgICAgICAgY29uc3QgYWZ0ZXJfcGFyZW50ID0gZV9zdGFydC5pc0FmdGVyKHBfZW5kKTsKCiAgICAgICAgICAgIC8vIFRPRE86IFRoaXMgaXNuJ3QgY29ycmVjdCwgeWV0CiAgICAgICAgICAgIGlmIChiZWZvcmVfcGFyZW50KSB7CiAgICAgICAgICAgICAgLy8gQ2hpbGQgaXMgYmVoaW5kIHBhcmVudAogICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlRvbyBmYXIgYmVoaW5kOiAiICsgaV9jaGlsZCk7CiAgICAgICAgICAgICAgaV9jaGlsZCsrOwogICAgICAgICAgICB9IGVsc2UgaWYgKHdpdGhpbl9wYXJlbnQpIHsKICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJBZGRlZCByZWxhdGlvbjogIiArIGlfY2hpbGQpOwogICAgICAgICAgICAgIHAuY2hpbGRyZW4gPSBfLmNvbmNhdChwLmNoaWxkcmVuLCBlKTsKICAgICAgICAgICAgICBpX2NoaWxkKys7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoYWZ0ZXJfcGFyZW50KSB7CiAgICAgICAgICAgICAgLy8gQ2hpbGQgaXMgYWhlYWQgb2YgcGFyZW50CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiVG9vIGZhciBhaGVhZDogIiArIGlfY2hpbGQpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFRPRE86IFNwbGl0IGV2ZW50cyB3aGVuIHRoaXMgaGFwcGVucwogICAgICAgICAgICAgIGNvbnNvbGUud2FybignQmV0d2VlbiBwYXJlbnRzJyk7CiAgICAgICAgICAgICAgcC5jaGlsZHJlbiA9IF8uY29uY2F0KHAuY2hpbGRyZW4sIGUpOwogICAgICAgICAgICAgIGlfY2hpbGQrKzsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gQnVpbGQgdGhlIHJvb3Qgbm9kZQogICAgICAgIC8vY29uc29sZS5sb2cocGFyZW50cyk7CiAgICAgICAgY29uc3QgbV9zdGFydCA9IG1vbWVudChfLmZpcnN0KHBhcmVudHMpLnRpbWVzdGFtcCk7CiAgICAgICAgY29uc3QgbV9lbmQgPSBtb21lbnQoXy50YWlsKHBhcmVudHMpLnRpbWVzdGFtcCk7CiAgICAgICAgY29uc3QgZHVyYXRpb24gPSAobV9lbmQgLSBtX3N0YXJ0KSAvIDEwMDA7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRpbWVzdGFtcDogXy5maXJzdChwYXJlbnRzKS50aW1lc3RhbXAsCiAgICAgICAgICAvLyBUT0RPOiBJZiB3ZSB3YW50IGEgMTIvMjRoIGNsb2NrLCB0aGlzIGhhcyB0byBjaGFuZ2UKICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwKICAgICAgICAgIGRhdGE6IHsgdGl0bGU6ICdST09UJyB9LAogICAgICAgICAgY2hpbGRyZW46IHBhcmVudHMsCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgdGhpcy50b2RheXNFdmVudHModGhpcy5hZmtCdWNrZXRJZCkudGhlbihldmVudHNfYWZrID0+IHsKICAgICAgICB0aGlzLnRvZGF5c0V2ZW50cyh0aGlzLndpbmRvd0J1Y2tldElkKS50aGVuKGV2ZW50c193aW5kb3cgPT4gewogICAgICAgICAgbGV0IGhpZXJhcmNoeSA9IG51bGw7CiAgICAgICAgICBpZiAoZXZlbnRzX2Fmay5sZW5ndGggPiAwICYmIGV2ZW50c193aW5kb3cubGVuZ3RoID4gMCkgewogICAgICAgICAgICBoaWVyYXJjaHkgPSBidWlsZEhpZXJhcmNoeShldmVudHNfYWZrLCBldmVudHNfd2luZG93KTsKICAgICAgICAgICAgdGhpcy5jZW50ZXJNc2cgPSAnSG92ZXIgdG8gaW5zcGVjdCc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBGSVhNRTogVGhpcyBzaG91bGQgZG8gdGhlIGVxdWl2YWxlbnQgb2YgIk5vIGRhdGEiIHdoZW4gc3VjaCBpcyB0aGUgY2FzZSwgYnV0IGl0IGRvZXNuJ3QuCiAgICAgICAgICAgIGhpZXJhcmNoeSA9IHsKICAgICAgICAgICAgICB0aW1lc3RhbXA6ICcnLAogICAgICAgICAgICAgIC8vIFRPRE86IElmIHdlIHdhbnQgYSAxMi8yNGggY2xvY2ssIHRoaXMgaGFzIHRvIGNoYW5nZQogICAgICAgICAgICAgIGR1cmF0aW9uOiAwLAogICAgICAgICAgICAgIGRhdGE6IHsgdGl0bGU6ICdST09UJyB9LAogICAgICAgICAgICAgIGNoaWxkcmVuOiBbXSwKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5jZW50ZXJNc2cgPSAnTm8gZGF0YSc7CiAgICAgICAgICB9CiAgICAgICAgICBzdW5idXJzdC51cGRhdGUodGhpcy4kZWwsIGhpZXJhcmNoeSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["SunburstClock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"SunburstClock.vue","sourceRoot":"src/visualizations","sourcesContent":["<template lang=\"pug\">\ndiv.sunburst\n  div.sidebar\n    div.legend\n\n  div.main\n    div.chart\n      div.explanation\n        div.base\n          | {{ centerMsg }}\n        div.hover(style=\"visibility: hidden\")\n          div.date\n          div.title\n          div.time\n          div.duration\n          div.data(style=\"text-overflow: ellipsis; white-space: nowrap; overflow: hidden;\")\n</template>\n\n<style scoped lang=\"scss\">\n.sunburst {\n  font-family: 'Open Sans', sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  width: 100%;\n  height: 620px;\n  margin-top: 10px;\n\n  .main {\n    width: 750px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  .sidebar {\n    float: left;\n    height: 0;\n    width: 100px;\n  }\n\n  .sequence {\n    width: 600px;\n    height: 70px;\n  }\n\n  .legend {\n    padding: 10px 0 0 3px;\n  }\n\n  .sequence text,\n  .legend text {\n    font-weight: 600;\n    fill: #fff;\n  }\n\n  .chart {\n    position: relative;\n  }\n\n  .chart path {\n    stroke: #fff;\n  }\n\n  .explanation {\n    position: absolute;\n    top: 260px;\n    left: 305px;\n    width: 140px;\n    text-align: center;\n    color: #666;\n    z-index: 10; // might not be needed\n\n    .base {\n      color: #ddd;\n      font-size: 2em;\n    }\n\n    .hover {\n      .date {\n        font-size: 0.8em;\n      }\n\n      .time {\n        font-size: 1em;\n      }\n\n      .title {\n        font-size: 2em;\n        font-weight: bold;\n      }\n\n      .duration {\n        font-size: 1em;\n      }\n\n      .data {\n        font-size: 1em;\n      }\n    }\n  }\n}\n</style>\n\n<script>\n// NOTE: This is just a Vue.js component wrapper for timeline-simple.js\n//       Code should generally go in the framework-independent file.\n\n// TODO: Sunburst requires a hierarchical data format\n\nimport sunburst from './sunburst-clock.js';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default {\n  name: 'aw-sunburst-clock',\n  props: {\n    date: { type: String },\n    afkBucketId: { type: String },\n    windowBucketId: { type: String },\n  },\n\n  data: () => {\n    return {\n      starttime: moment(),\n      endtime: moment(),\n      centerMsg: 'Loading...',\n    };\n  },\n\n  watch: {\n    date: function (to) {\n      this.starttime = moment(to);\n      this.endtime = moment(this.starttime).add(1, 'days');\n      this.visualize();\n    },\n  },\n  mounted: function () {\n    sunburst.create(this.$el);\n    this.starttime = moment(this.date);\n    this.endtime = moment(this.date).add(1, 'days');\n    this.visualize();\n  },\n\n  methods: {\n    todaysEvents: async function (bucket_id) {\n      const querystr = [`RETURN = flood(query_bucket(\"${bucket_id}\"));`];\n      const data = await this.$aw.query(\n        [`${this.starttime.format()}/${this.endtime.format()}`],\n        querystr\n      );\n      return data[0];\n    },\n\n    visualize: function () {\n      function buildHierarchy(parents, children) {\n        parents = _.sortBy(parents, 'timestamp', 'desc');\n        children = _.sortBy(children, 'timestamp', 'desc');\n\n        let i_child = 0;\n        for (let i_parent = 0; i_parent < parents.length; i_parent++) {\n          const p = parents[i_parent];\n          const p_start = moment(p.timestamp);\n          const p_end = p_start.clone().add(p.duration, 'seconds');\n\n          p.children = [];\n          while (i_child < children.length) {\n            const e = children[i_child];\n            const e_start = moment(e.timestamp);\n            const e_end = e_start.clone().add(e.duration, 'seconds');\n\n            const before_parent = e_end.isBefore(p_start);\n            const within_parent = e_start.isAfter(p_start) && e_end.isBefore(p_end);\n            const after_parent = e_start.isAfter(p_end);\n\n            // TODO: This isn't correct, yet\n            if (before_parent) {\n              // Child is behind parent\n              //console.log(\"Too far behind: \" + i_child);\n              i_child++;\n            } else if (within_parent) {\n              //console.log(\"Added relation: \" + i_child);\n              p.children = _.concat(p.children, e);\n              i_child++;\n            } else if (after_parent) {\n              // Child is ahead of parent\n              //console.log(\"Too far ahead: \" + i_child);\n              break;\n            } else {\n              // TODO: Split events when this happens\n              console.warn('Between parents');\n              p.children = _.concat(p.children, e);\n              i_child++;\n            }\n          }\n        }\n\n        // Build the root node\n        //console.log(parents);\n        const m_start = moment(_.first(parents).timestamp);\n        const m_end = moment(_.tail(parents).timestamp);\n        const duration = (m_end - m_start) / 1000;\n        return {\n          timestamp: _.first(parents).timestamp,\n          // TODO: If we want a 12/24h clock, this has to change\n          duration: duration,\n          data: { title: 'ROOT' },\n          children: parents,\n        };\n      }\n\n      this.todaysEvents(this.afkBucketId).then(events_afk => {\n        this.todaysEvents(this.windowBucketId).then(events_window => {\n          let hierarchy = null;\n          if (events_afk.length > 0 && events_window.length > 0) {\n            hierarchy = buildHierarchy(events_afk, events_window);\n            this.centerMsg = 'Hover to inspect';\n          } else {\n            // FIXME: This should do the equivalent of \"No data\" when such is the case, but it doesn't.\n            hierarchy = {\n              timestamp: '',\n              // TODO: If we want a 12/24h clock, this has to change\n              duration: 0,\n              data: { title: 'ROOT' },\n              children: [],\n            };\n            this.centerMsg = 'No data';\n          }\n          sunburst.update(this.$el, hierarchy);\n        });\n      });\n    },\n  },\n};\n</script>\n"]}]}