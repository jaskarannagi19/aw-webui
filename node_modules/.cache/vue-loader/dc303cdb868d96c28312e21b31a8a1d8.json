{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/components/StopwatchEntry.vue?vue&type=style&index=0&id=3b7d7928&scoped=true&lang=scss&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/components/StopwatchEntry.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojcm9vdDpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsKfQo="},{"version":3,"sources":["StopwatchEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA","file":"StopwatchEntry.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\ndiv\n  div.row.px-3.py-2#root\n    div.flex-fill\n      span #[b {{event.data.label || 'No label'}}]\n      span(style=\"color: #888\") &nbsp;|&nbsp;\n      span(v-if=\"event.data.running\")\n        | Running for #[span(:title=\"event.timestamp\") {{event.data.running ? (now - event.timestamp) / 1000 : event.duration | friendlyduration}}]\n        | &nbsp;(Started {{ event.timestamp | shorttime }})\n      span(v-else)\n        | Started #[span(:title=\"event.timestamp\") {{event.timestamp | friendlytime}}]\n        | &nbsp;({{event.data.running ? (now - event.timestamp) / 1000 : event.duration | friendlyduration}})\n    div\n      b-button.mx-1(v-if=\"event.data.running\", @click=\"stop\", variant=\"outline-primary\", size=\"sm\")\n        icon.ml-0.mr-1(name=\"stop\")\n        | Stop\n      b-button.mx-1(v-if=\"!event.data.running\", @click=\"$emit('new')\", variant=\"outline-primary\", size=\"sm\")\n        icon.ml-0.mr-1(name=\"play\")\n        | Start new\n      b-button.mx-1(v-b-modal=\"'edit-modal-' + event.id\", variant=\"outline-dark\", size=\"sm\")\n        icon.ml-0.mr-1(name=\"edit\")\n        | Edit\n  event-editor(:event=\"event\", :bucket_id=\"bucket_id\", @save=\"save\", @delete=\"delete_\")\n</template>\n\n<style scoped lang=\"scss\">\n#root:hover {\n  background-color: #eee;\n}\n</style>\n\n<script>\nimport moment from 'moment';\nimport 'vue-awesome/icons/edit';\nimport 'vue-awesome/icons/stop';\nimport 'vue-awesome/icons/play';\n\nimport EventEditor from './EventEditor.vue';\n\nexport default {\n  name: 'StopwatchEntry',\n  components: {\n    'event-editor': EventEditor,\n  },\n  props: {\n    event: Object,\n    bucket_id: String,\n    now: {\n      type: moment,\n      default: moment(),\n    },\n  },\n  methods: {\n    stop: async function () {\n      let new_event = JSON.parse(JSON.stringify(this.event));\n      new_event.data.running = false;\n      new_event.duration = (moment() - moment(new_event.timestamp)) / 1000;\n      new_event = await this.$aw.replaceEvent(this.bucket_id, new_event);\n      this.$emit('update', new_event);\n    },\n    save: async function (new_event) {\n      this.$emit('update', new_event);\n    },\n    delete_: async function (new_event) {\n      this.$emit('delete', new_event);\n    },\n  },\n};\n</script>\n"]}]}