{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/settings/CategorizationSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/src/views/settings/CategorizationSettings.vue","mtime":1622212604097},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBDYXRlZ29yeUVkaXRUcmVlIGZyb20gJ34vY29tcG9uZW50cy9DYXRlZ29yeUVkaXRUcmVlLnZ1ZSc7CmltcG9ydCAndnVlLWF3ZXNvbWUvaWNvbnMvdW5kbyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NhdGVnb3JpemF0aW9uU2V0dGluZ3MnLAogIGNvbXBvbmVudHM6IHsKICAgIENhdGVnb3J5RWRpdFRyZWUsCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycygnY2F0ZWdvcmllcycsIFsnY2xhc3Nlc19oaWVyYXJjaHknXSksCiAgICAuLi5tYXBTdGF0ZSgnY2F0ZWdvcmllcycsIFsnY2xhc3Nlc191bnNhdmVkX2NoYW5nZXMnXSksCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NhdGVnb3JpZXMvbG9hZCcpOwogIH0sCiAgbWV0aG9kczogewogICAgYWRkQ2xhc3M6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjYXRlZ29yaWVzL2FkZENsYXNzJywgewogICAgICAgIG5hbWU6IFsnTmV3IGNsYXNzJ10sCiAgICAgICAgcnVsZTogeyB0eXBlOiAncmVnZXgnLCByZWdleDogJ0ZJTEwgTUUnIH0sCiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVDbGFzc2VzOiBhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRlZ29yaWVzL3NhdmUnKTsKICAgIH0sCiAgICByZXNldENsYXNzZXM6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NhdGVnb3JpZXMvbG9hZCcpOwogICAgfSwKICAgIHJlc3RvcmVEZWZhdWx0Q2xhc3NlczogYXN5bmMgZnVuY3Rpb24gKCkgewogICAgICBhd2FpdCB0aGlzLiRzdG9yZS5jb21taXQoJ2NhdGVnb3JpZXMvcmVzdG9yZURlZmF1bHRDbGFzc2VzJyk7CiAgICB9LAogICAgZXhwb3J0Q2xhc3NlczogZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygnRXhwb3J0aW5nIGNhdGVnb3JpZXMuLi4nKTsKCiAgICAgIGNvbnN0IGV4cG9ydF9kYXRhID0gewogICAgICAgIGNhdGVnb3JpZXM6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmNsYXNzZXMpLAogICAgICB9OwogICAgICBjb25zdCB0ZXh0ID0gSlNPTi5zdHJpbmdpZnkoZXhwb3J0X2RhdGEpOwogICAgICBjb25zdCBmaWxlbmFtZSA9ICdhdy1jYXRlZ29yeS1leHBvcnQuanNvbic7CgogICAgICAvLyBJbml0aWF0ZSBkb3dubG9hZGluZyBhIGZpbGUgYnkgY3JlYXRpbmcgYSBoaWRkZW4gYnV0dG9uIGFuZCBjbGlja2luZyBpdAogICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnaHJlZicsICdkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtOCwnICsgZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpKTsKICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgZmlsZW5hbWUpOwogICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbWVudCk7CiAgICAgIGVsZW1lbnQuY2xpY2soKTsKICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlbGVtZW50KTsKICAgIH0sCiAgICBpbXBvcnRDYXRlZ29yaWVzOiBhc3luYyBmdW5jdGlvbiAoZWxlbSkgewogICAgICBjb25zb2xlLmxvZygnSW1wb3J0aW5nIGNhdGVnb3JpZXMuLi4nKTsKCiAgICAgIC8vIEdldCBmaWxlIGZyb20gdXBsb2FkCiAgICAgIGNvbnN0IGZpbGUgPSBlbGVtLnRhcmdldC5maWxlc1swXTsKICAgICAgaWYgKGZpbGUudHlwZSAhPSAnYXBwbGljYXRpb24vanNvbicpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdPbmx5IEpTT04gZmlsZXMgYXJlIHBvc3NpYmxlIHRvIGltcG9ydCcpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgLy8gUmVhZCBhbmQgcGFyc2UgaW1wb3J0IHRleHQgdG8gSlNPTgogICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgZmlsZS50ZXh0KCk7CiAgICAgIGNvbnN0IGltcG9ydF9vYmogPSBKU09OLnBhcnNlKHRleHQpOwoKICAgICAgLy8gU2V0IGltcG9ydCB0byBjYXRlZ29yaWVzIGFzIHVuc2F2ZWQgY2hhbmdlcwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NhdGVnb3JpZXMvaW1wb3J0JywgaW1wb3J0X29iai5jYXRlZ29yaWVzKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["CategorizationSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CategorizationSettings.vue","sourceRoot":"src/views/settings","sourcesContent":["<template lang=\"pug\">\ndiv\n  h5.d-inline-block\n    div Categorization\n  div.float-right\n    b-btn.ml-1(@click=\"restoreDefaultClasses\", variant=\"outline-warning\" size=\"sm\")\n      icon(name=\"undo\")\n      | Restore defaults\n    label.btn.btn-sm.ml-1.btn-outline-primary(style=\"margin: 0\")\n      | Import\n      input(type=\"file\" @change=\"importCategories\" hidden)\n    b-btn.ml-1(@click=\"exportClasses\", variant=\"outline-primary\" size=\"sm\")\n      | Export\n  p\n    | Rules for categorizing events. An event can only have one category. If several categories match, the deepest one will be chosen.\n  p\n    | For help on how to write categorization rules, see #[a(href=\"https://docs.activitywatch.net/en/latest/features/categorization.html\") the documentation].\n\n  div.my-4\n    b-alert(variant=\"warning\" :show=\"classes_unsaved_changes\")\n      | You have unsaved changes!\n      div.float-right(style=\"margin-top: -0.15em; margin-right: -0.6em\")\n        b-btn.ml-2(@click=\"saveClasses\", variant=\"success\" size=\"sm\")\n          | Save\n        b-btn.ml-2(@click=\"resetClasses\", variant=\"warning\" size=\"sm\")\n          | Discard\n    div(v-for=\"_class in classes_hierarchy\")\n      CategoryEditTree(:_class=\"_class\")\n\n  div.row\n    div.col-sm-12\n      b-btn(@click=\"addClass\")\n        icon.mr-2(name=\"plus\")\n        | Add category\n      b-btn.float-right(@click=\"saveClasses\", variant=\"success\" :disabled=\"!classes_unsaved_changes\")\n        | Save\n</template>\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport CategoryEditTree from '~/components/CategoryEditTree.vue';\nimport 'vue-awesome/icons/undo';\n\nexport default {\n  name: 'CategorizationSettings',\n  components: {\n    CategoryEditTree,\n  },\n  computed: {\n    ...mapGetters('categories', ['classes_hierarchy']),\n    ...mapState('categories', ['classes_unsaved_changes']),\n  },\n  mounted() {\n    this.$store.dispatch('categories/load');\n  },\n  methods: {\n    addClass: function () {\n      this.$store.commit('categories/addClass', {\n        name: ['New class'],\n        rule: { type: 'regex', regex: 'FILL ME' },\n      });\n    },\n    saveClasses: async function () {\n      await this.$store.dispatch('categories/save');\n    },\n    resetClasses: async function () {\n      await this.$store.dispatch('categories/load');\n    },\n    restoreDefaultClasses: async function () {\n      await this.$store.commit('categories/restoreDefaultClasses');\n    },\n    exportClasses: function () {\n      console.log('Exporting categories...');\n\n      const export_data = {\n        categories: JSON.parse(localStorage.classes),\n      };\n      const text = JSON.stringify(export_data);\n      const filename = 'aw-category-export.json';\n\n      // Initiate downloading a file by creating a hidden button and clicking it\n      const element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n    importCategories: async function (elem) {\n      console.log('Importing categories...');\n\n      // Get file from upload\n      const file = elem.target.files[0];\n      if (file.type != 'application/json') {\n        console.error('Only JSON files are possible to import');\n        return;\n      }\n\n      // Read and parse import text to JSON\n      const text = await file.text();\n      const import_obj = JSON.parse(text);\n\n      // Set import to categories as unsaved changes\n      this.$store.commit('categories/import', import_obj.categories);\n    },\n  },\n};\n</script>\n"]}]}