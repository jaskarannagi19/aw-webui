{"remainingRequest":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/activity/Activity.vue?vue&type=style&index=0&id=8934d124&lang=scss&scoped=true&","dependencies":[{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/src/views/activity/Activity.vue","mtime":1622830085274},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaskaran/code/jaskaran/activitywatch/aw-server-rust/aw-webui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKJGJ1dHRvbmNvbG9yOiAjZGRkOwokYm9yZGVyY29sb3I6ICNkZGQ7CgoubmF2IHsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGJvcmRlcmNvbG9yOwoKICAubmF2LWl0ZW0gewogICAgbWFyZ2luLWJvdHRvbTogLTJweDsKCiAgICAubmF2LWxpbmsgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uY29sb3I7CiAgICAgIG1hcmdpbjogMCAwLjJlbSAwIDAuMmVtOwogICAgICBwYWRkaW5nOiAwLjRlbSAwLjVlbSAwLjFlbSAwLjVlbTsKICAgICAgYm9yZGVyOiAycHggc29saWQgJGJvcmRlcmNvbG9yOwogICAgICBib3JkZXItYm90dG9tOiBub25lOwogICAgICBib3JkZXItcmFkaXVzOiAwLjVyZW0gMC41cmVtIDAgMDsKICAgICAgY29sb3I6ICMxMTEgIWltcG9ydGFudDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwoKICAgICAgJjpob3ZlciB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsKICAgICAgfQoKICAgICAgJi5yb3V0ZXItbGluay1leGFjdC1hY3RpdmUgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICAgICAgY29sb3I6ICMzMzMgIWltcG9ydGFudDsKCiAgICAgICAgJjpob3ZlciB7CiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Activity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Activity.vue","sourceRoot":"src/views/activity","sourcesContent":["<template lang=\"pug\">\ndiv\n  h3.mb-0 Activity for {{ periodReadable }}\n\n  div.mb-2\n    ul.list-group.list-group-horizontal-md.mb-3(style=\"font-size: 0.9em; opacity: 0.7\")\n      li.list-group-item.pl-0.pr-3.py-0(style=\"border: 0\")\n        | #[b Host:] {{ host }}\n      li.list-group-item.pl-0.pr-3.py-0(style=\"border: 0\")\n        | #[b Time active:] {{ $store.state.activity.active.duration | friendlyduration }}\n\n  div.mb-2.d-flex\n    div\n      b-input-group\n        b-input-group-prepend\n          b-button.px-2(:to=\"link_prefix + '/' + previousPeriod() + '/' + subview\",\n                   variant=\"outline-dark\")\n            icon(name=\"arrow-left\")\n        b-select.px-2(:value=\"periodLength\", :options=\"['day', 'week', 'month']\",\n                 @change=\"(periodLength) => setDate(_date, periodLength)\")\n        b-input-group-append\n          b-button.px-2(:to=\"link_prefix + '/' + nextPeriod() + '/' + subview\",\n                   :disabled=\"nextPeriod() > today\", variant=\"outline-dark\")\n            icon(name=\"arrow-right\")\n\n    div.mx-2(v-if=\"periodLength === 'day'\")\n      input.form-control.px-2(id=\"date\" type=\"date\" :value=\"_date\" :max=\"today\"\n                         @change=\"setDate($event.target.value, periodLength)\")\n\n    div.ml-auto\n      b-button-group\n        b-button.px-2(@click=\"refresh(true)\", variant=\"outline-dark\")\n          icon(name=\"sync\")\n          span.d-none.d-md-inline\n            |  Refresh\n\n  aw-periodusage(:periodusage_arr=\"periodusage\", @update=\"setDate\")\n\n  ul.row.nav.nav-tabs.mt-3.px-3\n    li.nav-item(v-for=\"view in views\")\n      router-link.nav-link(:to=\"{ name: 'activity-view', params: {...$route.params, view_id: view.id}}\" :class=\"{'router-link-exact-active': currentView.id == view.id}\")\n        h6 {{view.name}}\n\n    li.nav-item(style=\"margin-left: auto\")\n      a.nav-link(@click=\"$refs.new_view.show()\")\n        h6\n          icon(name=\"plus\")\n          span.d-none.d-md-inline\n            | New view\n\n  b-modal(id=\"new_view\" ref=\"new_view\" title=\"New view\" @show=\"resetModal\" @hidden=\"resetModal\" @ok=\"handleOk\")\n    div.my-1\n      b-input-group.my-1(prepend=\"ID\")\n        b-form-input(v-model=\"new_view.id\")\n      b-input-group.my-1(prepend=\"Name\")\n        b-form-input(v-model=\"new_view.name\")\n\n  div\n    router-view\n\n  div\n    hr\n    h5 Options\n\n    div.row\n      div.col-lg-6\n        b-form-checkbox(v-model=\"filterAFK\")\n          | Filter AFK\n        b-form-checkbox(v-model=\"includeAudible\")\n          | Count audible browser tab as active\n\n      div.col-lg-6\n        b-form-group(label=\"Show/filter category\" label-cols=\"5\" label-cols-lg=\"4\")\n          b-form-select(v-model=\"filterCategory\", :options=\"categories\")\n\n    aw-devonly\n      b-btn(id=\"load-demo\", @click=\"load_demo\")\n        | Load demo data\n</template>\n\n<style lang=\"scss\" scoped>\n$buttoncolor: #ddd;\n$bordercolor: #ddd;\n\n.nav {\n  border-bottom: 2px solid $bordercolor;\n\n  .nav-item {\n    margin-bottom: -2px;\n\n    .nav-link {\n      background-color: $buttoncolor;\n      margin: 0 0.2em 0 0.2em;\n      padding: 0.4em 0.5em 0.1em 0.5em;\n      border: 2px solid $bordercolor;\n      border-bottom: none;\n      border-radius: 0.5rem 0.5rem 0 0;\n      color: #111 !important;\n      cursor: pointer;\n\n      &:hover {\n        background-color: #f8f8f8;\n      }\n\n      &.router-link-exact-active {\n        background-color: #fff;\n        color: #333 !important;\n\n        &:hover {\n          background-color: #fff;\n        }\n      }\n    }\n  }\n}\n</style>\n\n<script>\nimport moment from 'moment';\nimport { get_day_start_with_offset, get_today } from '~/util/time';\nimport _ from 'lodash';\n\nimport 'vue-awesome/icons/arrow-left';\nimport 'vue-awesome/icons/arrow-right';\nimport 'vue-awesome/icons/sync';\nimport 'vue-awesome/icons/plus';\nimport 'vue-awesome/icons/edit';\nimport 'vue-awesome/icons/times';\nimport 'vue-awesome/icons/save';\n\nexport default {\n  name: 'Activity',\n  props: {\n    host: String,\n    date: {\n      type: String,\n      // NOTE: This does not work as you'd might expect since the default is set on\n      // initialization, which would lead to the same date always being returned,\n      // even if the day has changed.\n      // Instead, use the computed _date.\n      //default: get_today(),\n    },\n    periodLength: {\n      type: String,\n      default: 'day',\n    },\n  },\n  data: function () {\n    return {\n      today: get_today(),\n      filterCategory: null,\n      includeAudible: true,\n      filterAFK: true,\n      new_view: {},\n    };\n  },\n  computed: {\n    views: function () {\n      return this.$store.state.views.views;\n    },\n    currentView: function () {\n      return this.views.find(v => v.id == this.$route.params.view_id) || this.views[0];\n    },\n    _date: function () {\n      return this.date || get_today();\n    },\n    subview: function () {\n      return this.$route.meta.subview;\n    },\n    categories: function () {\n      const cats = this.$store.getters['categories/all_categories'];\n      const entries = cats\n        .map(c => {\n          return { text: c.join(' > '), value: c };\n        })\n        .sort((a, b) => a.text > b.text);\n      return [\n        { text: 'All', value: null },\n        { text: 'Uncategorized', value: ['Uncategorized'] },\n      ].concat(entries);\n    },\n    filterCategories: function () {\n      if (this.filterCategory) {\n        const cats = this.$store.getters['categories/all_categories'];\n        const isChild = p => c => c.length > p.length && _.isEqual(p, c.slice(0, p.length));\n        const children = _.filter(cats, isChild(this.filterCategory));\n        return [this.filterCategory].concat(children);\n      } else {\n        return null;\n      }\n    },\n    link_prefix: function () {\n      return `/activity/${this.host}/${this.periodLength}`;\n    },\n    periodusage: function () {\n      return this.$store.getters['activity/getActiveHistoryAroundTimeperiod'](this.timeperiod);\n    },\n    timeperiod: function () {\n      return { start: get_day_start_with_offset(this._date), length: [1, this.periodLength] };\n    },\n    dateformat: function () {\n      if (this.periodLength === 'day') {\n        return 'YYYY-MM-DD';\n      } else if (this.periodLength === 'week') {\n        return 'YYYY[ W]WW';\n      } else if (this.periodLength === 'month') {\n        return 'YYYY-MM';\n      } else if (this.periodLength === 'year') {\n        return 'YYYY';\n      } else {\n        return 'YYYY-MM-DD';\n      }\n    },\n    periodReadable: function () {\n      return moment(this.timeperiod.start).format(this.dateformat);\n    },\n    periodLengthMoment: function () {\n      return this.periodLengthConvertMoment(this.periodLength);\n    },\n  },\n  watch: {\n    host: function () {\n      this.refresh();\n    },\n    timeperiod: function () {\n      this.refresh();\n    },\n    filterCategory: function () {\n      this.refresh();\n    },\n    filterAFK: function () {\n      this.refresh();\n    },\n    includeAudible: function () {\n      this.refresh();\n    },\n  },\n\n  mounted: async function () {\n    this.$store.dispatch('views/load');\n    this.$store.dispatch('categories/load');\n    await this.refresh();\n  },\n\n  methods: {\n    previousPeriod: function () {\n      return moment(this._date).subtract(1, `${this.periodLength}s`).format('YYYY-MM-DD');\n    },\n    nextPeriod: function () {\n      return moment(this._date).add(1, `${this.periodLength}s`).format('YYYY-MM-DD');\n    },\n    periodLengthConvertMoment(periodLength) {\n      if (periodLength === 'day') {\n        return 'day';\n      } else if (periodLength === 'week') {\n        /* This is necessary so the week starts on Monday instead of Sunday */\n        return 'isoWeek';\n      } else if (periodLength === 'month') {\n        return 'month';\n      } else if (periodLength === 'year') {\n        return 'year';\n      } else {\n        console.error('Invalid periodLength ${periodLength}, defaulting to \"day\"');\n        return 'day';\n      }\n    },\n\n    setDate: function (date, periodLength) {\n      // periodLength is an optional argument, default to this.periodLength\n      if (!periodLength) {\n        periodLength = this.periodLength;\n      }\n      const new_period_length_moment = this.periodLengthConvertMoment(periodLength);\n      const new_date = moment(date).startOf(new_period_length_moment).format('YYYY-MM-DD');\n      console.log(new_date, periodLength);\n      this.$router.push(`/activity/${this.host}/${periodLength}/${new_date}/${this.subview}`);\n    },\n\n    refresh: async function (force) {\n      await this.$store.dispatch('activity/ensure_loaded', {\n        timeperiod: this.timeperiod,\n        host: this.host,\n        force: force,\n        filterAFK: this.filterAFK,\n        includeAudible: this.includeAudible,\n        filterCategories: this.filterCategories,\n      });\n    },\n\n    load_demo: async function () {\n      await this.$store.dispatch('activity/load_demo');\n    },\n\n    checkFormValidity() {\n      // All checks must be false for check to pass\n      const checks = {\n        // Check if view id is unique\n        'ID is not unique': this.$store.state.views.views.map(v => v.id).includes(this.new_view.id),\n        'Missing name': this.new_view.name === '',\n      };\n      const errors = Object.entries(checks)\n        .filter(([_k, v]) => v)\n        .map(([k, _v]) => k);\n      const valid = errors.length == 0;\n      if (!valid) {\n        alert(`Invalid form input: ${errors}`);\n      }\n      return valid;\n    },\n\n    handleOk(event) {\n      // Prevent modal from closing\n      event.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n\n    handleSubmit() {\n      // Exit when the form isn't valid\n      const valid = this.checkFormValidity();\n      if (!valid) {\n        return;\n      }\n\n      this.$store.commit('views/addView', { id: this.new_view.id, name: this.new_view.name });\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.new_view.hide();\n      });\n    },\n\n    resetModal() {\n      this.new_view = {\n        id: '',\n        name: '',\n      };\n    },\n  },\n};\n</script>\n"]}]}